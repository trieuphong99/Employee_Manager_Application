{"ast":null,"code":"import actionTypes from \"../../commons/const/actionTypes\";\nimport axios from \"axios\";\nimport { showLoading } from \"./loading\";\nimport { hideLoading } from \"./loading\";\nimport { toastError, toastSuccess } from \"../../commons/helpers/toastHelpers\";\nimport moment from 'moment';\nimport Time from '../../commons/const/Time'; // import fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n// mock.onPost('/check_in').reply(200);\n// mock.onPost('/check_out').reply(200);\n// mock.onPost('/staff/report_late_early').reply(200);\n// mock.onGet('/timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onPost('/offsets').reply(200);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/dayoffs').reply(200, fakeData.currentuserdayoff)\n// mock.onGet('/overtimes').reply(200, fakeData.currentuserovertime)\n// mock.onGet('/reports/10').reply(200, fakeData.report)\n\nexport var getStaffTimeSheet = function getStaffTimeSheet(data) {\n  var params = {\n    from_date: data.startTime,\n    to_date: data.endTime,\n    current_page: String(data.currentPage),\n    sort_type: data.sort_type,\n    sort_field: data.sort_field,\n    filter_type: data.filter_type\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get(\"/timesheets\", {\n      params: params\n    }).then(function (res) {\n      dispatch(setTimeSheet(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error.data);\n      toastError(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var offSet = function offSet(data) {\n  var body = {\n    date: moment(data.date).format(Time.crossDMY),\n    for_date: moment(data.for_date).format(Time.crossDMY)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.post(\"/compensations\", body).then(function (res) {\n      toastSuccess(\"Successful!\");\n    })[\"catch\"](function (error) {\n      toastError(error.response.data);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n      data.reload();\n    });\n  };\n};\nexport var editOffSet = function editOffSet(data) {\n  var body = {\n    date: moment(data.date).format(Time.crossDMY),\n    for_date: moment(data.for_date).format(Time.crossDMY)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.put(\"/compensations/\".concat(data.id), body).then(function (res) {\n      toastSuccess(\"Successful!\");\n    })[\"catch\"](function (error) {\n      toastError(error.response.data);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n      data.reload();\n    });\n  };\n};\nexport var deleteOffSet = function deleteOffSet(data) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios[\"delete\"](\"/compensations/\".concat(data.id)).then(function (res) {\n      toastSuccess(\"Successful!\");\n    })[\"catch\"](function (error) {\n      toastError(error.response.data);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n      data.reload();\n    });\n  };\n};\nexport var setTimeSheet = function setTimeSheet(data) {\n  return {\n    type: actionTypes.setTimeSheet,\n    data: data\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/actions/timeSheet.js"],"names":["actionTypes","axios","showLoading","hideLoading","toastError","toastSuccess","moment","Time","getStaffTimeSheet","data","params","from_date","startTime","to_date","endTime","current_page","String","currentPage","sort_type","sort_field","filter_type","dispatch","get","then","res","setTimeSheet","error","console","log","offSet","body","date","format","crossDMY","for_date","post","response","reload","editOffSet","put","id","deleteOffSet","type"],"mappings":"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","sourcesContent":["import actionTypes from \"../../commons/const/actionTypes\";\nimport axios from \"axios\";\nimport { showLoading } from \"./loading\";\nimport { hideLoading } from \"./loading\";\nimport { toastError, toastSuccess } from \"../../commons/helpers/toastHelpers\";\nimport moment from 'moment';\nimport Time from '../../commons/const/Time';\n// import fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n\n// mock.onPost('/check_in').reply(200);\n// mock.onPost('/check_out').reply(200);\n// mock.onPost('/staff/report_late_early').reply(200);\n// mock.onGet('/timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onPost('/offsets').reply(200);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/dayoffs').reply(200, fakeData.currentuserdayoff)\n// mock.onGet('/overtimes').reply(200, fakeData.currentuserovertime)\n// mock.onGet('/reports/10').reply(200, fakeData.report)\n\nexport const getStaffTimeSheet = data => {\n  const params = {\n    from_date: data.startTime,\n    to_date: data.endTime,\n    current_page: String(data.currentPage),\n    sort_type: data.sort_type,\n    sort_field: data.sort_field,\n    filter_type: data.filter_type\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .get(\"/timesheets\", { params: params })\n      .then(function(res) {\n        dispatch(setTimeSheet(res.data));\n      })\n      .catch(function(error) {\n        console.log(error.data);\n        toastError(error);\n      })\n      .finally(function() {\n        dispatch(hideLoading());\n      });\n  };\n};\n\nexport const offSet = data => {\n  const body = {\n    date: moment(data.date).format(Time.crossDMY),\n    for_date: moment(data.for_date).format(Time.crossDMY)\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .post(\"/compensations\", body)\n      .then(function(res) {\n        toastSuccess(\"Successful!\");\n      })\n      .catch(function(error) {\n        toastError(error.response.data);\n      })\n      .finally(function() {\n        dispatch(hideLoading());\n        data.reload();\n      });\n  };\n};\n\nexport const editOffSet = data => {\n  const body = {\n    date: moment(data.date).format(Time.crossDMY),\n    for_date: moment(data.for_date).format(Time.crossDMY)\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .put(`/compensations/${data.id}`, body)\n      .then(function(res) {\n        toastSuccess(\"Successful!\");\n      })\n      .catch(function(error) {\n        toastError(error.response.data);\n      })\n      .finally(function() {\n        dispatch(hideLoading());\n        data.reload();\n      });\n  };\n};\n\nexport const deleteOffSet = data => {\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .delete(`/compensations/${data.id}`)\n      .then(function(res) {\n        toastSuccess(\"Successful!\");\n      })\n      .catch(function(error) {\n        toastError(error.response.data);\n      })\n      .finally(function() {\n        dispatch(hideLoading());\n        data.reload();\n      });\n  };\n};\n\nexport const setTimeSheet = data => {\n  return { type: actionTypes.setTimeSheet, data: data };\n};\n"]},"metadata":{},"sourceType":"module"}