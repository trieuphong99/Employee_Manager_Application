{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/checkIn/modalReason.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport { Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport ModalCompensation from \"./modalCompensation\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\n\nfunction ModalReason(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalCompensation = _useState2[0],\n      setModalCompensation = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var toggleModal = function toggleModal() {\n    return setModal(!modal);\n  };\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      reason = _useState6[0],\n      setReason = _useState6[1];\n\n  var finishReport = function finishReport() {\n    props.checkIn(reason);\n    toggleModal();\n    setModalCompensation(!modalCompensation);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Why are you late for work ?\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    \"for\": \"exampleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Reason\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"text\",\n    id: \"exampleText\",\n    onChange: function onChange(e) {\n      return setReason(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: finishReport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Check In\"))), modalCompensation && /*#__PURE__*/React.createElement(ModalCompensation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 30\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkIn: function checkIn(reason) {\n      dispatch(actions.checkIn({\n        reason: reason\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalReason);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/checkIn/modalReason.js"],"names":["React","useState","Button","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","ModalCompensation","connect","actions","ModalReason","props","modalCompensation","setModalCompensation","modal","setModal","toggleModal","reason","setReason","finishReport","checkIn","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport ModalCompensation from \"./modalCompensation\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\n\nfunction ModalReason(props) {\n\n  const [modalCompensation, setModalCompensation] = useState(false);\n\n  const [modal, setModal] = useState(true);\n  const toggleModal = () => setModal(!modal);\n\n  const [reason, setReason] = useState('');\n  const finishReport = () => {\n    props.checkIn(reason);\n    toggleModal();\n    setModalCompensation(!modalCompensation);\n  }\n\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Why are you late for work ?</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label for=\"exampleText\">Reason</Label>\n            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={(e) => setReason(e.target.value)} />\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>Cancel</Button>\n          <Button color=\"success\" onClick={finishReport}>Check In</Button>\n        </ModalFooter>\n      </Modal>\n      {\n        modalCompensation && <ModalCompensation />\n      }\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkIn: (reason) => { dispatch(actions.checkIn({ reason: reason })) },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalReason);"]},"metadata":{},"sourceType":"module"}