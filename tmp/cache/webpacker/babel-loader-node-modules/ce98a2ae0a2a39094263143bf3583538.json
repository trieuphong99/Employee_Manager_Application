{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/packs/staff_application.js\";\n\n/* eslint no-console:0 */\n// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n//\n// To reference this file, add <%= javascript_pack_tag 'application' %> to the appropriate\n// layout file, like app/views/layouts/application.html.erb\n// Uncomment to copy all static images under ../images to the output folder and reference\n// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)\n// or the `imagePath` JavaScript helper below.\n//\n// const images = require.context('../images', true)\n// const imagePath = (name) => images(name, true)\n// console.log('Hello World from Webpacker')\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport myReducer from '../staff/reducer';\nimport Staff from '../staff';\n\nvar configureStore = function configureStore() {\n  var middlewares = [thunk];\n  var enhancers = [applyMiddleware.apply(void 0, middlewares)];\n  var store = createStore(myReducer, composeWithDevTools.apply(void 0, enhancers));\n  return store;\n};\n\nvar store = configureStore();\ndocument.addEventListener('DOMContentLoaded', function () {\n  ReactDOM.render(React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Staff, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), document.body.appendChild(document.createElement('div')));\n});","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/packs/staff_application.js"],"names":["React","ReactDOM","createStore","applyMiddleware","Provider","thunk","composeWithDevTools","myReducer","Staff","configureStore","middlewares","enhancers","store","document","addEventListener","render","body","appendChild","createElement"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,WAAW,GAAG,CAACL,KAAD,CAApB;AACA,MAAMM,SAAS,GAAG,CAACR,eAAe,MAAf,SAAmBO,WAAnB,CAAD,CAAlB;AACA,MAAME,KAAK,GAAGV,WAAW,CAACK,SAAD,EAAYD,mBAAmB,MAAnB,SAAuBK,SAAvB,CAAZ,CAAzB;AACA,SAAOC,KAAP;AACD,CALD;;AAOA,IAAMA,KAAK,GAAGH,cAAc,EAA5B;AAEAI,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClDb,EAAAA,QAAQ,CAACc,MAAT,CACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIEC,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAA1B,CAJF;AAMD,CAPD","sourcesContent":["/* eslint no-console:0 */\n// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n//\n// To reference this file, add <%= javascript_pack_tag 'application' %> to the appropriate\n// layout file, like app/views/layouts/application.html.erb\n\n\n// Uncomment to copy all static images under ../images to the output folder and reference\n// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)\n// or the `imagePath` JavaScript helper below.\n//\n// const images = require.context('../images', true)\n// const imagePath = (name) => images(name, true)\n\n// console.log('Hello World from Webpacker')\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport myReducer from '../staff/reducer';\nimport Staff from '../staff';\n\nconst configureStore = () => {\n  const middlewares = [thunk];\n  const enhancers = [applyMiddleware(...middlewares)];\n  const store = createStore(myReducer, composeWithDevTools(...enhancers));\n  return store;\n};\n\nconst store = configureStore();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Staff />\n    </Provider>,\n    document.body.appendChild(document.createElement('div')),\n  )\n})\n"]},"metadata":{},"sourceType":"module"}