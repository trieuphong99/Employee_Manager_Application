{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Menu, { MenuItem } from 'rc-menu';\nimport * as React from 'react';\nimport { MentionsContextConsumer } from './MentionsContext';\n/**\n * We only use Menu to display the candidate.\n * The focus is controlled by textarea to make accessibility easy.\n */\n\nvar DropdownMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(DropdownMenu, _React$Component);\n\n  function DropdownMenu() {\n    var _this;\n\n    _classCallCheck(this, DropdownMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownMenu).apply(this, arguments));\n\n    _this.renderDropdown = function (_ref) {\n      var notFoundContent = _ref.notFoundContent,\n          activeIndex = _ref.activeIndex,\n          setActiveIndex = _ref.setActiveIndex,\n          selectOption = _ref.selectOption,\n          onFocus = _ref.onFocus,\n          onBlur = _ref.onBlur;\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          options = _this$props.options;\n      var activeOption = options[activeIndex] || {};\n      return /*#__PURE__*/React.createElement(Menu, {\n        prefixCls: \"\".concat(prefixCls, \"-menu\"),\n        activeKey: activeOption.value,\n        onSelect: function onSelect(_ref2) {\n          var key = _ref2.key;\n          var option = options.find(function (_ref3) {\n            var value = _ref3.value;\n            return value === key;\n          });\n          selectOption(option);\n        },\n        onFocus: onFocus,\n        onBlur: onBlur\n      }, options.map(function (option, index) {\n        var value = option.value,\n            disabled = option.disabled,\n            children = option.children,\n            className = option.className,\n            style = option.style;\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: value,\n          disabled: disabled,\n          className: className,\n          style: style,\n          onMouseEnter: function onMouseEnter() {\n            setActiveIndex(index);\n          }\n        }, children);\n      }), !options.length && /*#__PURE__*/React.createElement(MenuItem, {\n        disabled: true\n      }, notFoundContent));\n    };\n\n    return _this;\n  }\n\n  _createClass(DropdownMenu, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(MentionsContextConsumer, null, this.renderDropdown);\n    }\n  }]);\n\n  return DropdownMenu;\n}(React.Component);\n\nexport default DropdownMenu;","map":null,"metadata":{},"sourceType":"module"}