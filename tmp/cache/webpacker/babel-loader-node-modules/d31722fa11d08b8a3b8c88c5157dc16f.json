{"ast":null,"code":"import axios from 'axios';\nimport actionTypes from '../../commons/const/actionTypes';\nimport { toastSuccess } from '../../commons/helpers/toastHelpers';\nimport { showLoading, hideLoading } from './loading';\nimport FormData from 'form-data'; //Get CurrentUser\n\nexport var getInfoCurrentUser = function getInfoCurrentUser() {\n  return function (dispatch) {\n    axios.get(\"users/\".concat(current_user_id)) //hard code\n    .then(function (res) {\n      dispatch(setCurrentUser(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var changeAvatarUser = function changeAvatarUser(avatar) {\n  var formData = new FormData();\n  formData.append('avatar', avatar); // const body = {\n  //   avatar: String(avatar)\n  // };\n\n  console.log(formData.get('avatar'));\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios({\n      url: '/profile',\n      method: 'put',\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: actionTypes.CHANGE_AVATAR_USER,\n        data: res.data\n      });\n      toastSuccess('Successful!');\n    })[\"catch\"](function (er) {\n      toastSuccess(\"\".concat(er.response.data));\n    })[\"finally\"](function () {\n      formData[\"delete\"]('avatar');\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setCurrentUser = function setCurrentUser(data, status) {\n  return {\n    type: actionTypes.setCurrentUser,\n    data: data,\n    status: status\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/actions/account.js"],"names":["axios","actionTypes","toastSuccess","showLoading","hideLoading","FormData","getInfoCurrentUser","dispatch","get","current_user_id","then","res","setCurrentUser","data","error","console","log","changeAvatarUser","avatar","formData","append","url","method","headers","type","CHANGE_AVATAR_USER","er","response","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,WAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtC,SAAO,UAACC,QAAD,EAAc;AACnBP,IAAAA,KAAK,CAACQ,GAAN,iBAAmBC,eAAnB,GAAsC;AAAtC,KACGC,IADH,CACQ,UAAUC,GAAV,EAAe;AACnBJ,MAAAA,QAAQ,CAACK,cAAc,CAACD,GAAG,CAACE,IAAL,CAAf,CAAR;AACD,KAHH,WAIS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH;AAOD,GARD;AASD,CAVM;AAWP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;AAC1C,MAAIC,QAAQ,GAAG,IAAId,QAAJ,EAAf;AACAc,EAAAA,QAAQ,CAACC,MAAT,CAAgB,QAAhB,EAA0BF,MAA1B,EAF0C,CAG1C;AACA;AACA;;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACX,GAAT,CAAa,QAAb,CAAZ;AACA,SAAO,UAAAD,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AACAH,IAAAA,KAAK,CAAC;AACJqB,MAAAA,GAAG,EAAE,UADD;AAEJC,MAAAA,MAAM,EAAE,KAFJ;AAGJT,MAAAA,IAAI,EAAEM,QAHF;AAIJI,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAJL,KAAD,CAAL,CAMGb,IANH,CAMQ,UAAAC,GAAG,EAAI;AACXI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACE,IAAhB;AACAN,MAAAA,QAAQ,CAAC;AAACiB,QAAAA,IAAI,EAAEvB,WAAW,CAACwB,kBAAnB;AAAuCZ,QAAAA,IAAI,EAAEF,GAAG,CAACE;AAAjD,OAAD,CAAR;AACAX,MAAAA,YAAY,CAAC,aAAD,CAAZ;AACD,KAVH,WAWS,UAAAwB,EAAE,EAAI;AACXxB,MAAAA,YAAY,WAAIwB,EAAE,CAACC,QAAH,CAAYd,IAAhB,EAAZ;AACD,KAbH,aAcW,YAAM;AACbM,MAAAA,QAAQ,UAAR,CAAgB,QAAhB;AACAZ,MAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACD,KAjBH;AAkBD,GApBD;AAqBD,CA5BM;AA8BP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOe,MAAP,EAAkB;AAAE,SAAO;AAAEJ,IAAAA,IAAI,EAAEvB,WAAW,CAACW,cAApB;AAAoCC,IAAAA,IAAI,EAAEA,IAA1C;AAAgDe,IAAAA,MAAM,EAAEA;AAAxD,GAAP;AAAyE,CAApH","sourcesContent":["import axios from 'axios';\nimport actionTypes from '../../commons/const/actionTypes'\nimport { toastSuccess } from '../../commons/helpers/toastHelpers';\nimport { showLoading, hideLoading } from './loading';\nimport FormData from 'form-data';\n\n//Get CurrentUser\nexport const getInfoCurrentUser = () => {\n  return (dispatch) => {\n    axios.get(`users/${current_user_id}`) //hard code\n      .then(function (res) {\n        dispatch(setCurrentUser(res.data))\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n}\nexport const changeAvatarUser = (avatar) => {\n  let formData = new FormData();\n  formData.append('avatar', avatar);\n  // const body = {\n  //   avatar: String(avatar)\n  // };\n  console.log(formData.get('avatar'))\n  return dispatch => {\n    dispatch(showLoading());\n    axios({\n      url: '/profile',\n      method: 'put',\n      data: formData,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    })\n      .then(res => {\n        console.log(res.data)\n        dispatch({type: actionTypes.CHANGE_AVATAR_USER, data: res.data });\n        toastSuccess('Successful!');\n      })\n      .catch(er => {\n        toastSuccess(`${er.response.data}`);\n      })\n      .finally(() => {\n        formData.delete('avatar')\n        dispatch(hideLoading());\n      })\n  }\n}\n\nexport const setCurrentUser = (data, status) => { return { type: actionTypes.setCurrentUser, data: data, status: status } }\n"]},"metadata":{},"sourceType":"module"}