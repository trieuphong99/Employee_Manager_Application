{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $ObjectCreate = GetIntrinsic('%Object.create%', true);\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar Type = require('./Type');\n\nvar hasProto = !({\n  __proto__: null\n} instanceof Object); // https://www.ecma-international.org/ecma-262/6.0/#sec-objectcreate\n\nmodule.exports = function ObjectCreate(proto, internalSlotsList) {\n  if (proto !== null && Type(proto) !== 'Object') {\n    throw new $TypeError('Assertion failed: `proto` must be null or an object');\n  }\n\n  var slots = arguments.length < 2 ? [] : internalSlotsList;\n\n  if (slots.length > 0) {\n    throw new $SyntaxError('es-abstract does not yet support internal slots');\n  }\n\n  if ($ObjectCreate) {\n    return $ObjectCreate(proto);\n  }\n\n  if (hasProto) {\n    return {\n      __proto__: proto\n    };\n  }\n\n  if (proto === null) {\n    throw new $SyntaxError('native Object.create support is required to create null objects');\n  }\n\n  var T = function T() {};\n\n  T.prototype = proto;\n  return new T();\n};","map":null,"metadata":{},"sourceType":"module"}