{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport actionTypes from '../../commons/const/actionTypes';\nimport _ from 'lodash';\nimport { SliceData } from '../../commons/function/sliceData';\nvar initialState = {\n  data: [],\n  listRequest: [],\n  request_approving: '',\n  detail: {}\n};\n\nvar myReducer = function myReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.setTimeSheet:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.data\n      });\n\n    case actionTypes.SET_UPDATE_TIMESHEETS:\n      var item = action.data;\n\n      var index = _.findIndex(state.data.data, function (o) {\n        return o.id === item.id;\n      });\n\n      var dataUpdate = SliceData(state.data.data, index, item);\n\n      var listTimesheets = _objectSpread(_objectSpread({}, state.data), {}, {\n        data: dataUpdate\n      });\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: listTimesheets\n      });\n\n    case actionTypes.GET_LIST_REQUEST_EDIT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listRequest: action.data\n      });\n\n    case actionTypes.SET_CONFIRMATION_STATUS_EDIT:\n      var dataConfirm = action.data;\n\n      var indexUpdateRequest = _.findIndex(state.listRequest.data, function (o) {\n        return o.id === dataConfirm.request.id;\n      });\n\n      var dataUpdateRequest = SliceData(state.listRequest.data, indexUpdateRequest, dataConfirm.request);\n\n      var listRequestUpdate = _objectSpread(_objectSpread({}, state.listRequest), {}, {\n        data: dataUpdateRequest\n      });\n\n      var indexUpdateTimesheet = _.findIndex(state.data.data, function (o) {\n        return o.id === dataConfirm.origin.id;\n      });\n\n      if (indexUpdateTimesheet !== -1) {\n        var dataUpdateTimesheet = SliceData(state.data.data, indexUpdateTimesheet, dataConfirm.origin);\n\n        var listTimesheetUpdate = _objectSpread(_objectSpread({}, state.data), {}, {\n          data: dataUpdateTimesheet\n        });\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          data: listTimesheetUpdate,\n          listRequest: listRequestUpdate\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          listRequest: listRequestUpdate\n        });\n      }\n\n    case actionTypes.GET_DETAIL_TIMESHEET_ADMIN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        detail: action.data\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/reducer/timeSheet.js"],"names":["actionTypes","_","SliceData","initialState","data","listRequest","request_approving","detail","myReducer","state","action","type","setTimeSheet","SET_UPDATE_TIMESHEETS","item","index","findIndex","o","id","dataUpdate","listTimesheets","GET_LIST_REQUEST_EDIT","SET_CONFIRMATION_STATUS_EDIT","dataConfirm","indexUpdateRequest","request","dataUpdateRequest","listRequestUpdate","indexUpdateTimesheet","origin","dataUpdateTimesheet","listTimesheetUpdate","GET_DETAIL_TIMESHEET_ADMIN"],"mappings":"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","sourcesContent":["import actionTypes from '../../commons/const/actionTypes';\nimport _ from 'lodash';\nimport { SliceData } from '../../commons/function/sliceData';\n\nvar initialState = {\n  data: [],\n  listRequest: [],\n  request_approving: '',\n  detail: {}\n};\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case actionTypes.setTimeSheet:\n      return {\n        ...state,\n        data: action.data\n      };\n    case actionTypes.SET_UPDATE_TIMESHEETS:\n      const item = action.data;\n      const index = _.findIndex(state.data.data, o => o.id === item.id);\n      const dataUpdate = SliceData(state.data.data, index, item)\n      const listTimesheets = {...state.data, data: dataUpdate}\n      return {\n        ...state,\n        data: listTimesheets\n      }\n    case actionTypes.GET_LIST_REQUEST_EDIT:\n      return {\n        ...state,\n        listRequest: action.data\n      }\n    case actionTypes.SET_CONFIRMATION_STATUS_EDIT:\n      const dataConfirm  = action.data;\n      const indexUpdateRequest = _.findIndex(state.listRequest.data, o => o.id === dataConfirm.request.id);\n      const dataUpdateRequest = SliceData(state.listRequest.data, indexUpdateRequest, dataConfirm.request)\n      const listRequestUpdate = {...state.listRequest, data: dataUpdateRequest}\n      const indexUpdateTimesheet = _.findIndex(state.data.data, o => o.id === dataConfirm.origin.id)\n      if(indexUpdateTimesheet !== -1){\n        let dataUpdateTimesheet = SliceData(state.data.data, indexUpdateTimesheet, dataConfirm.origin)\n        let listTimesheetUpdate = {...state.data, data: dataUpdateTimesheet}\n        return {\n          ...state,\n          data: listTimesheetUpdate,\n          listRequest: listRequestUpdate\n        }\n      }\n      else {\n        return {\n          ...state,\n          listRequest: listRequestUpdate\n        }\n      }      \n    case actionTypes.GET_DETAIL_TIMESHEET_ADMIN:\n      return {\n        ...state,\n        detail: action.data\n      }\n    default:\n      return state;\n  }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}