{"ast":null,"code":"import axios from 'axios';\nimport * as accountContans from '../const/account';\nimport * as actionTypes from '../../commons/const/actionTypes';\nimport { showLoading, hideLoading } from './loading';\nimport { toastError, toastSuccess } from '../../commons/helpers/toastHelpers/index';\nimport { history } from '../../commons/helpers/history/history';\nimport _ from 'lodash';\nexport var getInfoCurrentUser = function getInfoCurrentUser() {\n  return function (dispatch) {\n    axios.get(\"users/\".concat(current_user_id)).then(function (res) {\n      dispatch(setCurrentUser(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var setCurrentUser = function setCurrentUser(data, status) {\n  return {\n    type: actionTypes.setCurrentUser,\n    data: data,\n    status: status\n  };\n}; // ---------------API LIST ACCOUNT----------------\n\nexport var fetchListAccount = function fetchListAccount(data) {\n  return {\n    type: accountContans.FETCH_ACCOUNT,\n    data: data\n  };\n}; //Request list account\n\nexport var fetchListAccountRequest = function fetchListAccountRequest(data) {\n  var params = {\n    current_page: data.currentPage,\n    sort_type: data.sortType,\n    sort_field: data.sortField\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/admin/users', {\n      params: params\n    }).then(function (res) {\n      dispatch(fetchListAccount(res.data));\n    })[\"catch\"](function (error) {\n      toastError(error);\n    })[\"finally\"](dispatch(hideLoading()));\n  };\n};\nexport var getAllUser = function getAllUser(all_user) {\n  var params = {\n    all_user: all_user\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/admin/users', {\n      params: params\n    }).then(function (res) {\n      dispatch({\n        type: accountContans.GET_ALL_USER,\n        data: res.data\n      });\n    })[\"catch\"](function (er) {\n      toastError(er);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n}; //Request search account\n\nexport var searchAccountRequest = function searchAccountRequest(text) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/admin/users', {\n      params: {\n        name: text\n      }\n    }).then(function (res) {\n      dispatch(fetchListAccount(res.data));\n    })[\"catch\"](function (error) {\n      toastError(error);\n    })[\"finally\"](dispatch(hideLoading()));\n  };\n}; //------------------HANDLE ERRORS----------------\n\nvar handleErrors = function handleErrors(resErrors, setErrors, setSubmitting) {\n  var errors = {};\n\n  _.map(resErrors, function (error) {\n    if (_.startsWith(error, 'Email')) errors['email'] = error;\n    if (_.startsWith(error, 'Id card')) errors['id_card'] = error;\n    if (_.startsWith(error, 'Profile phone number')) errors['phone_number'] = error;\n    if (_.startsWith(error, 'Role admin')) errors['roles'] = error;\n  });\n\n  setSubmitting(true);\n  setErrors(errors);\n}; // ---------------API ADD ACCOUNT----------------\n\n\nexport var addAccount = function addAccount(data) {\n  return {\n    type: accountContans.ADD_ACCOUNT,\n    data: data\n  };\n}; //Request add account\n\nexport var addNewAccountRequest = function addNewAccountRequest(data, setErrors, setSubmitting, toggle) {\n  var body = {\n    email: data.email,\n    joining_date: data.joining_date,\n    id_card: data.id_card,\n    official_date: data.official_date,\n    contract_type: data.contract_type,\n    position: data.position,\n    password: data.password,\n    status: data.status,\n    profile_attributes: {\n      name: data.name,\n      phone_number: data.phone_number,\n      address: data.address,\n      sex: data.sex,\n      date_of_birth: data.date_of_birth\n    },\n    input_roles: _.map(data.roles, function (e) {\n      return e.value;\n    })\n  };\n  return function (dispatch) {\n    return axios.post('/admin/users', body).then(function (res) {\n      dispatch(addAccount(res.data));\n      toastSuccess('Successful!');\n      setSubmitting(false);\n      toggle();\n    })[\"catch\"](function (error) {\n      var errors = error.response.data;\n      handleErrors(errors, setErrors, setSubmitting);\n    })[\"finally\"](dispatch(hideLoading()));\n  };\n}; // ---------------API UPDATE ACCOUNT----------------\n\nexport var setAccountEditting = function setAccountEditting(account) {\n  return {\n    type: accountContans.SET_ACCOUNT_EDITTING,\n    account: account\n  };\n};\nexport var updateAccount = function updateAccount(data) {\n  return {\n    type: accountContans.UPDATE_ACCOUNT,\n    data: data\n  };\n}; //Request update account\n\nexport var updateAccountRequest = function updateAccountRequest(id, data, setErrors, setSubmitting, toggle) {\n  var body = {\n    email: data.email,\n    joining_date: data.joining_date,\n    id_card: data.id_card,\n    official_date: data.official_date,\n    contract_type: data.contract_type,\n    position: data.position,\n    password: data.password,\n    status: data.status,\n    profile_attributes: {\n      name: data.name,\n      phone_number: data.phone_number,\n      address: data.address,\n      sex: data.sex,\n      date_of_birth: data.date_of_birth\n    },\n    input_roles: _.map(data.roles, function (e) {\n      return e.value;\n    })\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.put(\"/admin/users/\".concat(id), body).then(function (res) {\n      dispatch(updateAccount(res.data));\n      toastSuccess('Successful!');\n      setSubmitting(false);\n      toggle();\n    })[\"catch\"](function (error) {\n      var errors = error.response.data;\n      handleErrors(errors, setErrors, setSubmitting);\n    })[\"finally\"](dispatch(hideLoading()));\n  };\n}; // ---------------API DELETE ACCOUNT----------------\n\nexport var deleteAccount = function deleteAccount(data) {\n  return {\n    type: accountContans.DELETE_ACCOUNT,\n    data: data\n  };\n}; // delete account\n\nexport var deleteAccountRequest = function deleteAccountRequest(id) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios[\"delete\"](\"/admin/users/\".concat(id)).then(function (res) {\n      dispatch(deleteAccount(res.data));\n      toastSuccess('Successful!');\n      history.push('/');\n    })[\"catch\"](function (error) {\n      toastError(error);\n    })[\"finally\"](dispatch(hideLoading()));\n  };\n}; // ---------------API DETAIL ACCOUNT----------------\n\nexport var fetchAccountItem = function fetchAccountItem(data) {\n  return {\n    type: accountContans.DETAIL_ACCOUNT,\n    data: data\n  };\n}; // get detailaccount\n\nexport var fetchAccountItemRequest = function fetchAccountItemRequest(id) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get(\"/admin/users/\".concat(id)).then(function (res) {\n      dispatch(fetchAccountItem(res.data));\n    })[\"catch\"](function (error) {\n      toastError(error);\n    })[\"finally\"](dispatch(hideLoading()));\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/actions/account.js"],"names":["axios","accountContans","actionTypes","showLoading","hideLoading","toastError","toastSuccess","history","_","getInfoCurrentUser","dispatch","get","current_user_id","then","res","setCurrentUser","data","error","console","log","status","type","fetchListAccount","FETCH_ACCOUNT","fetchListAccountRequest","params","current_page","currentPage","sort_type","sortType","sort_field","sortField","getAllUser","all_user","GET_ALL_USER","er","searchAccountRequest","text","name","handleErrors","resErrors","setErrors","setSubmitting","errors","map","startsWith","addAccount","ADD_ACCOUNT","addNewAccountRequest","toggle","body","email","joining_date","id_card","official_date","contract_type","position","password","profile_attributes","phone_number","address","sex","date_of_birth","input_roles","roles","e","value","post","response","setAccountEditting","account","SET_ACCOUNT_EDITTING","updateAccount","UPDATE_ACCOUNT","updateAccountRequest","id","put","deleteAccount","DELETE_ACCOUNT","deleteAccountRequest","push","fetchAccountItem","DETAIL_ACCOUNT","fetchAccountItemRequest"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as accountContans from '../const/account';\nimport * as actionTypes from '../../commons/const/actionTypes'\nimport { showLoading, hideLoading } from './loading';\nimport { toastError, toastSuccess } from '../../commons/helpers/toastHelpers/index';\nimport { history } from '../../commons/helpers/history/history'\nimport _ from 'lodash'\n\nexport const getInfoCurrentUser = () => {\n  return (dispatch) => {\n    axios.get(`users/${current_user_id}`) \n      .then(function (res) {\n        dispatch(setCurrentUser(res.data))\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n}\n\nexport const setCurrentUser = (data, status) => { return { type: actionTypes.setCurrentUser, data: data, status: status } }\n\n\n// ---------------API LIST ACCOUNT----------------\n\nexport const fetchListAccount = data => {\n  return {\n    type: accountContans.FETCH_ACCOUNT,\n    data\n  };\n};\n\n//Request list account\nexport const fetchListAccountRequest = data => {\n  const params = {\n    current_page: data.currentPage,\n    sort_type: data.sortType,\n    sort_field: data.sortField\n  }\n  return dispatch => {\n    dispatch(showLoading());\n    axios.get('/admin/users', { params })\n      .then(res => {\n        dispatch(fetchListAccount(res.data));\n      })\n      .catch(error => {\n        toastError(error);\n      })\n      .finally(\n        dispatch(hideLoading())\n      )\n  };\n};\n\nexport const getAllUser =  (all_user) => {\n  const params = {\n    all_user: all_user\n  }\n  return dispatch => {\n    dispatch(showLoading());\n    axios.get('/admin/users', {params: params})\n      .then(res => {\n        dispatch({type: accountContans.GET_ALL_USER, data: res.data});\n      })\n      .catch(er => {\n        toastError(er);\n      })\n      .finally(() => {\n        dispatch(hideLoading());\n      })\n  }\n}\n\n//Request search account\nexport const searchAccountRequest = (text) => {\n  return dispatch => {\n    dispatch(showLoading());\n    axios.get('/admin/users', {\n      params: {\n        name: text\n      }\n    })\n      .then(res => {\n        dispatch(fetchListAccount(res.data));\n      })\n      .catch(error => {\n        toastError(error);\n      })\n      .finally(\n        dispatch(hideLoading())\n      )\n  };\n};\n\n//------------------HANDLE ERRORS----------------\nconst handleErrors = (resErrors, setErrors, setSubmitting) => {\n  const errors = {}\n  _.map(resErrors, error => {\n    if (_.startsWith(error, 'Email')) errors['email'] = error\n    if (_.startsWith(error, 'Id card')) errors['id_card'] = error\n    if (_.startsWith(error, 'Profile phone number')) errors['phone_number'] = error\n    if (_.startsWith(error, 'Role admin')) errors['roles'] = error\n  })\n  setSubmitting(true)\n  setErrors(errors)\n}\n\n// ---------------API ADD ACCOUNT----------------\n\nexport const addAccount = data => {\n  return {\n    type: accountContans.ADD_ACCOUNT,\n    data\n  };\n};\n\n\n//Request add account\nexport const addNewAccountRequest = (data, setErrors, setSubmitting, toggle) => {\n  const body = {\n    email: data.email,\n    joining_date: data.joining_date,\n    id_card: data.id_card,\n    official_date: data.official_date,\n    contract_type: data.contract_type,\n    position: data.position,\n    password: data.password,\n    status: data.status,\n    profile_attributes: {\n      name: data.name,\n      phone_number: data.phone_number,\n      address: data.address,\n      sex: data.sex,\n      date_of_birth: data.date_of_birth\n    },\n    input_roles: _.map(data.roles, e => e.value)\n  };\n  return dispatch => {\n    return axios.post('/admin/users', body)\n      .then(res => {\n        dispatch(addAccount(res.data));\n        toastSuccess('Successful!');\n        setSubmitting(false)\n        toggle()\n      })\n      .catch(error => {\n        const errors = error.response.data\n        handleErrors(errors, setErrors, setSubmitting)\n      })\n      .finally(\n        dispatch(hideLoading())\n      )\n  };\n};\n\n// ---------------API UPDATE ACCOUNT----------------\n\nexport const setAccountEditting = (account) => {\n  return {\n    type: accountContans.SET_ACCOUNT_EDITTING,\n    account,\n  };\n};\n\nexport const updateAccount = data => {\n  return {\n    type: accountContans.UPDATE_ACCOUNT,\n    data\n  }\n};\n\n//Request update account\nexport const updateAccountRequest = (id, data, setErrors, setSubmitting, toggle) => {\n  const body = {\n    email: data.email,\n    joining_date: data.joining_date,\n    id_card: data.id_card,\n    official_date: data.official_date,\n    contract_type: data.contract_type,\n    position: data.position,\n    password: data.password,\n    status: data.status,\n    profile_attributes: {\n      name: data.name,\n      phone_number: data.phone_number,\n      address: data.address,\n      sex: data.sex,\n      date_of_birth: data.date_of_birth\n    },\n    input_roles:  _.map(data.roles, e => e.value)\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios.put(`/admin/users/${id}`, body)\n      .then(res => {\n        dispatch(updateAccount(res.data));\n        toastSuccess('Successful!');\n        setSubmitting(false)\n        toggle()\n      })\n      .catch(error => {\n        const errors = error.response.data\n        handleErrors(errors, setErrors, setSubmitting)\n      })\n      .finally(\n        dispatch(hideLoading())\n      )\n  };\n};\n\n// ---------------API DELETE ACCOUNT----------------\n\nexport const deleteAccount = data => {\n  return {\n    type: accountContans.DELETE_ACCOUNT,\n    data\n  };\n};\n\n// delete account\nexport const deleteAccountRequest = (id) => {\n  return dispatch => {\n    dispatch(showLoading());\n    axios.delete(`/admin/users/${id}`)\n      .then(res => {\n        dispatch(deleteAccount(res.data));\n        toastSuccess('Successful!');\n        history.push('/');\n      })\n      .catch(error => {\n        toastError(error);\n      })\n      .finally(\n        dispatch(hideLoading())\n      )\n  };\n};\n\n// ---------------API DETAIL ACCOUNT----------------\n\nexport const fetchAccountItem = data => {\n  return {\n    type: accountContans.DETAIL_ACCOUNT,\n    data\n  };\n};\n\n// get detailaccount\nexport const fetchAccountItemRequest = id => {\n  return dispatch => {\n    dispatch(showLoading());\n    axios.get(`/admin/users/${id}`)\n      .then(res => {\n        dispatch(fetchAccountItem(res.data));\n      })\n      .catch(error => {\n        toastError(error);\n      })\n      .finally(\n        dispatch(hideLoading())\n      )\n  };\n};\n"]},"metadata":{},"sourceType":"module"}