{"ast":null,"code":"import actionTypes from '../../commons/const/actionTypes';\nimport axios from 'axios';\nimport { showLoading, hideLoading } from './loading';\nimport fakeData from '../../../../db'; // import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n// mock.onGet('/admin/user_timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onGet('admin/users').reply(200, fakeData.users);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/admin/user_dayoffs').reply(200, fakeData.dayoff);\n// mock.onPatch('/admin/uesr_dayoffs/14').reply(200, fakeData.dayoff[0]);\n\nexport var getStaffTimeSheetByAdmin = function getStaffTimeSheetByAdmin(data) {\n  var params = {\n    from_date: data.date.startTime,\n    to_date: data.date.endTime,\n    id: data.id,\n    current_page: String(data.current_page),\n    sort_date: data.sort_date,\n    filter_type: data.filter_type\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/admin/user_timesheets', {\n      params: params\n    }).then(function (res) {\n      dispatch(setTimeSheet(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setTimeSheet = function setTimeSheet(data) {\n  return {\n    type: actionTypes.setTimeSheet,\n    data: data\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/actions/timeSheet.js"],"names":["actionTypes","axios","showLoading","hideLoading","fakeData","getStaffTimeSheetByAdmin","data","params","from_date","date","startTime","to_date","endTime","id","current_page","String","sort_date","filter_type","dispatch","get","then","res","setTimeSheet","error","console","log","type"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,WAAzC;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,IAAD,EAAU;AAChD,MAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEF,IAAI,CAACG,IAAL,CAAUC,SADR;AAEbC,IAAAA,OAAO,EAAEL,IAAI,CAACG,IAAL,CAAUG,OAFN;AAGbC,IAAAA,EAAE,EAAEP,IAAI,CAACO,EAHI;AAIbC,IAAAA,YAAY,EAAEC,MAAM,CAACT,IAAI,CAACQ,YAAN,CAJP;AAKbE,IAAAA,SAAS,EAAEV,IAAI,CAACU,SALH;AAMbC,IAAAA,WAAW,EAAEX,IAAI,CAACW;AANL,GAAf;AAQA,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CAACkB,GAAN,CAAU,wBAAV,EAAoC;AAAEZ,MAAAA,MAAM,EAAEA;AAAV,KAApC,EACGa,IADH,CACQ,UAAUC,GAAV,EAAe;AACnBH,MAAAA,QAAQ,CAACI,YAAY,CAACD,GAAG,CAACf,IAAL,CAAb,CAAR;AACD,KAHH,WAIS,UAAUiB,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH,aAOW,YAAY;AACnBL,MAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAtBM;AAwBP,OAAO,IAAMmB,YAAY,GAAG,SAAfA,YAAe,CAAChB,IAAD,EAAU;AAAE,SAAO;AAAEoB,IAAAA,IAAI,EAAE1B,WAAW,CAACsB,YAApB;AAAkChB,IAAAA,IAAI,EAAEA;AAAxC,GAAP;AAAuD,CAAxF","sourcesContent":["import actionTypes from '../../commons/const/actionTypes';\nimport axios from 'axios'\nimport { showLoading, hideLoading } from './loading'\nimport fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n\n// mock.onGet('/admin/user_timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onGet('admin/users').reply(200, fakeData.users);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/admin/user_dayoffs').reply(200, fakeData.dayoff);\n// mock.onPatch('/admin/uesr_dayoffs/14').reply(200, fakeData.dayoff[0]);\n\nexport const getStaffTimeSheetByAdmin = (data) => {\n  const params = {\n    from_date: data.date.startTime,\n    to_date: data.date.endTime,\n    id: data.id,\n    current_page: String(data.current_page),\n    sort_date: data.sort_date,\n    filter_type: data.filter_type\n  }\n  return (dispatch) => {\n    dispatch(showLoading())\n    axios.get('/admin/user_timesheets', { params: params })\n      .then(function (res) {\n        dispatch(setTimeSheet(res.data))\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .finally(function () {\n        dispatch(hideLoading())\n      });\n  }\n}\n\nexport const setTimeSheet = (data) => { return { type: actionTypes.setTimeSheet, data: data } }\n"]},"metadata":{},"sourceType":"module"}