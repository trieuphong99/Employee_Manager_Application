{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/checkIn/modalCompensation.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport { Button, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { SingleDatePicker } from \"react-dates\";\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport { offSet as _offSet } from '../../actions/timeSheet';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Time from '../../../commons/const/Time';\nimport { history } from \"../../../commons/helpers/history/history\";\n\nfunction ModalCompensation(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      focused = _useState4[0],\n      setFocused = _useState4[1];\n\n  var _useState5 = useState(moment()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dateSelected = _useState6[0],\n      setDateSelected = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modal = _useState8[0],\n      setModal = _useState8[1];\n\n  var toggleModal = function toggleModal() {\n    return setModal(!modal);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    props.offSet(date, dateSelected, function () {\n      return;\n    });\n    toggleModal();\n    history.push('/timesheets');\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Compensation(Optional)\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(SingleDatePicker, {\n    id: \"date\",\n    block: true,\n    date: date // momentPropTypes.momentObj or null\n    ,\n    onDateChange: function onDateChange(date) {\n      setDate(date);\n    } // PropTypes.func.isRequired\n    ,\n    focused: focused // PropTypes.bool\n    ,\n    onFocusChange: function onFocusChange() {\n      return setFocused(!focused);\n    } // PropTypes.func.isRequired\n    ,\n    displayFormat: Time.crossDMY,\n    numberOfMonths: 1,\n    showClearDate: true,\n    isOutsideRange: function isOutsideRange(day) {\n      return isInclusivelyBeforeDay(day, moment());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"For date:\"), /*#__PURE__*/React.createElement(SingleDatePicker, {\n    id: \"for_date\",\n    block: true,\n    onDateChange: function onDateChange(date) {\n      return setDateSelected(date);\n    },\n    focused: null,\n    onFocusChange: function onFocusChange() {\n      return setFocused(null);\n    },\n    date: dateSelected // momentPropTypes.momentObj or null\n    ,\n    displayFormat: Time.crossDMY,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      toggleModal();\n      history.push('/timesheets');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    offSet: function offSet(date, for_date, reload) {\n      return dispatch(_offSet({\n        date: date,\n        for_date: for_date,\n        reload: reload\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalCompensation);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/checkIn/modalCompensation.js"],"names":["React","useState","Button","FormGroup","Label","Modal","ModalHeader","ModalBody","ModalFooter","SingleDatePicker","isInclusivelyBeforeDay","offSet","connect","moment","Time","history","ModalCompensation","props","date","setDate","focused","setFocused","dateSelected","setDateSelected","modal","setModal","toggleModal","handleSubmit","push","crossDMY","day","mapStateToProps","state","mapDispatchToProps","dispatch","for_date","reload"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { SingleDatePicker } from \"react-dates\";\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport { offSet } from '../../actions/timeSheet';\nimport { connect } from 'react-redux';\nimport moment from 'moment'\nimport Time from '../../../commons/const/Time';\nimport { history } from \"../../../commons/helpers/history/history\"\n\nfunction ModalCompensation(props) {\n\n  const [date, setDate] = useState(null);\n  const [focused, setFocused] = useState(false);\n  const [dateSelected, setDateSelected] = useState(moment());\n\n  const [modal, setModal] = useState(true);\n  const toggleModal = () => setModal(!modal)\n\n  const handleSubmit = () => {\n    props.offSet(date, dateSelected, () => { return; })\n    toggleModal();\n    history.push('/timesheets')\n  }\n  return (\n    <Modal isOpen={modal} toggle={toggleModal}>\n      <ModalHeader toggle={toggleModal}>Compensation(Optional)</ModalHeader>\n      <ModalBody>\n        <FormGroup>\n          <Label>Date</Label>\n          <SingleDatePicker\n            id=\"date\"\n            block\n            date={date} // momentPropTypes.momentObj or null\n            onDateChange={(date) => { setDate(date) }} // PropTypes.func.isRequired\n            focused={focused} // PropTypes.bool\n            onFocusChange={() => setFocused(!focused)} // PropTypes.func.isRequired\n            displayFormat={Time.crossDMY}\n            numberOfMonths={1}\n            showClearDate={true}\n            isOutsideRange={day => isInclusivelyBeforeDay(day, moment())}\n          />\n          <Label>For date:</Label>\n          <SingleDatePicker\n            id=\"for_date\"\n            block\n            onDateChange={(date) => setDateSelected(date)}\n            focused={null}\n            onFocusChange={() => setFocused(null)}\n            date={dateSelected} // momentPropTypes.momentObj or null\n            displayFormat={Time.crossDMY}\n            disabled={true}\n          />\n        </FormGroup>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"info\" onClick={handleSubmit}>Submit</Button>\n        <Button color=\"secondary\" onClick={() => {\n          toggleModal();\n          history.push('/timesheets');\n        }}>Cancel</Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    offSet: (date, for_date, reload) => dispatch(offSet({ date, for_date, reload })),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalCompensation);\n"]},"metadata":{},"sourceType":"module"}