{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/timesheets/offset.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/timeSheet';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport Time from '../../../commons/const/Time';\n\nvar Offset = function Offset(props) {\n  var modal = props.modal,\n      toggle = props.toggle,\n      dateSelected = props.dateSelected,\n      className = props.className;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listDayOff = _useState2[0],\n      setListDayOff = _useState2[1];\n\n  var selectDate = function selectDate(date) {\n    var index = _.findIndex(listDayOff, function (n) {\n      return n === date.format(Time.DMY);\n    });\n\n    if (index === -1) {\n      setListDayOff([].concat(_toConsumableArray(listDayOff), [date.format(Time.DMY)]));\n    } else {\n      var arr = listDayOff;\n      arr.splice(index, 1);\n      setListDayOff(arr);\n    }\n  }; //code call api offSet\n\n\n  var letOffSet = function letOffSet(date) {\n    props.offSet(date, _.split(listDayOff, ','));\n    toggle();\n  }; //code call api offSet\n  //code SingleDatePicker\n\n\n  var _useState3 = useState(moment()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      focused = _useState6[0],\n      setFocused = _useState6[1]; //code SingleDatePicker\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Off Set\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Choose one or many day off\"), React.createElement(Input, {\n    placeholder: \"Your Day off\",\n    readOnly: true,\n    value: listDayOff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"SDP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Day Off(*)\"), React.createElement(SingleDatePicker, {\n    date: date // momentPropTypes.momentObj or null\n    ,\n    onDateChange: function onDateChange(date) {\n      setDate(date);\n      selectDate(date);\n    } // PropTypes.func.isRequired\n    ,\n    focused: focused // PropTypes.bool\n    ,\n    onFocusChange: function onFocusChange() {\n      return setFocused(!focused);\n    } // PropTypes.func.isRequired\n    ,\n    id: \"your_unique_id\" // PropTypes.string.isRequired,\n    ,\n    numberOfMonths: 1,\n    displayFormat: Time.DMY // chặn các ngày từ hôm chọn đổ đi(chỉ cho chọn các ngày trong quá khứ không bao gồm cả ngày được phép làm bù)\n    ,\n    isOutsideRange: function isOutsideRange(day) {\n      return !isInclusivelyBeforeDay(day, moment(dateSelected, Time.DMY).subtract(1, 'days'));\n    } // nếu tồn tại trong listDayOff thì hight light(sáng lên) lên cho dễ nhìn\n    ,\n    isDayHighlighted: function isDayHighlighted(day) {\n      return _.indexOf(_.split(listDayOff, ','), day.format(Time.DMY)) !== -1;\n    },\n    keepOpenOnDateSelect: true //giữ cho calendar không đóng khi click xong\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      return letOffSet(dateSelected);\n    },\n    disabled: listDayOff === '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Finish\"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    offSet: function offSet(date, for_date) {\n      dispatch(actions.offSet({\n        date: date,\n        for_date: for_date\n      }));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Offset);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/timesheets/offset.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Label","Input","connect","actions","moment","_","SingleDatePicker","isInclusivelyBeforeDay","Time","Offset","props","modal","toggle","dateSelected","className","listDayOff","setListDayOff","selectDate","date","index","findIndex","n","format","DMY","arr","splice","letOffSet","offSet","split","setDate","focused","setFocused","day","subtract","indexOf","mapStatetoProps","state","mapDispatchToProps","dispatch","for_date"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/timeSheet';\nimport moment from 'moment'\nimport _ from 'lodash'\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport Time from '../../../commons/const/Time'\n\nconst Offset = props => {\n  const { modal, toggle, dateSelected, className } = props\n  const [listDayOff, setListDayOff] = useState([]);\n  const selectDate = (date) => {\n    var index = _.findIndex(listDayOff, n => n === date.format(Time.DMY))\n    if (index === -1) {\n      setListDayOff([...listDayOff, date.format(Time.DMY)])\n    }\n    else {\n      var arr = listDayOff\n      arr.splice(index, 1)\n      setListDayOff(arr)\n    }\n  }\n  //code call api offSet\n  const letOffSet = (date) => {\n    props.offSet(date, _.split(listDayOff, ','))\n    toggle();\n  }\n  //code call api offSet\n  //code SingleDatePicker\n  const [date, setDate] = useState(moment());\n  const [focused, setFocused] = useState(false);\n  //code SingleDatePicker\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Off Set</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label >Choose one or many day off</Label>\n            <Input\n              placeholder=\"Your Day off\"\n              readOnly={true}\n              value={listDayOff}\n            />\n          </FormGroup>\n          <div className='SDP'>\n            <label className=\"col-sm-3 col-form-label\">Day Off(*)</label>\n            <SingleDatePicker\n              date={date} // momentPropTypes.momentObj or null\n              onDateChange={(date) => {\n                setDate(date)\n                selectDate(date)\n              }} // PropTypes.func.isRequired\n              focused={focused} // PropTypes.bool\n              onFocusChange={() => setFocused(!focused)} // PropTypes.func.isRequired\n              id=\"your_unique_id\" // PropTypes.string.isRequired,\n              numberOfMonths={1}\n              displayFormat={Time.DMY}\n              // chặn các ngày từ hôm chọn đổ đi(chỉ cho chọn các ngày trong quá khứ không bao gồm cả ngày được phép làm bù)\n              isOutsideRange={day => !isInclusivelyBeforeDay(day, moment(dateSelected, Time.DMY).subtract(1, 'days'))}\n              // nếu tồn tại trong listDayOff thì hight light(sáng lên) lên cho dễ nhìn\n              isDayHighlighted={day => _.indexOf(_.split(listDayOff, ','), day.format(Time.DMY)) !== -1}\n              keepOpenOnDateSelect={true} //giữ cho calendar không đóng khi click xong\n            />\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={() => letOffSet(dateSelected)} disabled={listDayOff === ''}>Finish</Button>\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div >\n  )\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    offSet: (date, for_date) => { dispatch(actions.offSet({ date: date, for_date: for_date })) }\n  }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(Offset);\n"]},"metadata":{},"sourceType":"module"}