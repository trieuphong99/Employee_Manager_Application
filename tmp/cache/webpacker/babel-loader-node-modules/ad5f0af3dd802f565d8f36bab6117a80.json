{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport * as React from 'react';\nimport Animate from 'rc-animate';\nimport addEventListener from \"rc-util/es/Dom/addEventListener\";\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport throttleByAnimationFrame from '../_util/throttleByAnimationFrame';\nimport { ConfigContext } from '../config-provider';\nimport getScroll from '../_util/getScroll';\nimport scrollTo from '../_util/scrollTo';\n\nvar BackTop = function BackTop(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var ref = React.createRef();\n  var scrollEvent = React.useRef();\n\n  var getDefaultTarget = function getDefaultTarget() {\n    return ref.current && ref.current.ownerDocument ? ref.current.ownerDocument : window;\n  };\n\n  var handleScroll = throttleByAnimationFrame(function (e) {\n    var visibilityHeight = props.visibilityHeight;\n    var scrollTop = getScroll(e.target, true);\n    setVisible(scrollTop > visibilityHeight);\n  });\n\n  var bindScrollEvent = function bindScrollEvent() {\n    var target = props.target;\n    var getTarget = target || getDefaultTarget;\n    var container = getTarget();\n    scrollEvent.current = addEventListener(container, 'scroll', function (e) {\n      handleScroll(e);\n    });\n    handleScroll({\n      target: container\n    });\n  };\n\n  React.useEffect(function () {\n    bindScrollEvent();\n    return function () {\n      if (scrollEvent.current) {\n        scrollEvent.current.remove();\n      }\n\n      handleScroll.cancel();\n    };\n  }, [props.target]);\n\n  var getVisible = function getVisible() {\n    if ('visible' in props) {\n      return props.visible;\n    }\n\n    return visible;\n  };\n\n  var scrollToTop = function scrollToTop(e) {\n    var onClick = props.onClick,\n        target = props.target;\n    scrollTo(0, {\n      getContainer: target || getDefaultTarget\n    });\n\n    if (typeof onClick === 'function') {\n      onClick(e);\n    }\n  };\n\n  var renderChildren = function renderChildren(_ref) {\n    var prefixCls = _ref.prefixCls;\n    var children = props.children;\n    var defaultElement = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-icon\")\n    }));\n    return /*#__PURE__*/React.createElement(Animate, {\n      component: \"\",\n      transitionName: \"fade\"\n    }, getVisible() ? /*#__PURE__*/React.createElement(\"div\", null, children || defaultElement) : null);\n  };\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      _props$className = props.className,\n      className = _props$className === void 0 ? '' : _props$className;\n  var prefixCls = getPrefixCls('back-top', customizePrefixCls);\n  var classString = classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl')); // fix https://fb.me/react-unknown-prop\n\n  var divProps = omit(props, ['prefixCls', 'className', 'children', 'visibilityHeight', 'target', 'visible']);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, divProps, {\n    className: classString,\n    onClick: scrollToTop,\n    ref: ref\n  }), renderChildren({\n    prefixCls: prefixCls\n  }));\n};\n\nBackTop.defaultProps = {\n  visibilityHeight: 400\n};\nexport default React.memo(BackTop);","map":null,"metadata":{},"sourceType":"module"}