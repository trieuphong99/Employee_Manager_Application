{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/checkIn/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './checkIn.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\nimport moment from 'moment';\nimport RealTime from 'react-live-clock';\nimport Clock from 'react-clock';\nimport Time from '../../../commons/const/Time';\n\nvar CheckIn = function CheckIn(props) {\n  var className = props.className;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reason = _useState4[0],\n      setReason = _useState4[1];\n\n  var letCheckIn = function letCheckIn() {\n    if (moment().isAfter(moment(Time.startWork, Time.HM))) {\n      toggle();\n    } else {\n      props.checkIn('');\n    }\n  };\n\n  var finishReport = function finishReport() {\n    props.checkIn(reason);\n  };\n\n  var _useState5 = useState(new Date()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timeClock = _useState6[0],\n      setTimeClock = _useState6[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      return setTimeClock(new Date());\n    }, 1000); // eslint-disable-next-line\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"check-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"total-content-check-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-check-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Check In\"), React.createElement(\"div\", {\n    className: \"date-check-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Clock, {\n    value: timeClock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(RealTime, {\n    format: Time.FullDayFirst,\n    ticking: true,\n    timezone: Time.timeZone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-checkin\",\n    onClick: letCheckIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Start\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Why are you late for work ?\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Label, {\n    \"for\": \"exampleText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Reason\"), React.createElement(Input, {\n    type: \"textarea\",\n    name: \"text\",\n    id: \"exampleText\",\n    onChange: function onChange(e) {\n      return setReason(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    color: \"success\",\n    onClick: finishReport,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Check In\"))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkIn: function checkIn(reason) {\n      dispatch(actions.checkIn({\n        reason: reason\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckIn);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/checkIn/index.js"],"names":["React","useState","useEffect","Button","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","connect","actions","moment","RealTime","Clock","Time","CheckIn","props","className","modal","setModal","toggle","reason","setReason","letCheckIn","isAfter","startWork","HM","checkIn","finishReport","Date","timeClock","setTimeClock","setInterval","FullDayFirst","timeZone","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './checkIn.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\nimport moment from 'moment'\nimport RealTime from 'react-live-clock';\nimport Clock from 'react-clock';\nimport Time from '../../../commons/const/Time';\n\nconst CheckIn = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  const [reason, setReason] = useState('');\n  const letCheckIn = () => {\n    if (moment().isAfter(moment(Time.startWork, Time.HM))) {\n      toggle();\n    }\n    else {\n      props.checkIn('');\n    }\n  }\n  const finishReport = () => {\n    props.checkIn(reason);\n  }\n  const [timeClock, setTimeClock] = useState(new Date());\n  useEffect(() => {\n    setInterval(\n      () => setTimeClock(new Date()),\n      1000\n    );\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <div className=\"check-in\">\n      <div className='total-content-check-in'>\n        <div className='title-check-in'>Check In</div>\n        <div className='date-check-in'>\n          <Clock value={timeClock} />\n          <RealTime format={Time.FullDayFirst} ticking={true} timezone={Time.timeZone} />\n        </div>\n        <button className=\"btn btn-checkin\" onClick={letCheckIn}>Start</button>\n        <div>\n          <Modal isOpen={modal} toggle={toggle} className={className}>\n            <ModalHeader toggle={toggle}>Why are you late for work ?</ModalHeader>\n            <ModalBody>\n              <FormGroup>\n                <Label for=\"exampleText\">Reason</Label>\n                <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={(e) => setReason(e.target.value)} />\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n              <Button color=\"success\" onClick={finishReport}>Check In</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkIn: (reason) => { dispatch(actions.checkIn({ reason: reason })) },\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckIn);\n"]},"metadata":{},"sourceType":"module"}