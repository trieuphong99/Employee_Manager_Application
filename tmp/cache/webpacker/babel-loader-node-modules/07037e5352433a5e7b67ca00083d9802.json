{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/checkOut/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './checkOut.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\nimport * as timeSheetActions from '../../actions/timeSheet';\nimport moment from 'moment';\nimport RealTime from 'react-live-clock';\nimport Clock from 'react-clock';\nimport Time from '../../../commons/const/Time';\n\nvar CheckOut = function CheckOut(props) {\n  var timeSheet = props.timeSheet;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeClock = _useState2[0],\n      setTimeClock = _useState2[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      return setTimeClock(new Date());\n    }, 1000);\n    props.getStaffTimeSheet({\n      startTime: moment().format(Time.DMY),\n      endTime: moment().format(Time.DMY)\n    }, 1, 'ASC', 'All'); // eslint-disable-next-line\n  }, []);\n  var className = props.className;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      reason = _useState6[0],\n      setReason = _useState6[1];\n\n  var letCheckOut = function letCheckOut() {\n    var startTime = moment(timeSheet.data[0].start_at, Time.HMS);\n    var endTime = moment(moment().format(Time.HMS), Time.HMS);\n    var duration = moment.duration(endTime.diff(startTime));\n    var hours = duration.asHours();\n\n    if (hours <= Time.timeCheckWork) {\n      toggle();\n    } else {\n      props.checkOut();\n    }\n  };\n\n  var finishReport = function finishReport(data) {\n    props.reportInlateLeaveEarly(reason);\n    props.checkOut();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"check-out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"total-content-check-out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-check-out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Check Out\"), React.createElement(\"div\", {\n    className: \"date-check-out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Clock, {\n    value: timeClock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(RealTime, {\n    format: Time.FullDayFirst,\n    ticking: true,\n    timezone: Time.timeZone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-checkout\",\n    onClick: letCheckOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Finish\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Why are you leave early ?\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Label, {\n    \"for\": \"exampleText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Reason\"), React.createElement(Input, {\n    type: \"textarea\",\n    name: \"text\",\n    id: \"exampleText\",\n    onChange: function onChange(e) {\n      return setReason(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    color: \"success\",\n    onClick: finishReport,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Check Out\"))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    timeSheet: state.timeSheet\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkOut: function checkOut() {\n      dispatch(actions.checkOut());\n    },\n    reportInlateLeaveEarly: function reportInlateLeaveEarly(reason) {\n      dispatch(actions.reportInlateLeaveEarly({\n        reason: reason\n      }));\n    },\n    getStaffTimeSheet: function getStaffTimeSheet(date, current_page, sort_date) {\n      dispatch(timeSheetActions.getStaffTimeSheet({\n        date: date,\n        current_page: current_page,\n        sort_date: sort_date\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckOut);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/checkOut/index.js"],"names":["React","useState","useEffect","Button","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","connect","actions","timeSheetActions","moment","RealTime","Clock","Time","CheckOut","props","timeSheet","Date","timeClock","setTimeClock","setInterval","getStaffTimeSheet","startTime","format","DMY","endTime","className","modal","setModal","toggle","reason","setReason","letCheckOut","data","start_at","HMS","duration","diff","hours","asHours","timeCheckWork","checkOut","finishReport","reportInlateLeaveEarly","FullDayFirst","timeZone","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","date","current_page","sort_date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './checkOut.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\nimport * as timeSheetActions from '../../actions/timeSheet';\nimport moment from 'moment'\nimport RealTime from 'react-live-clock';\nimport Clock from 'react-clock';\nimport Time from '../../../commons/const/Time';\n\nconst CheckOut = props => {\n  const { timeSheet } = props;\n  const [timeClock, setTimeClock] = useState(new Date());\n  useEffect(() => {\n    setInterval(\n      () => setTimeClock(new Date()),\n      1000\n    );\n    props.getStaffTimeSheet({\n      startTime: moment().format(Time.DMY),\n      endTime: moment().format(Time.DMY)\n    }, 1, 'ASC', 'All');\n    // eslint-disable-next-line\n  }, []);\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  const [reason, setReason] = useState('');\n  const letCheckOut = () => {\n    const startTime = moment(timeSheet.data[0].start_at, Time.HMS)\n    const endTime = moment(moment().format(Time.HMS), Time.HMS)\n    const duration = moment.duration(endTime.diff(startTime));\n    const hours = duration.asHours();\n    if (hours <= Time.timeCheckWork) {\n      toggle();\n    }\n    else {\n      props.checkOut();\n    }\n  }\n  const finishReport = (data) => {\n    props.reportInlateLeaveEarly(reason)\n    props.checkOut();\n  }\n  return (\n    <div className=\"check-out\">\n      <div className='total-content-check-out'>\n        <div className='title-check-out'>Check Out</div>\n        <div className='date-check-out'>\n          <Clock value={timeClock} />\n          <RealTime format={Time.FullDayFirst} ticking={true} timezone={Time.timeZone} />\n        </div>\n        <button className=\"btn btn-checkout\" onClick={letCheckOut}>Finish</button>\n        <div>\n          <Modal isOpen={modal} toggle={toggle} className={className}>\n            <ModalHeader toggle={toggle}>Why are you leave early ?</ModalHeader>\n            <ModalBody>\n              <FormGroup>\n                <Label for=\"exampleText\">Reason</Label>\n                <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={(e) => setReason(e.target.value)} />\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n              <Button color=\"success\" onClick={finishReport}>Check Out</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    timeSheet: state.timeSheet,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkOut: () => { dispatch(actions.checkOut()) },\n    reportInlateLeaveEarly: (reason) => { dispatch(actions.reportInlateLeaveEarly({ reason: reason })) },\n    getStaffTimeSheet: (date, current_page, sort_date) => { dispatch(timeSheetActions.getStaffTimeSheet({ date, current_page: current_page, sort_date: sort_date })) },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckOut);\n"]},"metadata":{},"sourceType":"module"}