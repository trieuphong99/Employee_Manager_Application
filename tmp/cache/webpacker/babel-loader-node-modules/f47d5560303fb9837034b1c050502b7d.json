{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/profile/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport Avatar from '../../../commons/assets/img/Avatar.png';\nimport General from './general/index';\nimport Connection from './connection/index';\nimport ChangePassword from './changePassword/index';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/account';\nimport _ from 'lodash';\n\nfunction Profile(props) {\n  var _this = this;\n\n  var _useState = useState('General'),\n      _useState2 = _slicedToArray(_useState, 2),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  var currentUser = props.currentUser,\n      getInfoCurrentUser = props.getInfoCurrentUser;\n  useEffect(function () {\n    getInfoCurrentUser(); // eslint-disable-next-line\n  }, []);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, currentUser.profile !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-name-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img\",\n    src: _.isEqual(currentUser.providers, []) ? Avatar : currentUser.providers[0].avatar,\n    alt: \"avartar-img\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Modal heading\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, \"Woohoo, you're reading this text in a modal!\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Save Changes\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, _.isEqual(currentUser.providers, []) ? currentUser.profile.name : currentUser.providers[0].name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, currentUser.code))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-profile-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, _.map(['General', 'Connection', 'Change Password'], function (type, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-profile-left-child\",\n      onClick: function onClick() {\n        return setProfile(type);\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, type);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, profile === 'General' ? /*#__PURE__*/React.createElement(General, {\n    getInfoCurrentUser: getInfoCurrentUser,\n    currentUser: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }) : profile === 'Connection' ? /*#__PURE__*/React.createElement(Connection, {\n    currentUser: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }) : profile === 'Change Password' ? /*#__PURE__*/React.createElement(ChangePassword, {\n    getBack: function getBack() {\n      return setProfile('General');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }\n  }) : null)) : null);\n}\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getInfoCurrentUser: function getInfoCurrentUser() {\n      dispatch(actions.getInfoCurrentUser());\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/profile/index.js"],"names":["React","useState","useEffect","Avatar","General","Connection","ChangePassword","connect","actions","_","Profile","props","profile","setProfile","currentUser","getInfoCurrentUser","show","setShow","handleClose","handleShow","undefined","isEqual","providers","avatar","name","code","map","type","index","mapStatetoProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport Avatar from '../../../commons/assets/img/Avatar.png'\nimport General from './general/index'\nimport Connection from './connection/index'\nimport ChangePassword from './changePassword/index'\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/account';\nimport _ from 'lodash';\n\nfunction Profile(props) {\n  const [profile, setProfile] = useState('General');\n  const { currentUser, getInfoCurrentUser } = props\n\n  useEffect(() => {\n    getInfoCurrentUser();\n    // eslint-disable-next-line\n  }, []);\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div>\n      {\n        currentUser.profile !== undefined ?\n          < div className=\"profile\" >\n            <div className='profile-left'>\n              <div className='img-name-id'>\n                <img className='img' src={\n                  _.isEqual(currentUser.providers, [])\n                    ? Avatar\n                    : currentUser.providers[0].avatar\n                } alt='avartar-img' onClick={handleShow}/>\n\n                <Modal show={show} onHide={handleClose}>\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                  <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                      Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                      Save Changes\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n                \n                <div className='name-id'>\n                  <p>\n                    {_.isEqual(currentUser.providers, [])\n                      ? currentUser.profile.name\n                      : currentUser.providers[0].name\n                    }\n                  </p>\n                  <p>{currentUser.code}</p>\n                </div>\n              </div>\n              <div className='menu-profile-left'>\n                {\n                  _.map(['General', 'Connection', 'Change Password'], (type, index) => (\n                    <div className='menu-profile-left-child' onClick={() => setProfile(type)} key={index}>{type}</div>\n                  ))\n                }\n              </div>\n            </div>\n            <div className='profile-right'>\n              {\n                profile === 'General' ?\n                  <General getInfoCurrentUser={getInfoCurrentUser} currentUser={currentUser} />\n                  :\n                  profile === 'Connection' ?\n                    <Connection currentUser={currentUser} />\n                    :\n                    profile === 'Change Password' ?\n                      <ChangePassword getBack={() => setProfile('General')} />\n                      :\n                      null\n              }\n            </div>\n          </div >\n          : null\n      }\n    </div>\n  );\n}\nconst mapStatetoProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getInfoCurrentUser: () => { dispatch(actions.getInfoCurrentUser()) }\n  }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}