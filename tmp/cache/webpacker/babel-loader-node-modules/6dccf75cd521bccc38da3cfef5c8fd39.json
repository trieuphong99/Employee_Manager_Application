{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actionTypes from '../const/account';\nvar initialState = {\n  data: [],\n  dataPie: [],\n  dataBar: []\n};\n\nvar DashBoardReducer = function DashBoardReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.GET_DATA_DASHBOARD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.data\n      });\n\n    case actionTypes.GET_DATA_PIECHART:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dataPie: action.data\n      });\n\n    case actionTypes.GET_DATA_BARCHART:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dataBar: action.data\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default DashBoardReducer;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/reducer/dashBoard.js"],"names":["actionTypes","initialState","data","dataPie","dataBar","DashBoardReducer","state","action","type","GET_DATA_DASHBOARD","GET_DATA_PIECHART","GET_DATA_BARCHART"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAAnB;;AAMA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACS,kBAAjB;AACE,6CACKH,KADL;AAEEJ,QAAAA,IAAI,EAAEK,MAAM,CAACL;AAFf;;AAIF,SAAKF,WAAW,CAACU,iBAAjB;AACE,6CACKJ,KADL;AAEEH,QAAAA,OAAO,EAAEI,MAAM,CAACL;AAFlB;;AAIF,SAAKF,WAAW,CAACW,iBAAjB;AACE,6CACKL,KADL;AAEEF,QAAAA,OAAO,EAAEG,MAAM,CAACL;AAFlB;;AAIF;AACE,aAAOI,KAAP;AAjBJ;AAmBD,CApBD;;AAqBA,eAAeD,gBAAf","sourcesContent":["import * as actionTypes from '../const/account'\n\nlet initialState = {\n  data: [],\n  dataPie: [],\n  dataBar: []\n}\n\nconst DashBoardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_DATA_DASHBOARD:\n      return {\n        ...state,\n        data: action.data\n      }\n    case actionTypes.GET_DATA_PIECHART:\n      return {\n        ...state,\n        dataPie: action.data\n      }\n    case actionTypes.GET_DATA_BARCHART:\n      return {\n        ...state,\n        dataBar: action.data\n      }\n    default:\n      return state;\n  }\n}\nexport default DashBoardReducer;"]},"metadata":{},"sourceType":"module"}