{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/overtimes/OvertimeForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button, Form, FormGroup, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport moment from 'moment';\nimport * as overtimesActions from '../../actions/overtimes';\nimport SingleDatePicker from '../../helpers/singleDatePicker';\nimport Time from '../../../commons/const/Time';\nimport TimePickers from './TimePicker';\n\nfunction DayOffForm(props) {\n  var overtimesActions = props.overtimesActions,\n      buttonLabel = props.buttonLabel,\n      title = props.title,\n      item = props.item,\n      id = props.id;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var _useState3 = useState(item !== undefined ? {\n    date: moment(item.date, Time.crossDMY),\n    start_at: item.start_at,\n    end_at: item.end_at\n  } : {\n    date: moment(),\n    start_at: moment().format(Time.HM),\n    end_at: moment().add(3, 'hour').format(Time.HM)\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var onFormSubmit = function onFormSubmit() {\n    toggle;\n    if (item !== undefined) overtimesActions.addOvertimes(data);else overtimesActions.updateOvertimes(id, data);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      width: \"100px\"\n    },\n    color: \"info\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, buttonLabel), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, title), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(SingleDatePicker, {\n    date: data.date,\n    onChange: function onChange(e) {\n      return setData(_objectSpread({}, data, {\n        date: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(TimePickers, {\n    label: \"Start\",\n    defaultTime: data.start_at,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), ' ', React.createElement(TimePickers, {\n    label: \"End\",\n    defaultTime: data.end_at,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Cancel\"), ' ', React.createElement(Button, {\n    color: \"secondary\",\n    onClick: onFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Submit\")))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    overtimesActions: bindActionCreators(overtimesActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayOffForm);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/overtimes/OvertimeForm.js"],"names":["React","useState","connect","bindActionCreators","Button","Form","FormGroup","Modal","ModalHeader","ModalBody","ModalFooter","moment","overtimesActions","SingleDatePicker","Time","TimePickers","DayOffForm","props","buttonLabel","title","item","id","modal","setModal","undefined","date","crossDMY","start_at","end_at","format","HM","add","data","setData","toggle","onFormSubmit","addOvertimes","updateOvertimes","width","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\nimport { Button, Form, FormGroup, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport moment from 'moment';\n\nimport * as overtimesActions from '../../actions/overtimes'\nimport SingleDatePicker from '../../helpers/singleDatePicker'\nimport Time from '../../../commons/const/Time'\nimport TimePickers from './TimePicker';\n\nfunction DayOffForm(props) {\n  const {\n    overtimesActions,\n    buttonLabel,\n    title,\n    item,\n    id\n  } = props\n\n  const [modal, setModal] = useState(false);\n  const [data, setData] = useState(\n    item !== undefined ? {\n      date: moment(item.date, Time.crossDMY),\n      start_at: item.start_at,\n      end_at: item.end_at\n    } : {\n        date: moment(),\n        start_at: moment().format(Time.HM),\n        end_at: moment().add(3, 'hour').format(Time.HM)\n      }\n  )\n\n  const toggle = () => setModal(!modal);\n\n  const onFormSubmit = () => {\n    toggle\n    if (item !== undefined) overtimesActions.addOvertimes(data)\n    else overtimesActions.updateOvertimes(id, data)\n  }\n\n  return (\n    <div>\n      <Button style={{ width: \"100px\" }} color=\"info\" onClick={toggle}>{buttonLabel}</Button>\n      <Form>\n        <Modal isOpen={modal} toggle={toggle} centered={true}>\n          <ModalHeader toggle={toggle}>{title}</ModalHeader>\n          <ModalBody>\n\n            <FormGroup>\n              <SingleDatePicker\n                date={data.date}\n                onChange={e => setData({ ...data, date: e.target.value })} />\n            </FormGroup>\n            <FormGroup>\n              <TimePickers label=\"Start\" defaultTime={data.start_at} />{' '}\n              <TimePickers label=\"End\" defaultTime={data.end_at} />\n            </FormGroup>\n\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggle}>Cancel</Button>{' '}\n            <Button color=\"secondary\" onClick={onFormSubmit}>Submit</Button>\n          </ModalFooter>\n        </Modal>\n      </Form>\n    </div >\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    overtimesActions: bindActionCreators(overtimesActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayOffForm);"]},"metadata":{},"sourceType":"module"}