{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/phong/rails/imp/app/javascript/commons/components/modal/confirmModal.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\n\nvar ConfirmModal = function ConfirmModal(props) {\n  var item = props.item,\n      confirm = props.confirm,\n      refuse = props.refuse;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!isOpen);\n  };\n\n  var isConfirm = function isConfirm() {\n    confirm(item);\n    toggle();\n  };\n\n  var isRefuse = function isRefuse() {\n    refuse(item);\n    toggle();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"warning\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Waiting\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    style: {\n      marginTop: \"190px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Please confirm the request\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: isConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"warning\",\n    onClick: isRefuse,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Reject\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nexport default ConfirmModal;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/commons/components/modal/confirmModal.js"],"names":["React","useState","Modal","ModalHeader","ModalBody","ModalFooter","Button","ConfirmModal","props","item","confirm","refuse","isOpen","setModal","toggle","isConfirm","isRefuse","marginTop"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,MALF,QAMO,YANP;;AAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,MACrBC,IADqB,GACKD,KADL,CACrBC,IADqB;AAAA,MACfC,OADe,GACKF,KADL,CACfE,OADe;AAAA,MACNC,MADM,GACKH,KADL,CACNG,MADM;;AAAA,kBAEDV,QAAQ,CAAC,KAAD,CAFP;AAAA;AAAA,MAErBW,MAFqB;AAAA,MAEbC,QAFa;;AAG5B,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,QAAQ,CAAC,CAACD,MAAF,CAAd;AAAA,GAAf;;AACA,MAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBL,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,IAAAA,MAAM;AACP,GAHD;;AAIA,MAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBL,IAAAA,MAAM,CAACF,IAAD,CAAN;AACAK,IAAAA,MAAM;AACP,GAHD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEA,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,MAAf;AAAuB,IAAA,MAAM,EAAEE,MAA/B;AAAuC,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAE;AAAZ,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEH,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CAFF,eAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEF,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CALF,CAJF,CADF;AAwBD,CApCD;;AAqCA,eAAeP,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button\n} from \"reactstrap\";\n\nconst ConfirmModal = props => {\n  const {item, confirm, refuse } = props;\n  const [isOpen, setModal] = useState(false);\n  const toggle = () => setModal(!isOpen);\n  const isConfirm = () => {\n    confirm(item);\n    toggle();\n  };\n  const isRefuse = () => {\n    refuse(item);\n    toggle();\n  };\n  return (\n    <div>\n      <Button color=\"warning\" onClick={toggle}>\n        Waiting\n      </Button>\n      <Modal isOpen={isOpen} toggle={toggle} style={{marginTop: \"190px\"}}>\n        <ModalHeader toggle={toggle}>Confirm</ModalHeader>\n        <ModalBody>\n          <p>Please confirm the request</p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={isConfirm}>\n            Confirm\n          </Button>\n          <Button color=\"warning\" onClick={isRefuse}>\n            Reject\n          </Button>\n          <Button color=\"secondary\" onClick={toggle}>\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default ConfirmModal;\n"]},"metadata":{},"sourceType":"module"}