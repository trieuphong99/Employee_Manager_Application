{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/checkIn/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './checkIn.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\nimport { getInfoCurrentUser as _getInfoCurrentUser } from '../../actions/account';\nimport moment from 'moment';\nimport RealTime from 'react-live-clock';\nimport Clock from 'react-clock';\nimport Time from '../../../commons/const/Time';\n\nvar CheckIn = function CheckIn(props) {\n  var className = props.className;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reason = _useState4[0],\n      setReason = _useState4[1];\n\n  var letCheckIn = function letCheckIn() {\n    if (moment().isAfter(moment(Time.startWork, Time.HM))) {\n      toggle();\n    } else {\n      props.checkIn('');\n    }\n  };\n\n  var finishReport = function finishReport() {\n    props.checkIn(reason);\n  };\n\n  var _useState5 = useState(new Date()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timeClock = _useState6[0],\n      setTimeClock = _useState6[1];\n\n  useEffect(function () {\n    _getInfoCurrentUser();\n\n    setInterval(function () {\n      return setTimeClock(new Date());\n    }, 1000); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"check-in\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total-content-check-in\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-check-in\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Check in\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-check-in\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    value: timeClock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(RealTime, {\n    format: Time.FullDayFirst,\n    ticking: true,\n    timezone: Time.timeZone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-checkin\",\n    onClick: letCheckIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Why are you late for work ?\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    \"for\": \"exampleText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Reason\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"text\",\n    id: \"exampleText\",\n    onChange: function onChange(e) {\n      return setReason(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: finishReport,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Check In\"))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkIn: function checkIn(reason) {\n      dispatch(actions.checkIn({\n        reason: reason\n      }));\n    },\n    getInfoCurrentUser: function getInfoCurrentUser() {\n      return dispatch(_getInfoCurrentUser());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckIn);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/checkIn/index.js"],"names":["React","useState","useEffect","Button","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","connect","actions","getInfoCurrentUser","moment","RealTime","Clock","Time","CheckIn","props","className","modal","setModal","toggle","reason","setReason","letCheckIn","isAfter","startWork","HM","checkIn","finishReport","Date","timeClock","setTimeClock","setInterval","FullDayFirst","timeZone","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './checkIn.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\nimport { getInfoCurrentUser } from '../../actions/account'\nimport moment from 'moment'\nimport RealTime from 'react-live-clock';\nimport Clock from 'react-clock';\nimport Time from '../../../commons/const/Time';\n\nconst CheckIn = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  const [reason, setReason] = useState('');\n  const letCheckIn = () => {\n    if (moment().isAfter(moment(Time.startWork, Time.HM))) {\n      toggle();\n    }\n    else {\n      props.checkIn('');\n    }\n  }\n  const finishReport = () => {\n    props.checkIn(reason);\n  }\n  const [timeClock, setTimeClock] = useState(new Date());\n  useEffect(() => {\n    getInfoCurrentUser()\n    setInterval(\n      () => setTimeClock(new Date()),\n      1000\n    );\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <div className=\"check-in\">\n      <div className='total-content-check-in'>\n        <div className='title-check-in'>Check in</div>\n        <div className='date-check-in'>\n          <Clock value={timeClock} />\n          <RealTime format={Time.FullDayFirst} ticking={true} timezone={Time.timeZone} />\n        </div>\n        <button className=\"btn btn-checkin\" onClick={letCheckIn}>Start</button>\n        <div>\n          <Modal isOpen={modal} toggle={toggle} className={className}>\n            <ModalHeader toggle={toggle}>Why are you late for work ?</ModalHeader>\n            <ModalBody>\n              <FormGroup>\n                <Label for=\"exampleText\">Reason</Label>\n                <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={(e) => setReason(e.target.value)} />\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n              <Button color=\"success\" onClick={finishReport}>Check In</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkIn: (reason) => { dispatch(actions.checkIn({ reason: reason })) },\n    getInfoCurrentUser: () => dispatch(getInfoCurrentUser())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckIn);\n"]},"metadata":{},"sourceType":"module"}