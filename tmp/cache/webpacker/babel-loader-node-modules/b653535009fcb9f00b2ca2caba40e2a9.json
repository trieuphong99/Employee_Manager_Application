{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as accountContans from '../const/account';\nvar initialState = {\n  total_page: 1,\n  data: [],\n  detail: {}\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // --------------REDUCER LIST ACCOUNT-----------------\n    case accountContans.FETCH_ACCOUNT:\n      {\n        return action.data;\n      }\n\n    case accountContans.GET_ALL_USER:\n      return action.data;\n    // --------------REDUCER ADD ACCOUNT-----------------\n\n    case accountContans.ADD_ACCOUNT:\n      {\n        return _objectSpread({}, state, {\n          data: [action.data].concat(_toConsumableArray(_.slice(state.data, 0, state.data.length - 1)))\n        });\n      }\n    // --------------REDUCER UPDATE ACCOUNT-----------------\n\n    case accountContans.UPDATE_ACCOUNT:\n      {\n        var item = action.data;\n\n        var index = _.findIndex(state.data, function (o) {\n          return o.id === item.id;\n        });\n\n        return _objectSpread({}, state, {\n          data: [].concat(_toConsumableArray(_.slice(state.data, 0, index)), [item], _toConsumableArray(_.slice(state.data, index + 1))),\n          detail: item\n        });\n      }\n    // --------------REDUCER DELETE ACCOUNT-----------------\n\n    case accountContans.DELETE_ACCOUNT:\n      {\n        var data = action.data;\n        return _objectSpread({}, state, {\n          data: state.data.filter(function (item) {\n            return item.id !== data.id;\n          })\n        });\n      }\n    // --------------REDUCER DETAIL ACCOUNT-----------------\n\n    case accountContans.DETAIL_ACCOUNT:\n      {\n        return _objectSpread({}, state, {\n          detail: action.data\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/reducer/account.js"],"names":["accountContans","initialState","total_page","data","detail","reducer","state","action","type","FETCH_ACCOUNT","GET_ALL_USER","ADD_ACCOUNT","_","slice","length","UPDATE_ACCOUNT","item","index","findIndex","o","id","DELETE_ACCOUNT","filter","DETAIL_ACCOUNT"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,cAAZ,MAAgC,kBAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKR,cAAc,CAACS,aAApB;AAAmC;AACjC,eAAOF,MAAM,CAACJ,IAAd;AACD;;AACD,SAAKH,cAAc,CAACU,YAApB;AACE,aAAOH,MAAM,CAACJ,IAAd;AACF;;AACA,SAAKH,cAAc,CAACW,WAApB;AAAiC;AAC/B,iCACKL,KADL;AAEEH,UAAAA,IAAI,GACFI,MAAM,CAACJ,IADL,4BAECS,CAAC,CAACC,KAAF,CAAQP,KAAK,CAACH,IAAd,EAAoB,CAApB,EAAuBG,KAAK,CAACH,IAAN,CAAWW,MAAX,GAAoB,CAA3C,CAFD;AAFN;AAQD;AACD;;AACA,SAAKd,cAAc,CAACe,cAApB;AAAoC;AAClC,YAAMC,IAAI,GAAGT,MAAM,CAACJ,IAApB;;AACA,YAAMc,KAAK,GAAGL,CAAC,CAACM,SAAF,CAAYZ,KAAK,CAACH,IAAlB,EAAwB,UAAAgB,CAAC;AAAA,iBAAIA,CAAC,CAACC,EAAF,KAASJ,IAAI,CAACI,EAAlB;AAAA,SAAzB,CAAd;;AACA,iCACKd,KADL;AAEEH,UAAAA,IAAI,+BACCS,CAAC,CAACC,KAAF,CAAQP,KAAK,CAACH,IAAd,EAAoB,CAApB,EAAuBc,KAAvB,CADD,IAEFD,IAFE,sBAGCJ,CAAC,CAACC,KAAF,CAAQP,KAAK,CAACH,IAAd,EAAoBc,KAAK,GAAG,CAA5B,CAHD,EAFN;AAOEb,UAAAA,MAAM,EAAEY;AAPV;AASD;AACD;;AACA,SAAKhB,cAAc,CAACqB,cAApB;AAAoC;AAAA,YAC1BlB,IAD0B,GACjBI,MADiB,CAC1BJ,IAD0B;AAElC,iCACKG,KADL;AAEEH,UAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWmB,MAAX,CAAkB,UAAAN,IAAI;AAAA,mBAAIA,IAAI,CAACI,EAAL,KAAYjB,IAAI,CAACiB,EAArB;AAAA,WAAtB;AAFR;AAID;AACD;;AACA,SAAKpB,cAAc,CAACuB,cAApB;AAAoC;AAClC,iCACKjB,KADL;AAEEF,UAAAA,MAAM,EAAEG,MAAM,CAACJ;AAFjB;AAID;;AACD;AACE,aAAOG,KAAP;AAhDJ;AAkDD,CAnDD;;AAqDA,eAAeD,OAAf","sourcesContent":["import * as accountContans from '../const/account';\n\nconst initialState = {\n  total_page: 1,\n  data: [],\n  detail: {}\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // --------------REDUCER LIST ACCOUNT-----------------\n    case accountContans.FETCH_ACCOUNT: {\n      return action.data\n    }\n    case accountContans.GET_ALL_USER:\n      return action.data\n    // --------------REDUCER ADD ACCOUNT-----------------\n    case accountContans.ADD_ACCOUNT: {\n      return {\n        ...state,\n        data: [\n          action.data,\n          ..._.slice(state.data, 0, state.data.length - 1),\n        ]\n      }\n\n    }\n    // --------------REDUCER UPDATE ACCOUNT-----------------\n    case accountContans.UPDATE_ACCOUNT: {\n      const item = action.data;\n      const index = _.findIndex(state.data, o => o.id === item.id);\n      return {\n        ...state,\n        data: [\n          ..._.slice(state.data, 0, index),\n          item,\n          ..._.slice(state.data, index + 1),\n        ],\n        detail: item\n      };\n    }\n    // --------------REDUCER DELETE ACCOUNT-----------------\n    case accountContans.DELETE_ACCOUNT: {\n      const { data } = action;\n      return {\n        ...state,\n        data: state.data.filter(item => item.id !== data.id)\n      };\n    }\n    // --------------REDUCER DETAIL ACCOUNT-----------------\n    case accountContans.DETAIL_ACCOUNT: {\n      return {\n        ...state,\n        detail: action.data\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}