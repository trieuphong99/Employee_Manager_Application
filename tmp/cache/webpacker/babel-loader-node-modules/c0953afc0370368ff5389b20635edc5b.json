{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/phong/rails/imp/app/javascript/admin/components/dashboard/barChart.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataBarChart } from \"../../actions/dashBoard\";\nimport { Input } from \"reactstrap\";\nimport _ from \"lodash\";\nimport moment from 'moment';\nimport Time from \"../../../commons/const/Time\";\n\nvar BarChart = function BarChart(props) {\n  var _useState = useState(\"1\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      week = _useState2[0],\n      setWeek = _useState2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(getDataBarChart(week));\n  }, [week]);\n  var dataBar = useSelector(function (state) {\n    return state.getDataDashBoard.dataBar;\n  });\n  var series = [{\n    data: _.map(dataBar, function (e) {\n      return e.worker;\n    })\n  }];\n  var options = {\n    chart: {\n      type: \"bar\",\n      height: 400\n    },\n    plotOptions: {\n      bar: {\n        barHeight: \"100%\",\n        distributed: true,\n        horizontal: true,\n        dataLabels: {\n          position: \"bottom\"\n        }\n      }\n    },\n    colors: [\"#33b2df\"],\n    dataLabels: {\n      enabled: true,\n      textAnchor: \"start\",\n      style: {\n        colors: [\"#000000\"],\n        fontSize: '18px'\n      },\n      formatter: function formatter(val, opt) {\n        return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n      },\n      offsetX: 0\n    },\n    responsive: [{\n      breakpoint: 1900,\n      options: {\n        chart: {\n          height: 300\n        },\n        plotOptions: {\n          bar: {\n            barHeight: \"100%\",\n            distributed: true,\n            horizontal: true,\n            dataLabels: {\n              position: \"bottom\"\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          textAnchor: \"start\",\n          style: {\n            colors: [\"#000000\"],\n            fontSize: '12px'\n          }\n        }\n      }\n    }],\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    xaxis: {\n      categories: _.map(dataBar, function (e) {\n        return moment(e.date).format(Time.DMY);\n      })\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    legend: {\n      show: false\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row includes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col labels-weekly-work\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Weekly work\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row select-week\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"input-select-work\",\n    type: \"select\",\n    onClick: function onClick(e) {\n      return setWeek(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, _.map([1, 2, 3], function (e, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: e,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, e);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-7 labels-select-week\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"weeks ago\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"barchart-frame\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    options: options,\n    series: series,\n    type: \"bar\",\n    height: 500,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/components/dashboard/barChart.js"],"names":["React","useEffect","useState","Chart","useDispatch","useSelector","getDataBarChart","Input","_","moment","Time","BarChart","props","week","setWeek","dispatch","dataBar","state","getDataDashBoard","series","data","map","e","worker","options","chart","type","height","plotOptions","bar","barHeight","distributed","horizontal","dataLabels","position","colors","enabled","textAnchor","style","fontSize","formatter","val","opt","w","globals","labels","dataPointIndex","offsetX","responsive","breakpoint","stroke","width","xaxis","categories","date","format","DMY","yaxis","show","legend","target","value","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataBarChart } from \"../../actions/dashBoard\";\nimport { Input } from \"reactstrap\";\nimport _ from \"lodash\";\nimport moment from 'moment';\nimport Time from \"../../../commons/const/Time\";\n\nconst BarChart = (props) => {\n  const [week, setWeek] = useState(\"1\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getDataBarChart(week));\n  }, [week]);\n  const dataBar = useSelector((state) => state.getDataDashBoard.dataBar);\n  const series = [\n    {\n      data: _.map(dataBar, (e) => e.worker),\n    },\n  ];\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 400,\n    },\n    plotOptions: {\n      bar: {\n        barHeight: \"100%\",\n        distributed: true,\n        horizontal: true,\n        dataLabels: {\n          position: \"bottom\",\n        },\n      },\n    },\n    colors: [\"#33b2df\"],\n    dataLabels: {\n      enabled: true,\n      textAnchor: \"start\",\n      style: {\n        colors: [\"#000000\"],\n        fontSize: '18px'\n      },\n      formatter: function (val, opt) {\n        return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n      },\n      offsetX: 0,\n    },\n    responsive: [\n      {\n        breakpoint: 1900,\n        options: {\n          chart: {\n            height: 300\n          },\n          plotOptions: {\n            bar: {\n              barHeight: \"100%\",\n              distributed: true,\n              horizontal: true,\n              dataLabels: {\n                position: \"bottom\",\n              },\n            },\n          },\n          dataLabels: {\n            enabled: true,\n            textAnchor: \"start\",\n            style: {\n              colors: [\"#000000\"],\n              fontSize: '12px'\n            }\n          }\n        }\n      }\n    ],\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"],\n    },\n    xaxis: {\n      categories: _.map(dataBar, (e) => moment(e.date).format(Time.DMY)),\n    },\n    yaxis: {\n      labels: {\n        show: false,\n      },\n    },\n    legend: {\n      show: false,\n    },\n  };\n  return (\n    <div>\n      <div className=\"row includes\">\n        <div className=\"col labels-weekly-work\">\n          Weekly work\n        </div>\n        <div className=\"col\">\n          <div className=\"row select-week\">\n            <div className=\"col-5\">\n              <Input\n                className = \"input-select-work\"\n                type=\"select\"\n                onClick={(e) => setWeek(e.target.value)}\n              >\n                {_.map([1, 2, 3], (e, index) => {\n                  return(\n                    <option value={e} key={index}>{e}</option>\n                  )\n                })}\n              </Input>\n            </div>\n            <div className=\"col-7 labels-select-week\">\n              weeks ago\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"barchart-frame\">\n        <Chart options={options} series={series} type=\"bar\" height={500} />\n      </div>\n    </div>\n  );\n};\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}