{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as accountContans from '../const/account';\nimport { toastSuccess } from '../../commons/helpers/toastHelpers/index';\nvar initialState = {\n  listAccount: [],\n  accountEditTing: null,\n  accountItem: {}\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // --------------REDUCER LIST ACCOUNT-----------------\n    case accountContans.FETCH_ACCOUNT:\n      {\n        return _objectSpread({}, state, {\n          listAccount: action.payload.data\n        });\n      }\n    // --------------REDUCER ADD ACCOUNT-----------------\n\n    case accountContans.ADD_ACCOUNT:\n      {\n        var data = action.payload.data;\n        return _objectSpread({}, state, {\n          listAccount: [data].concat(state.listAccount)\n        });\n      }\n    // -------------REDUCER ACCOUNT EDITTING ---------------\n\n    case accountContans.SET_ACCOUNT_EDITTING:\n      {\n        var account = action.payload.account;\n        return _objectSpread({}, state, {\n          accountEditTing: account\n        });\n      }\n    // --------------REDUCER UPDATE ACCOUNT-----------------\n\n    case accountContans.UPDATE_ACCOUNT:\n      {\n        var _data = action.payload.data;\n        var listAccount = state.listAccount;\n        var index = listAccount.findIndex(function (item) {\n          return item.id === _data.id;\n        });\n\n        if (index !== -1) {\n          var newList = [].concat(_toConsumableArray(listAccount.slice(0, index)), [_data], _toConsumableArray(listAccount.slice(index + 1)));\n          return _objectSpread({}, state, {\n            listAccount: newList\n          });\n        }\n\n        return _objectSpread({}, state);\n      }\n    // --------------REDUCER DELETE ACCOUNT-----------------\n\n    case accountContans.DELETE_ACCOUNT:\n      {\n        var _data2 = action.payload.data;\n        return _objectSpread({}, state, {\n          listAccount: state.listAccount.filter(function (item) {\n            return item.id !== _data2.id;\n          })\n        });\n      }\n    // --------------REDUCER DETAIL ACCOUNT-----------------\n\n    case accountContans.DETAIL_ACCOUNT:\n      {\n        return _objectSpread({}, state, {\n          accountItem: action.payload.data\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/reducer/account.js"],"names":["accountContans","toastSuccess","initialState","listAccount","accountEditTing","accountItem","reducer","state","action","type","FETCH_ACCOUNT","payload","data","ADD_ACCOUNT","concat","SET_ACCOUNT_EDITTING","account","UPDATE_ACCOUNT","index","findIndex","item","id","newList","slice","DELETE_ACCOUNT","filter","DETAIL_ACCOUNT"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,cAAZ,MAAgC,kBAAhC;AACA,SAASC,YAAT,QAA6B,0CAA7B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,WAAW,EAAE;AAHM,CAArB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKT,cAAc,CAACU,aAApB;AAAmC;AACjC,iCACKH,KADL;AAEEJ,UAAAA,WAAW,EAAEK,MAAM,CAACG,OAAP,CAAeC;AAF9B;AAID;AACD;;AACA,SAAKZ,cAAc,CAACa,WAApB;AAAiC;AAAA,YACvBD,IADuB,GACdJ,MAAM,CAACG,OADO,CACvBC,IADuB;AAE/B,iCACKL,KADL;AAEEJ,UAAAA,WAAW,EAAE,CAACS,IAAD,EAAOE,MAAP,CAAcP,KAAK,CAACJ,WAApB;AAFf;AAID;AACD;;AACA,SAAKH,cAAc,CAACe,oBAApB;AAA0C;AAAA,YAChCC,OADgC,GACpBR,MAAM,CAACG,OADa,CAChCK,OADgC;AAExC,iCACKT,KADL;AAEEH,UAAAA,eAAe,EAAEY;AAFnB;AAID;AACD;;AACA,SAAKhB,cAAc,CAACiB,cAApB;AAAoC;AAAA,YAC1BL,KAD0B,GACjBJ,MAAM,CAACG,OADU,CAC1BC,IAD0B;AAAA,YAE1BT,WAF0B,GAEVI,KAFU,CAE1BJ,WAF0B;AAGlC,YAAMe,KAAK,GAAGf,WAAW,CAACgB,SAAZ,CAAsB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAYT,KAAI,CAACS,EAArB;AAAA,SAA1B,CAAd;;AACA,YAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,cAAMI,OAAO,gCACRnB,WAAW,CAACoB,KAAZ,CAAkB,CAAlB,EAAqBL,KAArB,CADQ,IAEXN,KAFW,sBAGRT,WAAW,CAACoB,KAAZ,CAAkBL,KAAK,GAAG,CAA1B,CAHQ,EAAb;AAKA,mCACKX,KADL;AAEEJ,YAAAA,WAAW,EAAEmB;AAFf;AAID;;AACD,iCACKf,KADL;AAGD;AACD;;AACA,SAAKP,cAAc,CAACwB,cAApB;AAAoC;AAAA,YAC1BZ,MAD0B,GACjBJ,MAAM,CAACG,OADU,CAC1BC,IAD0B;AAElC,iCACKL,KADL;AAEEJ,UAAAA,WAAW,EAAEI,KAAK,CAACJ,WAAN,CAAkBsB,MAAlB,CAAyB,UAAAL,IAAI;AAAA,mBAAIA,IAAI,CAACC,EAAL,KAAYT,MAAI,CAACS,EAArB;AAAA,WAA7B;AAFf;AAID;AACD;;AACA,SAAKrB,cAAc,CAAC0B,cAApB;AAAoC;AAClC,iCACKnB,KADL;AAEEF,UAAAA,WAAW,EAAEG,MAAM,CAACG,OAAP,CAAeC;AAF9B;AAID;;AACD;AACE,aAAOL,KAAP;AA5DJ;AA8DD,CA/DD;;AAiEA,eAAeD,OAAf","sourcesContent":["import * as accountContans from '../const/account';\nimport { toastSuccess } from '../../commons/helpers/toastHelpers/index';\n\nconst initialState = {\n  listAccount: [],\n  accountEditTing: null,\n  accountItem: {},\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // --------------REDUCER LIST ACCOUNT-----------------\n    case accountContans.FETCH_ACCOUNT: {\n      return {\n        ...state,\n        listAccount: action.payload.data\n      };\n    }\n    // --------------REDUCER ADD ACCOUNT-----------------\n    case accountContans.ADD_ACCOUNT: {\n      const { data } = action.payload;\n      return {\n        ...state,\n        listAccount: [data].concat(state.listAccount)\n      };\n    }\n    // -------------REDUCER ACCOUNT EDITTING ---------------\n    case accountContans.SET_ACCOUNT_EDITTING: {\n      const { account } = action.payload;\n      return {\n        ...state,\n        accountEditTing: account\n      };\n    }\n    // --------------REDUCER UPDATE ACCOUNT-----------------\n    case accountContans.UPDATE_ACCOUNT: {\n      const { data } = action.payload;\n      const { listAccount } = state;\n      const index = listAccount.findIndex(item => item.id === data.id);\n      if (index !== -1) {\n        const newList = [\n          ...listAccount.slice(0, index),\n          data,\n          ...listAccount.slice(index + 1),\n        ];\n        return {\n          ...state,\n          listAccount: newList,\n        };\n      }\n      return {\n        ...state,\n      };\n    }\n    // --------------REDUCER DELETE ACCOUNT-----------------\n    case accountContans.DELETE_ACCOUNT: {\n      const { data } = action.payload;\n      return {\n        ...state,\n        listAccount: state.listAccount.filter(item => item.id !== data.id)\n      };\n    }\n    // --------------REDUCER DETAIL ACCOUNT-----------------\n    case accountContans.DETAIL_ACCOUNT: {\n      return {\n        ...state,\n        accountItem: action.payload.data\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}