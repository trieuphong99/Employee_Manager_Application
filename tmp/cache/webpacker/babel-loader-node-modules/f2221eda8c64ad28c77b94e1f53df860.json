{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/overtimes/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Table, Badge } from 'reactstrap';\nimport moment from 'moment';\nimport \"react-dates/lib/css/_datepicker.css\";\nimport _ from 'lodash';\nimport Time from '../../../commons/const/Time';\nimport * as actions from '../../actions/overtimes';\nimport DateRangePicker from '../../../commons/components/dateRangePicker';\nimport Pagination from '../../../commons/components/pagination';\nimport OvertimesFormModal from './OvertimeForm';\n\nvar Overtimes = function Overtimes(props) {\n  var _useState = useState({\n    startTime: moment().subtract(1, 'months').startOf(\"month\").format(Time.DMY),\n    endTime: moment().add(1, 'months').endOf('month').format(Time.DMY)\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var listOvertimes = props.listOvertimes,\n      totalPage = props.totalPage;\n  useEffect(function () {\n    props.getOvertimes(date, currentPage);\n  }, [date, currentPage]);\n  return React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(BreadcrumbItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Home\")), React.createElement(BreadcrumbItem, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Overtime\")), React.createElement(\"div\", {\n    className: \"staff-tool\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(OvertimesFormModal, {\n    title: \"Overtime\",\n    buttonLabel: \"Add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(DateRangePicker, {\n    blockRange: \"none\",\n    date: date,\n    setDate: setDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Table, {\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Start\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"End\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Reason\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Confirm\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, _.map(listOvertimes, function (item, index) {\n    var statusColor = {\n      Confirmed: \"success\",\n      Rejected: \"danger\",\n      Waiting: \"warning\"\n    };\n    var expired = moment().diff(moment(item.date, Time.crossDMY), \"days\") > 0;\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, item.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, item.start_at), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, item.end_at), React.createElement(\"td\", {\n      className: \"reason\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, item.reason), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      href: \"#\",\n      color: statusColor[item.confirmation_status],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, item.confirmation_status)), React.createElement(\"td\", {\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, item.confirmation_status === \"Waiting\" && !expired && React.createElement(OvertimesFormModal, {\n      title: \"Edit overtime\",\n      buttonLabel: \"Edit\",\n      item: item,\n      id: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Pagination, {\n    totalPage: totalPage,\n    pageChange: setCurrentPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listOvertimes: state.overtimes.data,\n    totalPage: state.overtimes.total_page\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getOvertimes: function getOvertimes(date, currentPage) {\n      return dispatch(actions.getOvertimes({\n        date: date,\n        currentPage: currentPage\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overtimes);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/overtimes/index.js"],"names":["React","useState","useEffect","connect","Link","Breadcrumb","BreadcrumbItem","Table","Badge","moment","_","Time","actions","DateRangePicker","Pagination","OvertimesFormModal","Overtimes","props","startTime","subtract","startOf","format","DMY","endTime","add","endOf","date","setDate","currentPage","setCurrentPage","listOvertimes","totalPage","getOvertimes","map","item","index","statusColor","Confirmed","Rejected","Waiting","expired","diff","crossDMY","start_at","end_at","reason","confirmation_status","width","id","mapStateToProps","state","overtimes","data","total_page","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Table, Badge } from 'reactstrap'\nimport moment from 'moment'\nimport \"react-dates/lib/css/_datepicker.css\";\nimport _ from 'lodash';\n\nimport Time from '../../../commons/const/Time';\nimport * as actions from '../../actions/overtimes'\nimport DateRangePicker from '../../../commons/components/dateRangePicker'\nimport Pagination from '../../../commons/components/pagination'\nimport OvertimesFormModal from './OvertimeForm'\n\nconst Overtimes = props => {\n  const [date, setDate] = useState({\n    startTime: moment().subtract(1, 'months').startOf(\"month\").format(Time.DMY),\n    endTime: moment().add(1, 'months').endOf('month').format(Time.DMY)\n  })\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const { listOvertimes, totalPage } = props\n\n  useEffect(() => {\n    props.getOvertimes(date, currentPage)\n  }, [date, currentPage])\n\n  return (\n    <div className=\"container-fluid\">\n      <Breadcrumb>\n        <BreadcrumbItem>\n          <Link to=\"/\">Home</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>Overtime</BreadcrumbItem>\n      </Breadcrumb>\n      <div className=\"staff-tool\">\n        <div>\n          <OvertimesFormModal\n            title=\"Overtime\"\n            buttonLabel=\"Add\"\n          />\n        </div>\n        <div>\n          <DateRangePicker\n            blockRange=\"none\"\n            date={date}\n            setDate={setDate}\n          />\n        </div>\n      </div>\n      <div>\n        <Table hover>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Start</th>\n              <th>End</th>\n              <th>Reason</th>\n              <th>Confirm</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              _.map(listOvertimes, (item, index) => {\n                const statusColor = { Confirmed: \"success\", Rejected: \"danger\", Waiting: \"warning\" }\n                const expired = moment().diff(moment(item.date, Time.crossDMY), \"days\") > 0\n\n                return (\n                  <tr key={index}>\n                    <td>{item.date}</td>\n                    <td>{item.start_at}</td>\n                    <td>{item.end_at}</td>\n                    <td className=\"reason\">{item.reason}</td>\n                    <td><Badge href=\"#\" color={statusColor[item.confirmation_status]}>{item.confirmation_status}</Badge></td>\n                    <td style={{ width: \"15%\" }}>\n                      {item.confirmation_status === \"Waiting\" && !expired &&\n                        <OvertimesFormModal\n                          title=\"Edit overtime\"\n                          buttonLabel=\"Edit\"\n                          item={item}\n                          id={item.id}\n                        />\n                      }\n                    </td>\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </Table>\n      </div>\n      <div>\n        <Pagination totalPage={totalPage} pageChange={setCurrentPage} />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    listOvertimes: state.overtimes.data,\n    totalPage: state.overtimes.total_page\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getOvertimes: (date, currentPage) => dispatch(actions.getOvertimes({ date, currentPage }))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overtimes);\n"]},"metadata":{},"sourceType":"module"}