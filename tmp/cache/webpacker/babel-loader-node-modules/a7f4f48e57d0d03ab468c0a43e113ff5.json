{"ast":null,"code":"var axios = require(\"axios\");\n\nimport { toastError } from '../../commons/helpers/toastHelpers/';\nimport { hideLoading, showLoading } from './loading';\nexport var getReport = function getReport(id, setData, setMention, setIsNewReport) {\n  axios.get(\"/report/\".concat(id)).then(function (res) {\n    var _res$data = res.data,\n        report_message = _res$data.report_message,\n        attachments = _res$data.attachments,\n        users = _res$data.users,\n        channels = _res$data.channels,\n        send_to = _res$data.send_to;\n    setData({\n      report_message: report_message,\n      attachments: attachments,\n      users: users,\n      channels: channels,\n      send_to: send_to\n    });\n    if (report_message !== \"\") setIsNewReport(false);\n  })[\"catch\"](function (error) {\n    toastError(error.response.data);\n  });\n};\nexport var postReport = function postReport(id, report_message, send_to, attachments) {\n  var body = {\n    report_message: report_message,\n    send_to: send_to,\n    attachments: attachments\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.post(\"/report/\".concat(id), body).then(function (res) {\n      toastSuccess(\"Successful!\");\n    })[\"catch\"](function (error) {\n      toastError(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var updateReport = function updateReport(id, report_message, send_to, attachments) {\n  var body = {\n    report_message: report_message,\n    send_to: send_to,\n    attachments: attachments\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.put(\"/report/\".concat(id), body).then(function (res) {\n      toastSuccess(\"Successful!\");\n    })[\"catch\"](function (error) {\n      toastError(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/actions/report.js"],"names":["axios","require","toastError","hideLoading","showLoading","getReport","id","setData","setMention","setIsNewReport","get","then","res","data","report_message","attachments","users","channels","send_to","error","response","postReport","body","dispatch","post","toastSuccess","updateReport","put"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,WAAzC;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAKC,OAAL,EAAcC,UAAd,EAA0BC,cAA1B,EAA6C;AACpET,EAAAA,KAAK,CAACU,GAAN,mBAAqBJ,EAArB,GACGK,IADH,CACQ,UAAAC,GAAG,EAAI;AAAA,oBACuDA,GAAG,CAACC,IAD3D;AAAA,QACHC,cADG,aACHA,cADG;AAAA,QACaC,WADb,aACaA,WADb;AAAA,QAC0BC,KAD1B,aAC0BA,KAD1B;AAAA,QACiCC,QADjC,aACiCA,QADjC;AAAA,QAC2CC,OAD3C,aAC2CA,OAD3C;AAEXX,IAAAA,OAAO,CAAC;AAAEO,MAAAA,cAAc,EAAdA,cAAF;AAAkBC,MAAAA,WAAW,EAAXA,WAAlB;AAA+BC,MAAAA,KAAK,EAALA,KAA/B;AAAsCC,MAAAA,QAAQ,EAARA,QAAtC;AAAgDC,MAAAA,OAAO,EAAPA;AAAhD,KAAD,CAAP;AACA,QAAGJ,cAAc,KAAK,EAAtB,EAA0BL,cAAc,CAAC,KAAD,CAAd;AAC3B,GALH,WAMS,UAAUU,KAAV,EAAiB;AACtBjB,IAAAA,UAAU,CAACiB,KAAK,CAACC,QAAN,CAAeP,IAAhB,CAAV;AACD,GARH;AASD,CAVM;AAYP,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACf,EAAD,EAAKQ,cAAL,EAAqBI,OAArB,EAA8BH,WAA9B,EAA8C;AACtE,MAAMO,IAAI,GAAG;AACXR,IAAAA,cAAc,EAAdA,cADW;AAEXI,IAAAA,OAAO,EAAPA,OAFW;AAGXH,IAAAA,WAAW,EAAXA;AAHW,GAAb;AAKA,SAAO,UAAAQ,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACnB,WAAW,EAAZ,CAAR;AACAJ,IAAAA,KAAK,CAACwB,IAAN,mBAAsBlB,EAAtB,GAA4BgB,IAA5B,EACGX,IADH,CACQ,UAAAC,GAAG,EAAI;AACXa,MAAAA,YAAY,CAAC,aAAD,CAAZ;AACD,KAHH,WAIS,UAAUN,KAAV,EAAiB;AACtBjB,MAAAA,UAAU,CAACiB,KAAD,CAAV;AACD,KANH,aAOW,YAAY;AACnBI,MAAAA,QAAQ,CAACpB,WAAW,EAAZ,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAnBM;AAqBP,OAAO,IAAMuB,YAAY,GAAG,SAAfA,YAAe,CAACpB,EAAD,EAAKQ,cAAL,EAAqBI,OAArB,EAA8BH,WAA9B,EAA8C;AACxE,MAAMO,IAAI,GAAG;AACXR,IAAAA,cAAc,EAAdA,cADW;AAEXI,IAAAA,OAAO,EAAPA,OAFW;AAGXH,IAAAA,WAAW,EAAXA;AAHW,GAAb;AAKA,SAAO,UAAAQ,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACnB,WAAW,EAAZ,CAAR;AACAJ,IAAAA,KAAK,CAAC2B,GAAN,mBAAqBrB,EAArB,GAA2BgB,IAA3B,EACGX,IADH,CACQ,UAAAC,GAAG,EAAI;AACXa,MAAAA,YAAY,CAAC,aAAD,CAAZ;AACD,KAHH,WAIS,UAAUN,KAAV,EAAiB;AACtBjB,MAAAA,UAAU,CAACiB,KAAD,CAAV;AACD,KANH,aAOW,YAAY;AACnBI,MAAAA,QAAQ,CAACpB,WAAW,EAAZ,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAnBM","sourcesContent":["var axios = require(\"axios\");\nimport { toastError } from '../../commons/helpers/toastHelpers/'\nimport { hideLoading, showLoading } from './loading'\n\nexport const getReport = (id, setData, setMention, setIsNewReport) => {\n  axios.get(`/report/${id}`) \n    .then(res => {\n      const { report_message, attachments, users, channels, send_to } = res.data\n      setData({ report_message, attachments, users, channels, send_to })\n      if(report_message !== \"\") setIsNewReport(false) \n    })\n    .catch(function (error) {\n      toastError(error.response.data);\n    })\n}\n\nexport const postReport = (id, report_message, send_to, attachments) => {\n  const body = {\n    report_message,\n    send_to,\n    attachments\n  }\n  return dispatch => {\n    dispatch(showLoading())\n    axios.post(`/report/${id}`, body)\n      .then(res => {\n        toastSuccess(\"Successful!\")\n      })\n      .catch(function (error) {\n        toastError(error);\n      })\n      .finally(function () {\n        dispatch(hideLoading())\n      });\n  }\n}\n\nexport const updateReport = (id, report_message, send_to, attachments) => {\n  const body = {\n    report_message,\n    send_to,\n    attachments\n  }\n  return dispatch => {\n    dispatch(showLoading())\n    axios.put(`/report/${id}`, body)\n      .then(res => {\n        toastSuccess(\"Successful!\")\n      })\n      .catch(function (error) {\n        toastError(error);\n      })\n      .finally(function () {\n        dispatch(hideLoading())\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}