{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/checkOut/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Col, Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './checkOut.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\nimport * as timeSheetActions from '../../actions/timeSheet';\nimport moment from 'moment';\nimport RealTime from 'react-live-clock';\nimport Clock from 'react-clock';\nimport Time from '../../../commons/const/Time';\nimport { compose } from 'redux';\nimport { Field, reduxForm } from 'redux-form';\nimport renderTextAreaField from './FormHelper/TextAreaField';\nimport validate from './redux-form/validate';\nimport { SingleDatePicker } from \"react-dates\";\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport { offSet as _offSet } from '../../actions/timeSheet';\nimport _ from 'lodash';\n\nvar CheckOut = function CheckOut(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      focused = _useState4[0],\n      setFocused = _useState4[1];\n\n  var _useState5 = useState(moment()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dateSelected = _useState6[0],\n      setDateSelected = _useState6[1];\n\n  var timeSheet = props.timeSheet,\n      handleSubmit = props.handleSubmit,\n      invalid = props.invalid,\n      submitting = props.submitting,\n      pristine = props.pristine,\n      reset = props.reset;\n\n  var _useState7 = useState(new Date()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      timeClock = _useState8[0],\n      setTimeClock = _useState8[1];\n\n  var compensation = timeSheet.compensation;\n  useEffect(function () {\n    setInterval(function () {\n      return setTimeClock(new Date());\n    }, 1000);\n    props.getStaffTimeSheet({\n      startTime: moment().format(Time.DMY),\n      endTime: moment().format(Time.DMY)\n    }, 1, 'ASC', 'All'); // eslint-disable-next-line\n  }, []);\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modal = _useState10[0],\n      setModal = _useState10[1];\n\n  var toggle = function toggle() {\n    setModal(!modal);\n    setDate(null);\n  };\n\n  var letCheckOut = function letCheckOut() {\n    var startTime = moment(timeSheet.data[0].start_at, Time.HMS);\n    var endTime = moment(moment().format(Time.HMS), Time.HMS);\n    var duration = moment.duration(endTime.diff(startTime));\n    var hours = duration.asHours();\n\n    if (hours <= Time.timeCheckWork) {\n      toggle();\n      reset();\n    } else {\n      props.checkOut('');\n    }\n  };\n\n  var finishReport = function finishReport(data) {\n    props.checkOut(data.Reason);\n\n    if (date) {\n      props.offSet(date, dateSelected, function () {\n        return;\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"check-out\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total-content-check-out\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-check-out\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Check out\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-check-out\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    value: timeClock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(RealTime, {\n    format: Time.FullDayFirst,\n    ticking: true,\n    timezone: Time.timeZone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-checkout\",\n    onClick: letCheckOut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Finish\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(finishReport),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Why are you leave early ?\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    \"for\": \"exampleText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \"Reason\"), /*#__PURE__*/React.createElement(Field, {\n    id: \"Reason\",\n    className: \"Reason\",\n    placeholder: \"Reason\",\n    name: \"Reason\",\n    component: renderTextAreaField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"compensation-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"compensation-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Compensation\", /*#__PURE__*/React.createElement(\"label\", {\n    className: \"optional\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }, \"(optional)\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"compensation-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(SingleDatePicker, {\n    id: \"date\",\n    block: true,\n    date: date // momentPropTypes.momentObj or null\n    ,\n    onDateChange: function onDateChange(date) {\n      setDate(date);\n    } // PropTypes.func.isRequired\n    ,\n    focused: focused // PropTypes.bool\n    ,\n    onFocusChange: function onFocusChange() {\n      return setFocused(!focused);\n    } // PropTypes.func.isRequired\n    ,\n    displayFormat: Time.crossDMY,\n    numberOfMonths: 1,\n    showClearDate: true,\n    isOutsideRange: function isOutsideRange(day) {\n      return isInclusivelyBeforeDay(day, moment());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, \"For date:\"), /*#__PURE__*/React.createElement(SingleDatePicker, {\n    id: \"for_date\",\n    block: true,\n    onDateChange: function onDateChange(date) {\n      return setDateSelected(date);\n    },\n    focused: null,\n    onFocusChange: function onFocusChange() {\n      return setFocused(null);\n    },\n    date: dateSelected // momentPropTypes.momentObj or null\n    ,\n    displayFormat: Time.crossDMY,\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }))), compensation && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"remind-compensation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }\n  }, \"Remind:\", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-remind\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, \"You have registered to make up on \", moment(compensation.date).format(Time.DMY), \" for \", moment(compensation.for_date).format(Time.DMY), \", the compensation period is \", compensation.off_hour, \" hour\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-remind\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, \" Please go to the timesheet to edit the make-up date for \", moment(compensation.for_date).format(Time.DMY), \" !\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    disabled: invalid || submitting || pristine,\n    className: \"btn btn-change-pass-word\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Check Out\")))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    timeSheet: state.timeSheet\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkOut: function checkOut(reason) {\n      dispatch(actions.checkOut({\n        reason: reason\n      }));\n    },\n    getStaffTimeSheet: function getStaffTimeSheet(date, current_page, sort_date) {\n      dispatch(timeSheetActions.getStaffTimeSheet({\n        date: date,\n        current_page: current_page,\n        sort_date: sort_date\n      }));\n    },\n    offSet: function offSet(date, for_date, reload) {\n      return dispatch(_offSet({\n        date: date,\n        for_date: for_date,\n        reload: reload\n      }));\n    }\n  };\n};\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps);\nvar withReduxForm = reduxForm({\n  form: 'CHECK_OUT',\n  validate: validate //tất cả code validate để trong validate.js mà import vào\n\n});\nexport default compose(withConnect, withReduxForm)(CheckOut);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/checkOut/index.js"],"names":["React","useState","useEffect","Col","Button","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","connect","actions","timeSheetActions","moment","RealTime","Clock","Time","compose","Field","reduxForm","renderTextAreaField","validate","SingleDatePicker","isInclusivelyBeforeDay","offSet","_","CheckOut","props","date","setDate","focused","setFocused","dateSelected","setDateSelected","timeSheet","handleSubmit","invalid","submitting","pristine","reset","Date","timeClock","setTimeClock","compensation","setInterval","getStaffTimeSheet","startTime","format","DMY","endTime","modal","setModal","toggle","letCheckOut","data","start_at","HMS","duration","diff","hours","asHours","timeCheckWork","checkOut","finishReport","Reason","FullDayFirst","timeZone","crossDMY","day","for_date","off_hour","mapStateToProps","state","mapDispatchToProps","dispatch","reason","current_page","sort_date","reload","withConnect","withReduxForm","form"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Col, Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './checkOut.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\nimport * as timeSheetActions from '../../actions/timeSheet';\nimport moment from 'moment'\nimport RealTime from 'react-live-clock';\nimport Clock from 'react-clock';\nimport Time from '../../../commons/const/Time';\nimport { compose } from 'redux';\nimport { Field, reduxForm } from 'redux-form'\nimport renderTextAreaField from './FormHelper/TextAreaField'\nimport validate from './redux-form/validate'\nimport { SingleDatePicker } from \"react-dates\";\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport { offSet } from '../../actions/timeSheet';\n\nimport _ from 'lodash'\n\nconst CheckOut = props => {\n  const [date, setDate] = useState(null);\n  const [focused, setFocused] = useState(false);\n  const [dateSelected, setDateSelected] = useState(moment());\n\n  const { timeSheet, handleSubmit, invalid, submitting, pristine, reset } = props;\n  const [timeClock, setTimeClock] = useState(new Date());\n  const compensation = timeSheet.compensation;\n\n  useEffect(() => {\n    setInterval(\n      () => setTimeClock(new Date()),\n      1000\n    );\n    props.getStaffTimeSheet({\n      startTime: moment().format(Time.DMY),\n      endTime: moment().format(Time.DMY)\n    }, 1, 'ASC', 'All');\n    // eslint-disable-next-line\n  }, []);\n\n  const [modal, setModal] = useState(false);\n  const toggle = () => {\n    setModal(!modal);\n    setDate(null)\n  }\n  const letCheckOut = () => {\n    const startTime = moment(timeSheet.data[0].start_at, Time.HMS)\n    const endTime = moment(moment().format(Time.HMS), Time.HMS)\n    const duration = moment.duration(endTime.diff(startTime));\n    const hours = duration.asHours();\n    if (hours <= Time.timeCheckWork) {\n      toggle();\n      reset();\n    }\n    else {\n      props.checkOut('');\n    }\n  }\n  const finishReport = (data) => {\n    props.checkOut(data.Reason);\n    if (date) {\n      props.offSet(date, dateSelected, () => { return; })\n    }\n  }\n  return (\n    <div className=\"check-out\">\n      <div className='total-content-check-out'>\n        <div className='title-check-out'>Check out</div>\n        <div className='date-check-out'>\n          <Clock value={timeClock} />\n          <RealTime format={Time.FullDayFirst} ticking={true} timezone={Time.timeZone} />\n        </div>\n        <button className=\"btn btn-checkout\" onClick={letCheckOut}>Finish</button>\n        <div>\n          <Modal isOpen={modal} toggle={toggle}>\n            <form onSubmit={handleSubmit(finishReport)}>\n              <ModalHeader toggle={toggle}>Why are you leave early ?</ModalHeader>\n              <ModalBody>\n                <FormGroup>\n                  <Label for=\"exampleText\">Reason</Label>\n                  <Field\n                    id='Reason'\n                    className=\"Reason\"\n                    placeholder=\"Reason\"\n                    name=\"Reason\"\n                    component={renderTextAreaField}\n                  />\n                  <div className=\"compensation-form\">\n                    <div className=\"compensation-title\">\n                      Compensation\n                      <label className=\"optional\">(optional)</label>\n                    </div>\n                    <div className=\"compensation-body\">\n                      <Label>Date</Label>\n                      <SingleDatePicker\n                        id=\"date\"\n                        block\n                        date={date} // momentPropTypes.momentObj or null\n                        onDateChange={(date) => { setDate(date) }} // PropTypes.func.isRequired\n                        focused={focused} // PropTypes.bool\n                        onFocusChange={() => setFocused(!focused)} // PropTypes.func.isRequired\n                        displayFormat={Time.crossDMY}\n                        numberOfMonths={1}\n                        showClearDate={true}\n                        isOutsideRange={day => isInclusivelyBeforeDay(day, moment())}\n                      />\n                      <Label>For date:</Label>\n                      <SingleDatePicker\n                        id=\"for_date\"\n                        block\n                        onDateChange={(date) => setDateSelected(date)}\n                        focused={null}\n                        onFocusChange={() => setFocused(null)}\n                        date={dateSelected} // momentPropTypes.momentObj or null\n                        displayFormat={Time.crossDMY}\n                        disabled={true}\n                      />\n                    </div>\n                  </div>\n                  {\n                    compensation && (\n                      <div className=\"remind-compensation\">\n                        Remind:\n                        <p className=\"text-remind\">You have registered to make up on {moment(compensation.date).format(Time.DMY)} for {moment(compensation.for_date).format(Time.DMY)},\n                      the compensation period is {compensation.off_hour} hour</p>\n                        <p className=\"text-remind\"> Please go to the timesheet to edit the make-up\n                        date for {moment(compensation.for_date).format(Time.DMY)} !</p>\n                      </div>)\n                  }\n                </FormGroup>\n\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                <Button\n                  color=\"success\"\n                  disabled={invalid || submitting || pristine}\n                  className=\"btn btn-change-pass-word\"\n                  type=\"submit\"\n                >\n                  Check Out\n                </Button>\n              </ModalFooter>\n            </form>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    timeSheet: state.timeSheet,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkOut: (reason) => { dispatch(actions.checkOut({ reason: reason })) },\n    getStaffTimeSheet: (date, current_page, sort_date) => { dispatch(timeSheetActions.getStaffTimeSheet({ date, current_page: current_page, sort_date: sort_date })) },\n    offSet: (date, for_date, reload) => dispatch(offSet({ date, for_date, reload }))\n  }\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReduxForm = reduxForm({\n  form: 'CHECK_OUT',\n  validate: validate //tất cả code validate để trong validate.js mà import vào\n});\n\nexport default compose(\n  withConnect,\n  withReduxForm\n)(CheckOut);\n"]},"metadata":{},"sourceType":"module"}