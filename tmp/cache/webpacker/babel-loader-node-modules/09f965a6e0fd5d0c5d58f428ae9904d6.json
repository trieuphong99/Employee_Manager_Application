{"ast":null,"code":"import * as Yup from 'yup';\nimport moment from 'moment';\nexport var commonValidationSchema = {\n  email: Yup.string().email().required(),\n  id_card: Yup.string().min(9).max(12).matches(/^[0-9][^#&<>\\~;$^%{}?a-zA-Z]{8,11}$/, \"Id card cannot contain special characters\").required(),\n  joining_date: Yup.string().test(\"joining_date\", \"Joining date must greater than or equal to current date\", function (value) {\n    return moment().diff(moment(value), 'day') <= 0;\n  }).required(),\n  official_date: Yup.date().when('joining_date', function (joining_date, schema) {\n    return joining_date && schema.min(joining_date, \"Joining date must before official date\");\n  }),\n  contract_type: Yup.string().required(),\n  position: Yup.string().required(),\n  status: Yup.string().required(),\n  roles: Yup.string().required(),\n  name: Yup.string().min(10).max(30).required(),\n  phone_number: Yup.string().min(10).max(11).matches(/^[0-9][^#&<>\\~;$^%{}?a-zA-Z]{9,10}$/, \"Phone number cannot contain special characters\").required(),\n  address: Yup.string().max(100).required(),\n  sex: Yup.string().required(),\n  date_of_birth: Yup.string().required()\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/components/accounts/accountForm/validate.js"],"names":["Yup","moment","commonValidationSchema","email","string","required","id_card","min","max","matches","joining_date","test","value","diff","official_date","date","when","schema","contract_type","position","status","roles","name","phone_number","address","sex","date_of_birth"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,IAAMC,sBAAsB,GAAG;AACpCC,EAAAA,KAAK,EAAEH,GAAG,CAACI,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,EAD6B;AAEpCC,EAAAA,OAAO,EAAEN,GAAG,CAACI,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,OAA5B,CAAoC,qCAApC,EAA2E,2CAA3E,EAAwHJ,QAAxH,EAF2B;AAGpCK,EAAAA,YAAY,EAAEV,GAAG,CACdI,MADW,GACFO,IADE,CAEV,cAFU,EAGV,yDAHU,EAIV,UAAAC,KAAK,EAAI;AACP,WAAOX,MAAM,GAAGY,IAAT,CAAcZ,MAAM,CAACW,KAAD,CAApB,EAA6B,KAA7B,KAAuC,CAA9C;AACD,GANS,EAOVP,QAPU,EAHsB;AAWpCS,EAAAA,aAAa,EAAEd,GAAG,CACfe,IADY,GAEZC,IAFY,CAGX,cAHW,EAIX,UAACN,YAAD,EAAeO,MAAf;AAAA,WAA2BP,YAAY,IAAIO,MAAM,CAACV,GAAP,CAAWG,YAAX,EAAyB,wCAAzB,CAA3C;AAAA,GAJW,CAXqB;AAiBpCQ,EAAAA,aAAa,EAAElB,GAAG,CAACI,MAAJ,GAAaC,QAAb,EAjBqB;AAkBpCc,EAAAA,QAAQ,EAAEnB,GAAG,CAACI,MAAJ,GAAaC,QAAb,EAlB0B;AAmBpCe,EAAAA,MAAM,EAAEpB,GAAG,CAACI,MAAJ,GAAaC,QAAb,EAnB4B;AAoBpCgB,EAAAA,KAAK,EAAErB,GAAG,CAACI,MAAJ,GAAaC,QAAb,EApB6B;AAqBpCiB,EAAAA,IAAI,EAAEtB,GAAG,CAACI,MAAJ,GAAaG,GAAb,CAAiB,EAAjB,EAAqBC,GAArB,CAAyB,EAAzB,EAA6BH,QAA7B,EArB8B;AAsBpCkB,EAAAA,YAAY,EAAEvB,GAAG,CAACI,MAAJ,GAAaG,GAAb,CAAiB,EAAjB,EAAqBC,GAArB,CAAyB,EAAzB,EAA6BC,OAA7B,CAAqC,qCAArC,EAA4E,gDAA5E,EAA8HJ,QAA9H,EAtBsB;AAuBpCmB,EAAAA,OAAO,EAAExB,GAAG,CAACI,MAAJ,GAAaI,GAAb,CAAiB,GAAjB,EAAsBH,QAAtB,EAvB2B;AAwBpCoB,EAAAA,GAAG,EAAEzB,GAAG,CAACI,MAAJ,GAAaC,QAAb,EAxB+B;AAyBpCqB,EAAAA,aAAa,EAAE1B,GAAG,CAACI,MAAJ,GAAaC,QAAb;AAzBqB,CAA/B","sourcesContent":["import * as Yup from 'yup';\nimport moment from 'moment';\n\nexport const commonValidationSchema = {\n  email: Yup.string().email().required(),\n  id_card: Yup.string().min(9).max(12).matches(/^[0-9][^#&<>\\~;$^%{}?a-zA-Z]{8,11}$/, \"Id card cannot contain special characters\").required(),\n  joining_date: Yup\n    .string().test(\n      \"joining_date\",\n      \"Joining date must greater than or equal to current date\",\n      value => {\n        return moment().diff(moment(value), 'day') <= 0;\n      }\n    ).required(),\n  official_date: Yup\n    .date()\n    .when(\n      'joining_date',\n      (joining_date, schema) => (joining_date && schema.min(joining_date, \"Joining date must before official date\")),\n    ),\n  contract_type: Yup.string().required(),\n  position: Yup.string().required(),\n  status: Yup.string().required(),\n  roles: Yup.string().required(),\n  name: Yup.string().min(10).max(30).required(),\n  phone_number: Yup.string().min(10).max(11).matches(/^[0-9][^#&<>\\~;$^%{}?a-zA-Z]{9,10}$/, \"Phone number cannot contain special characters\").required(),\n  address: Yup.string().max(100).required(),\n  sex: Yup.string().required(),\n  date_of_birth: Yup.string().required(),\n}\n"]},"metadata":{},"sourceType":"module"}