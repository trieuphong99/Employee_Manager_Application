{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/commons/components/dateRangePicker/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nimport \"react-dates/initialize\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport './style.css';\nimport { Button } from 'reactstrap';\nimport moment from 'moment';\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport Time from '../../const/Time';\nimport { toastError } from '../../helpers/toastHelpers';\n\nvar DatePicker = function DatePicker(props) {\n  var block = props.block;\n\n  var _useState = useState(moment().subtract(10, 'days')),\n      _useState2 = _slicedToArray(_useState, 2),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1]; // mặc định là 10 hôm trước\n\n\n  var _useState3 = useState(moment()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endDate = _useState4[0],\n      setEndDate = _useState4[1]; // mặc định là hôm nay\n\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      focusedInput = _useState6[0],\n      setFocusedInput = _useState6[1];\n\n  var handleDatesChange = function handleDatesChange(_ref) {\n    var startDate = _ref.startDate,\n        endDate = _ref.endDate;\n    setStartDate(startDate);\n    setEndDate(endDate);\n  };\n\n  var renderButton = function renderButton() {\n    return React.createElement(\"div\", {\n      className: \"group-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      color: \"success\",\n      onClick: Accept,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Accept\"), React.createElement(Button, {\n      outline: true,\n      color: \"danger\",\n      onClick: Cancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Cancel\"));\n  };\n\n  var Accept = function Accept() {\n    if (startDate === null || endDate === null) {\n      return toastError(\"Hãy Điền Đủ Cả Hai Ô\");\n    }\n\n    if (startDate !== null && endDate !== null) {\n      props.setDate({\n        startTime: startDate.format(Time.DMY),\n        endTime: endDate.format(Time.DMY)\n      });\n    }\n\n    setFocusedInput(null); // để null thì đóng calendar\n  };\n\n  var Cancel = function Cancel() {\n    setFocusedInput(null); // để null thì đóng calendar\n  };\n\n  return (// <div className=\"DateRangePicker\">\n    React.createElement(DateRangePicker, {\n      block: block,\n      startDate: startDate,\n      startDateId: \"tata-start-date\",\n      endDate: endDate,\n      endDateId: \"tata-end-date\",\n      disabled: false,\n      displayFormat: Time.crossDMY // chặn các ngày trong tương lai\n      // isOutsideRange={day => !isInclusivelyBeforeDay(day, moment())}\n      ,\n      onDatesChange: handleDatesChange,\n      focusedInput: focusedInput,\n      onFocusChange: function onFocusChange(focusedInput) {\n        return setFocusedInput(focusedInput);\n      },\n      renderCalendarInfo: renderButton,\n      keepOpenOnDateSelect: true //giữ cho calendar không đóng khi click đủ 2 input\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }) // </div>\n\n  );\n};\n\nexport default DatePicker;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/commons/components/dateRangePicker/index.js"],"names":["React","useState","DateRangePicker","Button","moment","isInclusivelyBeforeDay","Time","toastError","DatePicker","props","block","subtract","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","handleDatesChange","renderButton","Accept","Cancel","setDate","startTime","format","DMY","endTime","crossDMY"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"react-dates/initialize\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport './style.css'\nimport { Button } from 'reactstrap'\nimport moment from 'moment'\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport Time from '../../const/Time'\nimport { toastError } from '../../helpers/toastHelpers'\n\nconst DatePicker = props => {\n  const { block } = props\n  const [startDate, setStartDate] = useState(moment().subtract(10, 'days')); // mặc định là 10 hôm trước\n  const [endDate, setEndDate] = useState(moment()); // mặc định là hôm nay\n  const [focusedInput, setFocusedInput] = useState(null);\n  const handleDatesChange = ({ startDate, endDate }) => {\n    setStartDate(startDate);\n    setEndDate(endDate);\n  };\n  const renderButton = () => <div className='group-btn'>\n    <Button outline color=\"success\" onClick={Accept}>Accept</Button>\n    <Button outline color=\"danger\" onClick={Cancel}>Cancel</Button>\n  </div>\n  const Accept = () => {\n    if (startDate === null || endDate === null) {\n      return toastError(\"Hãy Điền Đủ Cả Hai Ô\")\n    }\n    if (startDate !== null && endDate !== null) {\n      props.setDate({\n        startTime: startDate.format(Time.DMY),\n        endTime: endDate.format(Time.DMY)\n      })\n    }\n    setFocusedInput(null) // để null thì đóng calendar\n  }\n  const Cancel = () => {\n    setFocusedInput(null) // để null thì đóng calendar\n  }\n  return (\n    // <div className=\"DateRangePicker\">\n    <DateRangePicker\n      block={block}\n      startDate={startDate}\n      startDateId=\"tata-start-date\"\n      endDate={endDate}\n      endDateId=\"tata-end-date\"\n      disabled={false}\n      displayFormat={Time.crossDMY}\n      // chặn các ngày trong tương lai\n      // isOutsideRange={day => !isInclusivelyBeforeDay(day, moment())}\n      onDatesChange={handleDatesChange}\n      focusedInput={focusedInput}\n      onFocusChange={focusedInput => setFocusedInput(focusedInput)}\n      renderCalendarInfo={renderButton}\n      keepOpenOnDateSelect={true} //giữ cho calendar không đóng khi click đủ 2 input\n    />\n    // </div>\n  );\n}\n\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}