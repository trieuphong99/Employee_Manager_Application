{"ast":null,"code":"// focus - focusOptions - preventScroll polyfill\n(function () {\n  if (typeof window === \"undefined\" || typeof document === \"undefined\" || typeof HTMLElement === \"undefined\") {\n    return;\n  }\n\n  var supportsPreventScrollOption = false;\n\n  try {\n    var focusElem = document.createElement(\"div\");\n    focusElem.addEventListener(\"focus\", function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }, true);\n    focusElem.focus(Object.defineProperty({}, \"preventScroll\", {\n      get: function get() {\n        supportsPreventScrollOption = true;\n      }\n    }));\n  } catch (e) {}\n\n  if (HTMLElement.prototype.nativeFocus === undefined && !supportsPreventScrollOption) {\n    HTMLElement.prototype.nativeFocus = HTMLElement.prototype.focus;\n\n    var patchedFocus = function patchedFocus(args) {\n      var actualPosition = window.scrollY || window.pageYOffset;\n      this.nativeFocus();\n\n      if (args && args.preventScroll) {\n        // Hijacking the event loop order, since the focus() will trigger\n        // internally an scroll that goes to the event loop\n        setTimeout(function () {\n          window.scroll(window.scrollX || window.pageXOffset, actualPosition);\n        }, 0);\n      }\n    };\n\n    HTMLElement.prototype.focus = patchedFocus;\n  }\n})();","map":null,"metadata":{},"sourceType":"module"}