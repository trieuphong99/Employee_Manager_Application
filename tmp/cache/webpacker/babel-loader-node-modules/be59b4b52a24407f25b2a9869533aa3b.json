{"ast":null,"code":"import actionTypes from '../../commons/const/actionTypes';\nimport axios from 'axios';\nimport { showLoading, hideLoading } from './loading';\nimport { toastSuccess, toastError } from '../../commons/helpers/toastHelpers'; // import fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n// mock.onGet('/admin/user_timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onGet('admin/users').reply(200, fakeData.users);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/admin/user_dayoffs').reply(200, fakeData.dayoff);\n// mock.onPatch('/admin/uesr_dayoffs/14').reply(200, fakeData.dayoff[0]);\n// mock.onGet('/admin/user_overtimes').reply(200, fakeData.overtime);\n// mock.onPatch('admin/user_overtimes/14').reply(200, fakeData.overtime[0]);\n\nexport var getStaffTimeSheetByAdmin = function getStaffTimeSheetByAdmin(startDate, endDate, user_id, current_page, sort_type, sort_field, filter_type) {\n  var params = {\n    from_date: startDate,\n    to_date: endDate,\n    user_id: user_id,\n    current_page: String(current_page),\n    sort_type: sort_type,\n    sort_field: sort_field,\n    filter_type: filter_type\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/admin/user_timesheets', {\n      params: params\n    }).then(function (res) {\n      dispatch(setTimeSheet(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setTimeSheet = function setTimeSheet(data) {\n  return {\n    type: actionTypes.setTimeSheet,\n    data: data\n  };\n};\nexport var setUpdateTimeSheet = function setUpdateTimeSheet(id, start_at, end_at, reason_in, reason_out) {\n  var body = {\n    start_at: String(start_at),\n    end_at: String(end_at),\n    reason_in: reason_in,\n    reason_out: reason_out\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.patch(\"/admin/user_timesheets/\".concat(id), body).then(function (res) {\n      dispatch({\n        type: actionTypes.SET_UPDATE_TIMESHEETS,\n        data: res.data\n      });\n      toastSuccess('Successful!');\n    })[\"catch\"](function (er) {\n      toastError(\"\".concat(er.response.data));\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var getListRequestEdit = function getListRequestEdit(fromDate, toDate, currentPage, userID, sortType, sortField) {\n  var params = {\n    from_date: fromDate,\n    to_date: toDate,\n    current_page: currentPage,\n    user_id: userID,\n    sort_type: sortType,\n    sort_field: sortField\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/admin/timesheet_requests', {\n      params: params\n    }).then(function (res) {\n      dispatch({\n        type: actionTypes.GET_LIST_REQUEST_EDIT,\n        data: res.data\n      });\n    })[\"catch\"](function (er) {\n      toastError(\"\".concat(er.response.data));\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setIsAllowedEdit = function setIsAllowedEdit(id, confirm) {\n  var body = {\n    confirmation_status: String(confirm)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    return axios.patch(\"/admin/timesheet_requests/\".concat(id), body).then(function (res) {\n      dispatch({\n        type: actionTypes.SET_CONFIRMATION_STATUS_EDIT,\n        data: res.data\n      });\n      toastSuccess('Successful!');\n    })[\"catch\"](function (er) {\n      toastError(\"\".concat(er.response.data));\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var getDetailTimesheet = function getDetailTimesheet(id) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get(\"/admin/user_timesheets/\".concat(id)).then(function (res) {\n      dispatch({\n        type: actionTypes.GET_DETAIL_TIMESHEET_ADMIN,\n        data: res.data\n      });\n    })[\"catch\"](function (er) {\n      toastError(\"\".concat(er.response.data));\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/actions/timeSheet.js"],"names":["actionTypes","axios","showLoading","hideLoading","toastSuccess","toastError","getStaffTimeSheetByAdmin","startDate","endDate","user_id","current_page","sort_type","sort_field","filter_type","params","from_date","to_date","String","dispatch","get","then","res","setTimeSheet","data","error","console","log","type","setUpdateTimeSheet","id","start_at","end_at","reason_in","reason_out","body","patch","SET_UPDATE_TIMESHEETS","er","response","getListRequestEdit","fromDate","toDate","currentPage","userID","sortType","sortField","GET_LIST_REQUEST_EDIT","setIsAllowedEdit","confirm","confirmation_status","SET_CONFIRMATION_STATUS_EDIT","getDetailTimesheet","GET_DETAIL_TIMESHEET_ADMIN"],"mappings":"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","sourcesContent":["import actionTypes from '../../commons/const/actionTypes';\nimport axios from 'axios'\nimport { showLoading, hideLoading } from './loading'\nimport { toastSuccess, toastError } from '../../commons/helpers/toastHelpers';\n// import fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n\n// mock.onGet('/admin/user_timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onGet('admin/users').reply(200, fakeData.users);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/admin/user_dayoffs').reply(200, fakeData.dayoff);\n// mock.onPatch('/admin/uesr_dayoffs/14').reply(200, fakeData.dayoff[0]);\n// mock.onGet('/admin/user_overtimes').reply(200, fakeData.overtime);\n// mock.onPatch('admin/user_overtimes/14').reply(200, fakeData.overtime[0]);\n\nexport const getStaffTimeSheetByAdmin = (startDate, endDate, user_id, current_page, sort_type, sort_field, filter_type) => {\n  const params = {\n    from_date: startDate,\n    to_date: endDate,\n    user_id: user_id,\n    current_page: String(current_page),\n    sort_type: sort_type,\n    sort_field: sort_field,\n    filter_type: filter_type\n  }\n  return (dispatch) => {\n    dispatch(showLoading())\n    axios.get('/admin/user_timesheets', { params: params })\n      .then(function (res) {\n        dispatch(setTimeSheet(res.data))\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .finally(function () {\n        dispatch(hideLoading())\n      });\n  }\n}\n\nexport const setTimeSheet = (data) => { return { type: actionTypes.setTimeSheet, data: data } }\n\nexport const setUpdateTimeSheet = (id, start_at, end_at, reason_in, reason_out) => {\n  const body = {\n    start_at: String(start_at),\n    end_at: String(end_at),\n    reason_in: reason_in,\n    reason_out: reason_out\n  }\n  return dispatch => {\n    dispatch(showLoading())\n    axios.patch(`/admin/user_timesheets/${id}`, body)\n    .then(res => {\n      dispatch({type: actionTypes.SET_UPDATE_TIMESHEETS, data: res.data})\n      toastSuccess('Successful!');\n    })\n    .catch(er => {\n      toastError(`${er.response.data}`)\n    })\n    .finally(() => {\n      dispatch(hideLoading())\n    })\n  }\n}\nexport const getListRequestEdit = (fromDate, toDate, currentPage, userID, sortType, sortField) => {\n  const params = {\n    from_date: fromDate,\n    to_date: toDate,\n    current_page: currentPage,\n    user_id: userID,\n    sort_type: sortType,\n    sort_field: sortField\n  }\n  return dispatch => {\n    dispatch(showLoading())\n    axios.get('/admin/timesheet_requests', {params: params})\n    .then(res => {\n      dispatch({type: actionTypes.GET_LIST_REQUEST_EDIT, data: res.data})\n    })\n    .catch(er => {\n      toastError(`${er.response.data}`)\n    })\n    .finally(() => {\n      dispatch(hideLoading());\n    })\n  }\n}\n\nexport const setIsAllowedEdit = (id, confirm) => {\n  \n  const body = {\n    confirmation_status: String(confirm)\n  }\n  return dispatch => {\n    dispatch(showLoading());\n    return axios.patch(`/admin/timesheet_requests/${id}`, body )\n      .then(res => {\n        dispatch({type: actionTypes.SET_CONFIRMATION_STATUS_EDIT, data: res.data})\n        toastSuccess('Successful!');\n      })\n      .catch(er => {\n        toastError(`${er.response.data}`)\n      })\n      .finally(() => {\n        dispatch(hideLoading());\n      })\n  }\n}\n\nexport const getDetailTimesheet = (id) => {\n  return dispatch => {\n    dispatch(showLoading());\n    axios.get(`/admin/user_timesheets/${id}`)\n      .then(res => {\n        dispatch({type: actionTypes.GET_DETAIL_TIMESHEET_ADMIN, data: res.data})\n      })\n      .catch(er => {\n        toastError(`${er.response.data}`)\n      })\n      .finally(() => {\n        dispatch(hideLoading())\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}