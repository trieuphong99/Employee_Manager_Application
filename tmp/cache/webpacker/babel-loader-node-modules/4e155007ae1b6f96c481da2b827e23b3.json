{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _enzymeShallowEqual = _interopRequireDefault(require(\"enzyme-shallow-equal\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactMomentProptypes = _interopRequireDefault(require(\"react-moment-proptypes\"));\n\nvar _airbnbPropTypes = require(\"airbnb-prop-types\");\n\nvar _reactWithStyles = require(\"react-with-styles\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _defaultPhrases = require(\"../defaultPhrases\");\n\nvar _getPhrasePropTypes = _interopRequireDefault(require(\"../utils/getPhrasePropTypes\"));\n\nvar _CalendarWeek = _interopRequireDefault(require(\"./CalendarWeek\"));\n\nvar _CalendarDay = _interopRequireDefault(require(\"./CalendarDay\"));\n\nvar _calculateDimension = _interopRequireDefault(require(\"../utils/calculateDimension\"));\n\nvar _getCalendarMonthWeeks = _interopRequireDefault(require(\"../utils/getCalendarMonthWeeks\"));\n\nvar _isSameDay = _interopRequireDefault(require(\"../utils/isSameDay\"));\n\nvar _toISODateString = _interopRequireDefault(require(\"../utils/toISODateString\"));\n\nvar _ModifiersShape = _interopRequireDefault(require(\"../shapes/ModifiersShape\"));\n\nvar _ScrollableOrientationShape = _interopRequireDefault(require(\"../shapes/ScrollableOrientationShape\"));\n\nvar _DayOfWeekShape = _interopRequireDefault(require(\"../shapes/DayOfWeekShape\"));\n\nvar _constants = require(\"../constants\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? (0, _airbnbPropTypes.forbidExtraProps)(_objectSpread({}, _reactWithStyles.withStylesPropTypes, {\n  month: _reactMomentProptypes[\"default\"].momentObj,\n  horizontalMonthPadding: _airbnbPropTypes.nonNegativeInteger,\n  isVisible: _propTypes[\"default\"].bool,\n  enableOutsideDays: _propTypes[\"default\"].bool,\n  modifiers: _propTypes[\"default\"].objectOf(_ModifiersShape[\"default\"]),\n  orientation: _ScrollableOrientationShape[\"default\"],\n  daySize: _airbnbPropTypes.nonNegativeInteger,\n  onDayClick: _propTypes[\"default\"].func,\n  onDayMouseEnter: _propTypes[\"default\"].func,\n  onDayMouseLeave: _propTypes[\"default\"].func,\n  onMonthSelect: _propTypes[\"default\"].func,\n  onYearSelect: _propTypes[\"default\"].func,\n  renderMonthText: (0, _airbnbPropTypes.mutuallyExclusiveProps)(_propTypes[\"default\"].func, 'renderMonthText', 'renderMonthElement'),\n  renderCalendarDay: _propTypes[\"default\"].func,\n  renderDayContents: _propTypes[\"default\"].func,\n  renderMonthElement: (0, _airbnbPropTypes.mutuallyExclusiveProps)(_propTypes[\"default\"].func, 'renderMonthText', 'renderMonthElement'),\n  firstDayOfWeek: _DayOfWeekShape[\"default\"],\n  setMonthTitleHeight: _propTypes[\"default\"].func,\n  verticalBorderSpacing: _airbnbPropTypes.nonNegativeInteger,\n  focusedDate: _reactMomentProptypes[\"default\"].momentObj,\n  // indicates focusable day\n  isFocused: _propTypes[\"default\"].bool,\n  // indicates whether or not to move focus to focusable day\n  // i18n\n  monthFormat: _propTypes[\"default\"].string,\n  phrases: _propTypes[\"default\"].shape((0, _getPhrasePropTypes[\"default\"])(_defaultPhrases.CalendarDayPhrases)),\n  dayAriaLabelFormat: _propTypes[\"default\"].string\n})) : {};\nvar defaultProps = {\n  month: (0, _moment[\"default\"])(),\n  horizontalMonthPadding: 13,\n  isVisible: true,\n  enableOutsideDays: false,\n  modifiers: {},\n  orientation: _constants.HORIZONTAL_ORIENTATION,\n  daySize: _constants.DAY_SIZE,\n  onDayClick: function onDayClick() {},\n  onDayMouseEnter: function onDayMouseEnter() {},\n  onDayMouseLeave: function onDayMouseLeave() {},\n  onMonthSelect: function onMonthSelect() {},\n  onYearSelect: function onYearSelect() {},\n  renderMonthText: null,\n  renderCalendarDay: function renderCalendarDay(props) {\n    return _react[\"default\"].createElement(_CalendarDay[\"default\"], props);\n  },\n  renderDayContents: null,\n  renderMonthElement: null,\n  firstDayOfWeek: null,\n  setMonthTitleHeight: null,\n  focusedDate: null,\n  isFocused: false,\n  // i18n\n  monthFormat: 'MMMM YYYY',\n  // english locale\n  phrases: _defaultPhrases.CalendarDayPhrases,\n  dayAriaLabelFormat: undefined,\n  verticalBorderSpacing: undefined\n};\n\nvar CalendarMonth = /*#__PURE__*/function (_ref) {\n  (0, _inheritsLoose2[\"default\"])(CalendarMonth, _ref);\n  var _proto = CalendarMonth.prototype;\n\n  _proto[!_react[\"default\"].PureComponent && \"shouldComponentUpdate\"] = function (nextProps, nextState) {\n    return !(0, _enzymeShallowEqual[\"default\"])(this.props, nextProps) || !(0, _enzymeShallowEqual[\"default\"])(this.state, nextState);\n  };\n\n  function CalendarMonth(props) {\n    var _this;\n\n    _this = _ref.call(this, props) || this;\n    _this.state = {\n      weeks: (0, _getCalendarMonthWeeks[\"default\"])(props.month, props.enableOutsideDays, props.firstDayOfWeek == null ? _moment[\"default\"].localeData().firstDayOfWeek() : props.firstDayOfWeek)\n    };\n    _this.setCaptionRef = _this.setCaptionRef.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.setMonthTitleHeight = _this.setMonthTitleHeight.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    return _this;\n  }\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.setMonthTitleHeightTimeout = setTimeout(this.setMonthTitleHeight, 0);\n  };\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var month = nextProps.month,\n        enableOutsideDays = nextProps.enableOutsideDays,\n        firstDayOfWeek = nextProps.firstDayOfWeek;\n    var _this$props = this.props,\n        prevMonth = _this$props.month,\n        prevEnableOutsideDays = _this$props.enableOutsideDays,\n        prevFirstDayOfWeek = _this$props.firstDayOfWeek;\n\n    if (!month.isSame(prevMonth) || enableOutsideDays !== prevEnableOutsideDays || firstDayOfWeek !== prevFirstDayOfWeek) {\n      this.setState({\n        weeks: (0, _getCalendarMonthWeeks[\"default\"])(month, enableOutsideDays, firstDayOfWeek == null ? _moment[\"default\"].localeData().firstDayOfWeek() : firstDayOfWeek)\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.setMonthTitleHeightTimeout) {\n      clearTimeout(this.setMonthTitleHeightTimeout);\n    }\n  };\n\n  _proto.setMonthTitleHeight = function setMonthTitleHeight() {\n    var setMonthTitleHeight = this.props.setMonthTitleHeight;\n\n    if (setMonthTitleHeight) {\n      var captionHeight = (0, _calculateDimension[\"default\"])(this.captionRef, 'height', true, true);\n      setMonthTitleHeight(captionHeight);\n    }\n  };\n\n  _proto.setCaptionRef = function setCaptionRef(ref) {\n    this.captionRef = ref;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        dayAriaLabelFormat = _this$props2.dayAriaLabelFormat,\n        daySize = _this$props2.daySize,\n        focusedDate = _this$props2.focusedDate,\n        horizontalMonthPadding = _this$props2.horizontalMonthPadding,\n        isFocused = _this$props2.isFocused,\n        isVisible = _this$props2.isVisible,\n        modifiers = _this$props2.modifiers,\n        month = _this$props2.month,\n        monthFormat = _this$props2.monthFormat,\n        onDayClick = _this$props2.onDayClick,\n        onDayMouseEnter = _this$props2.onDayMouseEnter,\n        onDayMouseLeave = _this$props2.onDayMouseLeave,\n        onMonthSelect = _this$props2.onMonthSelect,\n        onYearSelect = _this$props2.onYearSelect,\n        orientation = _this$props2.orientation,\n        phrases = _this$props2.phrases,\n        renderCalendarDay = _this$props2.renderCalendarDay,\n        renderDayContents = _this$props2.renderDayContents,\n        renderMonthElement = _this$props2.renderMonthElement,\n        renderMonthText = _this$props2.renderMonthText,\n        styles = _this$props2.styles,\n        verticalBorderSpacing = _this$props2.verticalBorderSpacing;\n    var weeks = this.state.weeks;\n    var monthTitle = renderMonthText ? renderMonthText(month) : month.format(monthFormat);\n    var verticalScrollable = orientation === _constants.VERTICAL_SCROLLABLE;\n    return _react[\"default\"].createElement(\"div\", (0, _extends2[\"default\"])({}, (0, _reactWithStyles.css)(styles.CalendarMonth, {\n      padding: \"0 \".concat(horizontalMonthPadding, \"px\")\n    }), {\n      \"data-visible\": isVisible\n    }), _react[\"default\"].createElement(\"div\", (0, _extends2[\"default\"])({\n      ref: this.setCaptionRef\n    }, (0, _reactWithStyles.css)(styles.CalendarMonth_caption, verticalScrollable && styles.CalendarMonth_caption__verticalScrollable)), renderMonthElement ? renderMonthElement({\n      month: month,\n      onMonthSelect: onMonthSelect,\n      onYearSelect: onYearSelect,\n      isVisible: isVisible\n    }) : _react[\"default\"].createElement(\"strong\", null, monthTitle)), _react[\"default\"].createElement(\"table\", (0, _extends2[\"default\"])({}, (0, _reactWithStyles.css)(!verticalBorderSpacing && styles.CalendarMonth_table, verticalBorderSpacing && styles.CalendarMonth_verticalSpacing, verticalBorderSpacing && {\n      borderSpacing: \"0px \".concat(verticalBorderSpacing, \"px\")\n    }), {\n      role: \"presentation\"\n    }), _react[\"default\"].createElement(\"tbody\", null, weeks.map(function (week, i) {\n      return _react[\"default\"].createElement(_CalendarWeek[\"default\"], {\n        key: i\n      }, week.map(function (day, dayOfWeek) {\n        return renderCalendarDay({\n          key: dayOfWeek,\n          day: day,\n          daySize: daySize,\n          isOutsideDay: !day || day.month() !== month.month(),\n          tabIndex: isVisible && (0, _isSameDay[\"default\"])(day, focusedDate) ? 0 : -1,\n          isFocused: isFocused,\n          onDayMouseEnter: onDayMouseEnter,\n          onDayMouseLeave: onDayMouseLeave,\n          onDayClick: onDayClick,\n          renderDayContents: renderDayContents,\n          phrases: phrases,\n          modifiers: modifiers[(0, _toISODateString[\"default\"])(day)],\n          ariaLabelFormat: dayAriaLabelFormat\n        });\n      }));\n    }))));\n  };\n\n  return CalendarMonth;\n}(_react[\"default\"].PureComponent || _react[\"default\"].Component);\n\nCalendarMonth.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nCalendarMonth.defaultProps = defaultProps;\n\nvar _default = (0, _reactWithStyles.withStyles)(function (_ref2) {\n  var _ref2$reactDates = _ref2.reactDates,\n      color = _ref2$reactDates.color,\n      font = _ref2$reactDates.font,\n      spacing = _ref2$reactDates.spacing;\n  return {\n    CalendarMonth: {\n      background: color.background,\n      textAlign: 'center',\n      verticalAlign: 'top',\n      userSelect: 'none'\n    },\n    CalendarMonth_table: {\n      borderCollapse: 'collapse',\n      borderSpacing: 0\n    },\n    CalendarMonth_verticalSpacing: {\n      borderCollapse: 'separate'\n    },\n    CalendarMonth_caption: {\n      color: color.text,\n      fontSize: font.captionSize,\n      textAlign: 'center',\n      paddingTop: spacing.captionPaddingTop,\n      paddingBottom: spacing.captionPaddingBottom,\n      captionSide: 'initial'\n    },\n    CalendarMonth_caption__verticalScrollable: {\n      paddingTop: 12,\n      paddingBottom: 7\n    }\n  };\n}, {\n  pureComponent: typeof _react[\"default\"].PureComponent !== 'undefined'\n})(CalendarMonth);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"module"}