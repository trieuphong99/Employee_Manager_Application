{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $Math = GetIntrinsic('%Math%');\n\nvar ToNumber = require('./ToNumber');\n\nvar $isNaN = require('../helpers/isNaN');\n\nvar $floor = $Math.floor; // https://www.ecma-international.org/ecma-262/6.0/#sec-touint8clamp\n\nmodule.exports = function ToUint8Clamp(argument) {\n  var number = ToNumber(argument);\n\n  if ($isNaN(number) || number <= 0) {\n    return 0;\n  }\n\n  if (number >= 0xFF) {\n    return 0xFF;\n  }\n\n  var f = $floor(argument);\n\n  if (f + 0.5 < number) {\n    return f + 1;\n  }\n\n  if (number < f + 0.5) {\n    return f;\n  }\n\n  if (f % 2 !== 0) {\n    return f + 1;\n  }\n\n  return f;\n};","map":null,"metadata":{},"sourceType":"module"}