{"ast":null,"code":"import actionTypes from '../../commons/const/actionTypes';\nimport axios from 'axios';\nimport { showLoading } from './loading';\nimport { hideLoading } from './loading';\nimport fakeData from '../../../../db';\nimport MockAdapter from 'axios-mock-adapter';\nvar mock = new MockAdapter(axios);\nmock.onGet('/admin/user_timesheets').reply(200, fakeData.currentusertimesheet);\nmock.onGet('admin/users').reply(200, fakeData.users);\nmock.onGet('admin/users/14').reply(200, fakeData.users[3]);\nmock.onPost('/users/14/change_password').reply(200);\nexport var getStaffTimeSheetByAdmin = function getStaffTimeSheetByAdmin(data) {\n  var params = {\n    from_date: data.date.startTime,\n    to_date: data.date.endTime,\n    id: data.id,\n    current_page: String(data.current_page),\n    sort_date: data.sort_date,\n    filter_type: data.filter_type\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/admin/user_timesheets', params).then(function (res) {\n      dispatch(setTimeSheet(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setTimeSheet = function setTimeSheet(data) {\n  return {\n    type: actionTypes.setTimeSheet,\n    data: data\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/actions/timeSheet.js"],"names":["actionTypes","axios","showLoading","hideLoading","fakeData","MockAdapter","mock","onGet","reply","currentusertimesheet","users","onPost","getStaffTimeSheetByAdmin","data","params","from_date","date","startTime","to_date","endTime","id","current_page","String","sort_date","filter_type","dispatch","get","then","res","setTimeSheet","error","console","log","type"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,IAAIC,IAAI,GAAG,IAAID,WAAJ,CAAgBJ,KAAhB,CAAX;AAEAK,IAAI,CAACC,KAAL,CAAW,wBAAX,EAAqCC,KAArC,CAA2C,GAA3C,EAAgDJ,QAAQ,CAACK,oBAAzD;AACAH,IAAI,CAACC,KAAL,CAAW,aAAX,EAA0BC,KAA1B,CAAgC,GAAhC,EAAqCJ,QAAQ,CAACM,KAA9C;AACAJ,IAAI,CAACC,KAAL,CAAW,gBAAX,EAA6BC,KAA7B,CAAmC,GAAnC,EAAwCJ,QAAQ,CAACM,KAAT,CAAe,CAAf,CAAxC;AACAJ,IAAI,CAACK,MAAL,CAAY,2BAAZ,EAAyCH,KAAzC,CAA+C,GAA/C;AAEA,OAAO,IAAMI,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,IAAD,EAAU;AAChD,MAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEF,IAAI,CAACG,IAAL,CAAUC,SADR;AAEbC,IAAAA,OAAO,EAAEL,IAAI,CAACG,IAAL,CAAUG,OAFN;AAGbC,IAAAA,EAAE,EAAEP,IAAI,CAACO,EAHI;AAIbC,IAAAA,YAAY,EAAEC,MAAM,CAACT,IAAI,CAACQ,YAAN,CAJP;AAKbE,IAAAA,SAAS,EAAEV,IAAI,CAACU,SALH;AAMbC,IAAAA,WAAW,EAAEX,IAAI,CAACW;AANL,GAAf;AAQA,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACvB,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CAACyB,GAAN,CAAU,wBAAV,EAAoCZ,MAApC,EACGa,IADH,CACQ,UAAUC,GAAV,EAAe;AACnBH,MAAAA,QAAQ,CAACI,YAAY,CAACD,GAAG,CAACf,IAAL,CAAb,CAAR;AACD,KAHH,WAIS,UAAUiB,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH,aAOW,YAAY;AACnBL,MAAAA,QAAQ,CAACtB,WAAW,EAAZ,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAtBM;AAwBP,OAAO,IAAM0B,YAAY,GAAG,SAAfA,YAAe,CAAChB,IAAD,EAAU;AAAE,SAAO;AAAEoB,IAAAA,IAAI,EAAEjC,WAAW,CAAC6B,YAApB;AAAkChB,IAAAA,IAAI,EAAEA;AAAxC,GAAP;AAAuD,CAAxF","sourcesContent":["import actionTypes from '../../commons/const/actionTypes';\nimport axios from 'axios'\nimport { showLoading } from './loading'\nimport { hideLoading } from './loading'\nimport fakeData from '../../../../db'\nimport MockAdapter from 'axios-mock-adapter'\nvar mock = new MockAdapter(axios);\n\nmock.onGet('/admin/user_timesheets').reply(200, fakeData.currentusertimesheet);\nmock.onGet('admin/users').reply(200, fakeData.users);\nmock.onGet('admin/users/14').reply(200, fakeData.users[3]);\nmock.onPost('/users/14/change_password').reply(200);\n\nexport const getStaffTimeSheetByAdmin = (data) => {\n  const params = {\n    from_date: data.date.startTime,\n    to_date: data.date.endTime,\n    id: data.id,\n    current_page: String(data.current_page),\n    sort_date: data.sort_date,\n    filter_type: data.filter_type\n  }\n  return (dispatch) => {\n    dispatch(showLoading())\n    axios.get('/admin/user_timesheets', params)\n      .then(function (res) {\n        dispatch(setTimeSheet(res.data))\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .finally(function () {\n        dispatch(hideLoading())\n      });\n  }\n}\n\nexport const setTimeSheet = (data) => { return { type: actionTypes.setTimeSheet, data: data } }\n"]},"metadata":{},"sourceType":"module"}