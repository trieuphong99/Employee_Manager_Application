{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar hasSymbols = require('has-symbols')();\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $gOPN = GetIntrinsic('%Object.getOwnPropertyNames%');\nvar $gOPS = hasSymbols && GetIntrinsic('%Object.getOwnPropertySymbols%');\n\nvar keys = require('object-keys');\n\nvar esType = require('./Type'); // https://www.ecma-international.org/ecma-262/6.0/#sec-getownpropertykeys\n\n\nmodule.exports = function GetOwnPropertyKeys(O, Type) {\n  if (esType(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n\n  if (Type === 'Symbol') {\n    return $gOPS ? $gOPS(O) : [];\n  }\n\n  if (Type === 'String') {\n    if (!$gOPN) {\n      return keys(O);\n    }\n\n    return $gOPN(O);\n  }\n\n  throw new $TypeError('Assertion failed: `Type` must be `\"String\"` or `\"Symbol\"`');\n};","map":null,"metadata":{},"sourceType":"module"}