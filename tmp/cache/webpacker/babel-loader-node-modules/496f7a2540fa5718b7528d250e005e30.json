{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.PureSingleDatePicker = void 0;\n\nvar _enzymeShallowEqual = _interopRequireDefault(require(\"enzyme-shallow-equal\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _reactWithStyles = require(\"react-with-styles\");\n\nvar _reactPortal = require(\"react-portal\");\n\nvar _airbnbPropTypes = require(\"airbnb-prop-types\");\n\nvar _consolidatedEvents = require(\"consolidated-events\");\n\nvar _isTouchDevice = _interopRequireDefault(require(\"is-touch-device\"));\n\nvar _reactOutsideClickHandler = _interopRequireDefault(require(\"react-outside-click-handler\"));\n\nvar _SingleDatePickerShape = _interopRequireDefault(require(\"../shapes/SingleDatePickerShape\"));\n\nvar _defaultPhrases = require(\"../defaultPhrases\");\n\nvar _getResponsiveContainerStyles = _interopRequireDefault(require(\"../utils/getResponsiveContainerStyles\"));\n\nvar _getDetachedContainerStyles = _interopRequireDefault(require(\"../utils/getDetachedContainerStyles\"));\n\nvar _getInputHeight = _interopRequireDefault(require(\"../utils/getInputHeight\"));\n\nvar _isInclusivelyAfterDay = _interopRequireDefault(require(\"../utils/isInclusivelyAfterDay\"));\n\nvar _disableScroll2 = _interopRequireDefault(require(\"../utils/disableScroll\"));\n\nvar _noflip = _interopRequireDefault(require(\"../utils/noflip\"));\n\nvar _SingleDatePickerInputController = _interopRequireDefault(require(\"./SingleDatePickerInputController\"));\n\nvar _DayPickerSingleDateController = _interopRequireDefault(require(\"./DayPickerSingleDateController\"));\n\nvar _CloseButton = _interopRequireDefault(require(\"./CloseButton\"));\n\nvar _constants = require(\"../constants\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? (0, _airbnbPropTypes.forbidExtraProps)(_objectSpread({}, _reactWithStyles.withStylesPropTypes, {}, _SingleDatePickerShape[\"default\"])) : {};\nvar defaultProps = {\n  // required props for a functional interactive SingleDatePicker\n  date: null,\n  focused: false,\n  // input related props\n  id: 'date',\n  placeholder: 'Date',\n  ariaLabel: undefined,\n  disabled: false,\n  required: false,\n  readOnly: false,\n  screenReaderInputMessage: '',\n  showClearDate: false,\n  showDefaultInputIcon: false,\n  inputIconPosition: _constants.ICON_BEFORE_POSITION,\n  customInputIcon: null,\n  customCloseIcon: null,\n  noBorder: false,\n  block: false,\n  small: false,\n  regular: false,\n  verticalSpacing: _constants.DEFAULT_VERTICAL_SPACING,\n  keepFocusOnInput: false,\n  // calendar presentation and interaction related props\n  orientation: _constants.HORIZONTAL_ORIENTATION,\n  anchorDirection: _constants.ANCHOR_LEFT,\n  openDirection: _constants.OPEN_DOWN,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  appendToBody: false,\n  disableScroll: false,\n  initialVisibleMonth: null,\n  firstDayOfWeek: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDate: false,\n  renderCalendarInfo: null,\n  calendarInfoPosition: _constants.INFO_POSITION_BOTTOM,\n  hideKeyboardShortcutsPanel: false,\n  daySize: _constants.DAY_SIZE,\n  isRTL: false,\n  verticalHeight: null,\n  transitionDuration: undefined,\n  horizontalMonthPadding: 13,\n  // navigation related props\n  dayPickerNavigationInlineStyles: null,\n  navPosition: _constants.NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  renderNavPrevButton: null,\n  renderNavNextButton: null,\n  onPrevMonthClick: function onPrevMonthClick() {},\n  onNextMonthClick: function onNextMonthClick() {},\n  onClose: function onClose() {},\n  // month presentation and interaction related props\n  renderMonthText: null,\n  renderWeekHeaderElement: null,\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  renderMonthElement: null,\n  enableOutsideDays: false,\n  isDayBlocked: function isDayBlocked() {\n    return false;\n  },\n  isOutsideRange: function isOutsideRange(day) {\n    return !(0, _isInclusivelyAfterDay[\"default\"])(day, (0, _moment[\"default\"])());\n  },\n  isDayHighlighted: function isDayHighlighted() {},\n  // internationalization props\n  displayFormat: function displayFormat() {\n    return _moment[\"default\"].localeData().longDateFormat('L');\n  },\n  monthFormat: 'MMMM YYYY',\n  weekDayFormat: 'dd',\n  phrases: _defaultPhrases.SingleDatePickerPhrases,\n  dayAriaLabelFormat: undefined\n};\n\nvar SingleDatePicker = /*#__PURE__*/function (_ref) {\n  (0, _inheritsLoose2[\"default\"])(SingleDatePicker, _ref);\n  var _proto = SingleDatePicker.prototype;\n\n  _proto[!_react[\"default\"].PureComponent && \"shouldComponentUpdate\"] = function (nextProps, nextState) {\n    return !(0, _enzymeShallowEqual[\"default\"])(this.props, nextProps) || !(0, _enzymeShallowEqual[\"default\"])(this.state, nextState);\n  };\n\n  function SingleDatePicker(props) {\n    var _this;\n\n    _this = _ref.call(this, props) || this;\n    _this.isTouchDevice = false;\n    _this.state = {\n      dayPickerContainerStyles: {},\n      isDayPickerFocused: false,\n      isInputFocused: false,\n      showKeyboardShortcuts: false\n    };\n    _this.onFocusOut = _this.onFocusOut.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.onOutsideClick = _this.onOutsideClick.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.onInputFocus = _this.onInputFocus.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.onDayPickerFocus = _this.onDayPickerFocus.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.onDayPickerBlur = _this.onDayPickerBlur.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.showKeyboardShortcutsPanel = _this.showKeyboardShortcutsPanel.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.responsivizePickerPosition = _this.responsivizePickerPosition.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.disableScroll = _this.disableScroll.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.setDayPickerContainerRef = _this.setDayPickerContainerRef.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.setContainerRef = _this.setContainerRef.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    return _this;\n  }\n  /* istanbul ignore next */\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.removeResizeEventListener = (0, _consolidatedEvents.addEventListener)(window, 'resize', this.responsivizePickerPosition, {\n      passive: true\n    });\n    this.responsivizePickerPosition();\n    this.disableScroll();\n    var focused = this.props.focused;\n\n    if (focused) {\n      this.setState({\n        isInputFocused: true\n      });\n    }\n\n    this.isTouchDevice = (0, _isTouchDevice[\"default\"])();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var focused = this.props.focused;\n\n    if (!prevProps.focused && focused) {\n      this.responsivizePickerPosition();\n      this.disableScroll();\n    } else if (prevProps.focused && !focused) {\n      if (this.enableScroll) this.enableScroll();\n    }\n  }\n  /* istanbul ignore next */\n  ;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.removeResizeEventListener) this.removeResizeEventListener();\n    if (this.removeFocusOutEventListener) this.removeFocusOutEventListener();\n    if (this.enableScroll) this.enableScroll();\n  };\n\n  _proto.onOutsideClick = function onOutsideClick(event) {\n    var _this$props = this.props,\n        focused = _this$props.focused,\n        onFocusChange = _this$props.onFocusChange,\n        onClose = _this$props.onClose,\n        date = _this$props.date,\n        appendToBody = _this$props.appendToBody;\n    if (!focused) return;\n    if (appendToBody && this.dayPickerContainer.contains(event.target)) return;\n    this.setState({\n      isInputFocused: false,\n      isDayPickerFocused: false,\n      showKeyboardShortcuts: false\n    });\n    onFocusChange({\n      focused: false\n    });\n    onClose({\n      date: date\n    });\n  };\n\n  _proto.onInputFocus = function onInputFocus(_ref2) {\n    var focused = _ref2.focused;\n    var _this$props2 = this.props,\n        onFocusChange = _this$props2.onFocusChange,\n        readOnly = _this$props2.readOnly,\n        withPortal = _this$props2.withPortal,\n        withFullScreenPortal = _this$props2.withFullScreenPortal,\n        keepFocusOnInput = _this$props2.keepFocusOnInput;\n\n    if (focused) {\n      var withAnyPortal = withPortal || withFullScreenPortal;\n      var moveFocusToDayPicker = withAnyPortal || readOnly && !keepFocusOnInput || this.isTouchDevice && !keepFocusOnInput;\n\n      if (moveFocusToDayPicker) {\n        this.onDayPickerFocus();\n      } else {\n        this.onDayPickerBlur();\n      }\n    }\n\n    onFocusChange({\n      focused: focused\n    });\n  };\n\n  _proto.onDayPickerFocus = function onDayPickerFocus() {\n    this.setState({\n      isInputFocused: false,\n      isDayPickerFocused: true,\n      showKeyboardShortcuts: false\n    });\n  };\n\n  _proto.onDayPickerBlur = function onDayPickerBlur() {\n    this.setState({\n      isInputFocused: true,\n      isDayPickerFocused: false,\n      showKeyboardShortcuts: false\n    });\n  };\n\n  _proto.onFocusOut = function onFocusOut(e) {\n    var onFocusChange = this.props.onFocusChange; // In cases where **relatedTarget** is not null, it points to the right\n    // element here. However, in cases where it is null (such as clicking on a\n    // specific day) or it is **document.body** (IE11), the appropriate value is **event.target**.\n    //\n    // We handle both situations here by using the ` || ` operator to fallback\n    // to *event.target** when **relatedTarget** is not provided.\n\n    var relatedTarget = e.relatedTarget === document.body ? e.target : e.relatedTarget || e.target;\n    if (this.dayPickerContainer.contains(relatedTarget)) return;\n    onFocusChange({\n      focused: false\n    });\n  };\n\n  _proto.setDayPickerContainerRef = function setDayPickerContainerRef(ref) {\n    if (ref === this.dayPickerContainer) return;\n    this.removeEventListeners();\n    this.dayPickerContainer = ref;\n    if (!ref) return;\n    this.addEventListeners();\n  };\n\n  _proto.setContainerRef = function setContainerRef(ref) {\n    this.container = ref;\n  };\n\n  _proto.addEventListeners = function addEventListeners() {\n    // We manually set event because React has not implemented onFocusIn/onFocusOut.\n    // Keep an eye on https://github.com/facebook/react/issues/6410 for updates\n    // We use \"blur w/ useCapture param\" vs \"onfocusout\" for FF browser support\n    this.removeFocusOutEventListener = (0, _consolidatedEvents.addEventListener)(this.dayPickerContainer, 'focusout', this.onFocusOut);\n  };\n\n  _proto.removeEventListeners = function removeEventListeners() {\n    if (this.removeFocusOutEventListener) this.removeFocusOutEventListener();\n  };\n\n  _proto.disableScroll = function disableScroll() {\n    var _this$props3 = this.props,\n        appendToBody = _this$props3.appendToBody,\n        propDisableScroll = _this$props3.disableScroll,\n        focused = _this$props3.focused;\n    if (!appendToBody && !propDisableScroll) return;\n    if (!focused) return; // Disable scroll for every ancestor of this <SingleDatePicker> up to the\n    // document level. This ensures the input and the picker never move. Other\n    // sibling elements or the picker itself can scroll.\n\n    this.enableScroll = (0, _disableScroll2[\"default\"])(this.container);\n  }\n  /* istanbul ignore next */\n  ;\n\n  _proto.responsivizePickerPosition = function responsivizePickerPosition() {\n    // It's possible the portal props have been changed in response to window resizes\n    // So let's ensure we reset this back to the base state each time\n    this.setState({\n      dayPickerContainerStyles: {}\n    });\n    var _this$props4 = this.props,\n        openDirection = _this$props4.openDirection,\n        anchorDirection = _this$props4.anchorDirection,\n        horizontalMargin = _this$props4.horizontalMargin,\n        withPortal = _this$props4.withPortal,\n        withFullScreenPortal = _this$props4.withFullScreenPortal,\n        appendToBody = _this$props4.appendToBody,\n        focused = _this$props4.focused;\n    var dayPickerContainerStyles = this.state.dayPickerContainerStyles;\n\n    if (!focused) {\n      return;\n    }\n\n    var isAnchoredLeft = anchorDirection === _constants.ANCHOR_LEFT;\n\n    if (!withPortal && !withFullScreenPortal) {\n      var containerRect = this.dayPickerContainer.getBoundingClientRect();\n      var currentOffset = dayPickerContainerStyles[anchorDirection] || 0;\n      var containerEdge = isAnchoredLeft ? containerRect[_constants.ANCHOR_RIGHT] : containerRect[_constants.ANCHOR_LEFT];\n      this.setState({\n        dayPickerContainerStyles: _objectSpread({}, (0, _getResponsiveContainerStyles[\"default\"])(anchorDirection, currentOffset, containerEdge, horizontalMargin), {}, appendToBody && (0, _getDetachedContainerStyles[\"default\"])(openDirection, anchorDirection, this.container))\n      });\n    }\n  };\n\n  _proto.showKeyboardShortcutsPanel = function showKeyboardShortcutsPanel() {\n    this.setState({\n      isInputFocused: false,\n      isDayPickerFocused: true,\n      showKeyboardShortcuts: true\n    });\n  };\n\n  _proto.maybeRenderDayPickerWithPortal = function maybeRenderDayPickerWithPortal() {\n    var _this$props5 = this.props,\n        focused = _this$props5.focused,\n        withPortal = _this$props5.withPortal,\n        withFullScreenPortal = _this$props5.withFullScreenPortal,\n        appendToBody = _this$props5.appendToBody;\n\n    if (!focused) {\n      return null;\n    }\n\n    if (withPortal || withFullScreenPortal || appendToBody) {\n      return _react[\"default\"].createElement(_reactPortal.Portal, null, this.renderDayPicker());\n    }\n\n    return this.renderDayPicker();\n  };\n\n  _proto.renderDayPicker = function renderDayPicker() {\n    var _this$props6 = this.props,\n        anchorDirection = _this$props6.anchorDirection,\n        openDirection = _this$props6.openDirection,\n        onDateChange = _this$props6.onDateChange,\n        date = _this$props6.date,\n        onFocusChange = _this$props6.onFocusChange,\n        focused = _this$props6.focused,\n        enableOutsideDays = _this$props6.enableOutsideDays,\n        numberOfMonths = _this$props6.numberOfMonths,\n        orientation = _this$props6.orientation,\n        monthFormat = _this$props6.monthFormat,\n        dayPickerNavigationInlineStyles = _this$props6.dayPickerNavigationInlineStyles,\n        navPosition = _this$props6.navPosition,\n        navPrev = _this$props6.navPrev,\n        navNext = _this$props6.navNext,\n        renderNavPrevButton = _this$props6.renderNavPrevButton,\n        renderNavNextButton = _this$props6.renderNavNextButton,\n        onPrevMonthClick = _this$props6.onPrevMonthClick,\n        onNextMonthClick = _this$props6.onNextMonthClick,\n        onClose = _this$props6.onClose,\n        withPortal = _this$props6.withPortal,\n        withFullScreenPortal = _this$props6.withFullScreenPortal,\n        keepOpenOnDateSelect = _this$props6.keepOpenOnDateSelect,\n        initialVisibleMonth = _this$props6.initialVisibleMonth,\n        renderMonthText = _this$props6.renderMonthText,\n        renderWeekHeaderElement = _this$props6.renderWeekHeaderElement,\n        renderCalendarDay = _this$props6.renderCalendarDay,\n        renderDayContents = _this$props6.renderDayContents,\n        renderCalendarInfo = _this$props6.renderCalendarInfo,\n        renderMonthElement = _this$props6.renderMonthElement,\n        calendarInfoPosition = _this$props6.calendarInfoPosition,\n        hideKeyboardShortcutsPanel = _this$props6.hideKeyboardShortcutsPanel,\n        firstDayOfWeek = _this$props6.firstDayOfWeek,\n        customCloseIcon = _this$props6.customCloseIcon,\n        phrases = _this$props6.phrases,\n        dayAriaLabelFormat = _this$props6.dayAriaLabelFormat,\n        daySize = _this$props6.daySize,\n        isRTL = _this$props6.isRTL,\n        isOutsideRange = _this$props6.isOutsideRange,\n        isDayBlocked = _this$props6.isDayBlocked,\n        isDayHighlighted = _this$props6.isDayHighlighted,\n        weekDayFormat = _this$props6.weekDayFormat,\n        styles = _this$props6.styles,\n        verticalHeight = _this$props6.verticalHeight,\n        transitionDuration = _this$props6.transitionDuration,\n        verticalSpacing = _this$props6.verticalSpacing,\n        horizontalMonthPadding = _this$props6.horizontalMonthPadding,\n        small = _this$props6.small,\n        reactDates = _this$props6.theme.reactDates;\n    var _this$state = this.state,\n        dayPickerContainerStyles = _this$state.dayPickerContainerStyles,\n        isDayPickerFocused = _this$state.isDayPickerFocused,\n        showKeyboardShortcuts = _this$state.showKeyboardShortcuts;\n    var onOutsideClick = !withFullScreenPortal && withPortal ? this.onOutsideClick : undefined;\n\n    var closeIcon = customCloseIcon || _react[\"default\"].createElement(_CloseButton[\"default\"], null);\n\n    var inputHeight = (0, _getInputHeight[\"default\"])(reactDates, small);\n    var withAnyPortal = withPortal || withFullScreenPortal;\n    /* eslint-disable jsx-a11y/no-static-element-interactions */\n\n    /* eslint-disable jsx-a11y/click-events-have-key-events */\n\n    return _react[\"default\"].createElement(\"div\", (0, _extends2[\"default\"])({\n      ref: this.setDayPickerContainerRef\n    }, (0, _reactWithStyles.css)(styles.SingleDatePicker_picker, anchorDirection === _constants.ANCHOR_LEFT && styles.SingleDatePicker_picker__directionLeft, anchorDirection === _constants.ANCHOR_RIGHT && styles.SingleDatePicker_picker__directionRight, openDirection === _constants.OPEN_DOWN && styles.SingleDatePicker_picker__openDown, openDirection === _constants.OPEN_UP && styles.SingleDatePicker_picker__openUp, !withAnyPortal && openDirection === _constants.OPEN_DOWN && {\n      top: inputHeight + verticalSpacing\n    }, !withAnyPortal && openDirection === _constants.OPEN_UP && {\n      bottom: inputHeight + verticalSpacing\n    }, orientation === _constants.HORIZONTAL_ORIENTATION && styles.SingleDatePicker_picker__horizontal, orientation === _constants.VERTICAL_ORIENTATION && styles.SingleDatePicker_picker__vertical, withAnyPortal && styles.SingleDatePicker_picker__portal, withFullScreenPortal && styles.SingleDatePicker_picker__fullScreenPortal, isRTL && styles.SingleDatePicker_picker__rtl, dayPickerContainerStyles), {\n      onClick: onOutsideClick\n    }), _react[\"default\"].createElement(_DayPickerSingleDateController[\"default\"], {\n      date: date,\n      onDateChange: onDateChange,\n      onFocusChange: onFocusChange,\n      orientation: orientation,\n      enableOutsideDays: enableOutsideDays,\n      numberOfMonths: numberOfMonths,\n      monthFormat: monthFormat,\n      withPortal: withAnyPortal,\n      focused: focused,\n      keepOpenOnDateSelect: keepOpenOnDateSelect,\n      hideKeyboardShortcutsPanel: hideKeyboardShortcutsPanel,\n      initialVisibleMonth: initialVisibleMonth,\n      dayPickerNavigationInlineStyles: dayPickerNavigationInlineStyles,\n      navPosition: navPosition,\n      navPrev: navPrev,\n      navNext: navNext,\n      renderNavPrevButton: renderNavPrevButton,\n      renderNavNextButton: renderNavNextButton,\n      onPrevMonthClick: onPrevMonthClick,\n      onNextMonthClick: onNextMonthClick,\n      onClose: onClose,\n      renderMonthText: renderMonthText,\n      renderWeekHeaderElement: renderWeekHeaderElement,\n      renderCalendarDay: renderCalendarDay,\n      renderDayContents: renderDayContents,\n      renderCalendarInfo: renderCalendarInfo,\n      renderMonthElement: renderMonthElement,\n      calendarInfoPosition: calendarInfoPosition,\n      isFocused: isDayPickerFocused,\n      showKeyboardShortcuts: showKeyboardShortcuts,\n      onBlur: this.onDayPickerBlur,\n      phrases: phrases,\n      dayAriaLabelFormat: dayAriaLabelFormat,\n      daySize: daySize,\n      isRTL: isRTL,\n      isOutsideRange: isOutsideRange,\n      isDayBlocked: isDayBlocked,\n      isDayHighlighted: isDayHighlighted,\n      firstDayOfWeek: firstDayOfWeek,\n      weekDayFormat: weekDayFormat,\n      verticalHeight: verticalHeight,\n      transitionDuration: transitionDuration,\n      horizontalMonthPadding: horizontalMonthPadding\n    }), withFullScreenPortal && _react[\"default\"].createElement(\"button\", (0, _extends2[\"default\"])({}, (0, _reactWithStyles.css)(styles.SingleDatePicker_closeButton), {\n      \"aria-label\": phrases.closeDatePicker,\n      type: \"button\",\n      onClick: this.onOutsideClick\n    }), _react[\"default\"].createElement(\"div\", (0, _reactWithStyles.css)(styles.SingleDatePicker_closeButton_svg), closeIcon)));\n    /* eslint-enable jsx-a11y/no-static-element-interactions */\n\n    /* eslint-enable jsx-a11y/click-events-have-key-events */\n  };\n\n  _proto.render = function render() {\n    var _this$props7 = this.props,\n        id = _this$props7.id,\n        placeholder = _this$props7.placeholder,\n        ariaLabel = _this$props7.ariaLabel,\n        disabled = _this$props7.disabled,\n        focused = _this$props7.focused,\n        required = _this$props7.required,\n        readOnly = _this$props7.readOnly,\n        openDirection = _this$props7.openDirection,\n        showClearDate = _this$props7.showClearDate,\n        showDefaultInputIcon = _this$props7.showDefaultInputIcon,\n        inputIconPosition = _this$props7.inputIconPosition,\n        customCloseIcon = _this$props7.customCloseIcon,\n        customInputIcon = _this$props7.customInputIcon,\n        date = _this$props7.date,\n        onDateChange = _this$props7.onDateChange,\n        displayFormat = _this$props7.displayFormat,\n        phrases = _this$props7.phrases,\n        withPortal = _this$props7.withPortal,\n        withFullScreenPortal = _this$props7.withFullScreenPortal,\n        screenReaderInputMessage = _this$props7.screenReaderInputMessage,\n        isRTL = _this$props7.isRTL,\n        noBorder = _this$props7.noBorder,\n        block = _this$props7.block,\n        small = _this$props7.small,\n        regular = _this$props7.regular,\n        verticalSpacing = _this$props7.verticalSpacing,\n        reopenPickerOnClearDate = _this$props7.reopenPickerOnClearDate,\n        keepOpenOnDateSelect = _this$props7.keepOpenOnDateSelect,\n        styles = _this$props7.styles,\n        isOutsideRange = _this$props7.isOutsideRange;\n    var isInputFocused = this.state.isInputFocused;\n    var enableOutsideClick = !withPortal && !withFullScreenPortal;\n    var hideFang = verticalSpacing < _constants.FANG_HEIGHT_PX;\n\n    var input = _react[\"default\"].createElement(_SingleDatePickerInputController[\"default\"], {\n      id: id,\n      placeholder: placeholder,\n      ariaLabel: ariaLabel,\n      focused: focused,\n      isFocused: isInputFocused,\n      disabled: disabled,\n      required: required,\n      readOnly: readOnly,\n      openDirection: openDirection,\n      showCaret: !withPortal && !withFullScreenPortal && !hideFang,\n      showClearDate: showClearDate,\n      showDefaultInputIcon: showDefaultInputIcon,\n      inputIconPosition: inputIconPosition,\n      isOutsideRange: isOutsideRange,\n      customCloseIcon: customCloseIcon,\n      customInputIcon: customInputIcon,\n      date: date,\n      onDateChange: onDateChange,\n      displayFormat: displayFormat,\n      onFocusChange: this.onInputFocus,\n      onKeyDownArrowDown: this.onDayPickerFocus,\n      onKeyDownQuestionMark: this.showKeyboardShortcutsPanel,\n      screenReaderMessage: screenReaderInputMessage,\n      phrases: phrases,\n      isRTL: isRTL,\n      noBorder: noBorder,\n      block: block,\n      small: small,\n      regular: regular,\n      verticalSpacing: verticalSpacing,\n      reopenPickerOnClearDate: reopenPickerOnClearDate,\n      keepOpenOnDateSelect: keepOpenOnDateSelect\n    }, this.maybeRenderDayPickerWithPortal());\n\n    return _react[\"default\"].createElement(\"div\", (0, _extends2[\"default\"])({\n      ref: this.setContainerRef\n    }, (0, _reactWithStyles.css)(styles.SingleDatePicker, block && styles.SingleDatePicker__block)), enableOutsideClick && _react[\"default\"].createElement(_reactOutsideClickHandler[\"default\"], {\n      onOutsideClick: this.onOutsideClick\n    }, input), enableOutsideClick || input);\n  };\n\n  return SingleDatePicker;\n}(_react[\"default\"].PureComponent || _react[\"default\"].Component);\n\nexports.PureSingleDatePicker = SingleDatePicker;\nSingleDatePicker.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nSingleDatePicker.defaultProps = defaultProps;\n\nvar _default = (0, _reactWithStyles.withStyles)(function (_ref3) {\n  var _ref3$reactDates = _ref3.reactDates,\n      color = _ref3$reactDates.color,\n      zIndex = _ref3$reactDates.zIndex;\n  return {\n    SingleDatePicker: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    SingleDatePicker__block: {\n      display: 'block'\n    },\n    SingleDatePicker_picker: {\n      zIndex: zIndex + 1,\n      backgroundColor: color.background,\n      position: 'absolute'\n    },\n    SingleDatePicker_picker__rtl: {\n      direction: (0, _noflip[\"default\"])('rtl')\n    },\n    SingleDatePicker_picker__directionLeft: {\n      left: (0, _noflip[\"default\"])(0)\n    },\n    SingleDatePicker_picker__directionRight: {\n      right: (0, _noflip[\"default\"])(0)\n    },\n    SingleDatePicker_picker__portal: {\n      backgroundColor: 'rgba(0, 0, 0, 0.3)',\n      position: 'fixed',\n      top: 0,\n      left: (0, _noflip[\"default\"])(0),\n      height: '100%',\n      width: '100%'\n    },\n    SingleDatePicker_picker__fullScreenPortal: {\n      backgroundColor: color.background\n    },\n    SingleDatePicker_closeButton: {\n      background: 'none',\n      border: 0,\n      color: 'inherit',\n      font: 'inherit',\n      lineHeight: 'normal',\n      overflow: 'visible',\n      cursor: 'pointer',\n      position: 'absolute',\n      top: 0,\n      right: (0, _noflip[\"default\"])(0),\n      padding: 15,\n      zIndex: zIndex + 2,\n      ':hover': {\n        color: \"darken(\".concat(color.core.grayLighter, \", 10%)\"),\n        textDecoration: 'none'\n      },\n      ':focus': {\n        color: \"darken(\".concat(color.core.grayLighter, \", 10%)\"),\n        textDecoration: 'none'\n      }\n    },\n    SingleDatePicker_closeButton_svg: {\n      height: 15,\n      width: 15,\n      fill: color.core.grayLighter\n    }\n  };\n}, {\n  pureComponent: typeof _react[\"default\"].PureComponent !== 'undefined'\n})(SingleDatePicker);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"module"}