{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\n\nvar Notice =\n/** @class */\nfunction () {\n  var Notice = /*#__PURE__*/function (_Component) {\n    _inherits(Notice, _Component);\n\n    var _super = _createSuper(Notice);\n\n    function Notice() {\n      var _this;\n\n      _classCallCheck(this, Notice);\n\n      _this = _super.apply(this, arguments);\n      _this.closeTimer = null;\n\n      _this.close = function (e) {\n        if (e) {\n          e.stopPropagation();\n        }\n\n        _this.clearCloseTimer();\n\n        var onClose = _this.props.onClose;\n\n        if (onClose) {\n          onClose();\n        }\n      };\n\n      _this.startCloseTimer = function () {\n        if (_this.props.duration) {\n          _this.closeTimer = window.setTimeout(function () {\n            _this.close();\n          }, _this.props.duration * 1000);\n        }\n      };\n\n      _this.clearCloseTimer = function () {\n        if (_this.closeTimer) {\n          clearTimeout(_this.closeTimer);\n          _this.closeTimer = null;\n        }\n      };\n\n      return _this;\n    }\n\n    _createClass(Notice, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.startCloseTimer();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (this.props.duration !== prevProps.duration || this.props.update) {\n          this.restartCloseTimer();\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.clearCloseTimer();\n      }\n    }, {\n      key: \"restartCloseTimer\",\n      value: function restartCloseTimer() {\n        this.clearCloseTimer();\n        this.startCloseTimer();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props = this.props,\n            prefixCls = _this$props.prefixCls,\n            className = _this$props.className,\n            closable = _this$props.closable,\n            closeIcon = _this$props.closeIcon,\n            style = _this$props.style,\n            onClick = _this$props.onClick,\n            children = _this$props.children,\n            holder = _this$props.holder;\n        var componentClass = \"\".concat(prefixCls, \"-notice\");\n        var dataOrAriaAttributeProps = Object.keys(this.props).reduce(function (acc, key) {\n          if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-' || key === 'role') {\n            acc[key] = _this2.props[key];\n          }\n\n          return acc;\n        }, {});\n        var node = React.createElement(\"div\", Object.assign({\n          className: classNames(componentClass, className, _defineProperty({}, \"\".concat(componentClass, \"-closable\"), closable)),\n          style: style,\n          onMouseEnter: this.clearCloseTimer,\n          onMouseLeave: this.startCloseTimer,\n          onClick: onClick\n        }, dataOrAriaAttributeProps), React.createElement(\"div\", {\n          className: \"\".concat(componentClass, \"-content\")\n        }, children), closable ? React.createElement(\"a\", {\n          tabIndex: 0,\n          onClick: this.close,\n          className: \"\".concat(componentClass, \"-close\")\n        }, closeIcon || React.createElement(\"span\", {\n          className: \"\".concat(componentClass, \"-close-x\")\n        })) : null);\n\n        if (holder) {\n          return ReactDOM.createPortal(node, holder);\n        }\n\n        return node;\n      }\n    }]);\n\n    return Notice;\n  }(Component);\n\n  Notice.defaultProps = {\n    onClose: function onClose() {},\n    duration: 1.5,\n    style: {\n      right: '50%'\n    }\n  };\n  return Notice;\n}();\n\nexport default Notice;","map":null,"metadata":{},"sourceType":"module"}