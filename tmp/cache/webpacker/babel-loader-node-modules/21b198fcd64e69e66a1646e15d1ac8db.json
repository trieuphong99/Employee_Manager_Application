{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/commons/components/dateRangePicker/customPicker.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& > *': {\n        margin: theme.spacing(1)\n      }\n    }\n  };\n});\nvar picker = [{\n  value: \"Today\",\n  color: \"default\"\n}, {\n  value: \"This week\",\n  color: \"primary\"\n}, {\n  value: \"This month\",\n  color: \"secondary\"\n}];\nexport default function (props) {\n  var _this = this;\n\n  var pickDate = props.pickDate;\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var handleOnClick = function handleOnClick(value) {\n    var startDate, endDate;\n\n    if (value === \"Today\") {\n      startDate = moment();\n      endDate = moment();\n    } else if (value === \"This week\") {\n      if (moment().diff(moment().startOf('week'), 'days') === 1) {\n        // sun->sat: 1->7\n        startDate = moment().subtract(7, 'days');\n        endDate = moment().subtract(3, 'days');\n      } else {\n        startDate = moment().startOf('week').add(1, 'days');\n        endDate = moment();\n      }\n    } else {\n      if (moment().diff(moment().startOf('month'), 'days') === 0) {\n        startDate = moment().subtract(1, 'days').startOf('months');\n        endDate = moment().subtract(1, 'days');\n      } else {\n        startDate = moment().startOf('month');\n        endDate = moment();\n      }\n    }\n\n    dispatch(pickDate(startDate, endDate));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, _.map(picker, function (o, i) {\n    return /*#__PURE__*/React.createElement(Button, {\n      key: i,\n      color: o.color,\n      onClick: function onClick() {\n        return handleOnClick(o.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, o.value);\n  }));\n}","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/commons/components/dateRangePicker/customPicker.js"],"names":["React","makeStyles","Button","useDispatch","moment","useStyles","theme","root","margin","spacing","picker","value","color","props","pickDate","dispatch","classes","handleOnClick","startDate","endDate","diff","startOf","subtract","add","_","map","o","i"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst picker = [\n  { value: \"Today\", color: \"default\" },\n  { value: \"This week\", color: \"primary\" },\n  { value: \"This month\", color: \"secondary\" },\n]\n\nexport default function (props) {\n  const { pickDate } = props;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleOnClick = (value) => {\n    let startDate, endDate\n    if (value === \"Today\") {\n      startDate = moment()\n      endDate = moment()\n    }\n    else if (value === \"This week\") {\n      if (moment().diff(moment().startOf('week'), 'days') === 1) { // sun->sat: 1->7\n        startDate = moment().subtract(7, 'days')\n        endDate = moment().subtract(3, 'days')\n      }\n      else {\n        startDate = moment().startOf('week').add(1, 'days')\n        endDate = moment()\n      }\n    }\n    else {\n      if (moment().diff(moment().startOf('month'), 'days' ) === 0) {\n        startDate = moment().subtract(1, 'days').startOf('months')\n        endDate = moment().subtract(1, 'days')\n      }\n      else {\n        startDate = moment().startOf('month')\n        endDate = moment()\n      }\n    }\n    dispatch(pickDate(startDate, endDate))\n  }\n\n  return (\n    <div className={classes.root}>\n      {\n        _.map(picker,\n          (o, i) =>\n            <Button key={i} color={o.color} onClick={() => handleOnClick(o.value)}>{o.value}</Button>\n        )\n      }\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}