{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/timesheets/enoughOffset.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/timeSheet';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport Time from '../../../commons/const/Time';\n\nvar Offset = function Offset(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var labelButton = props.labelButton,\n      reload = props.reload;\n  var dateSelected = moment(props.dateSelected, Time.DMY);\n\n  var _useState3 = useState(dateSelected),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      focused = _useState6[0],\n      setFocused = _useState6[1];\n\n  var handleSubmit = function handleSubmit() {\n    props.offSet(dateSelected, date, reload);\n    toggle();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, labelButton), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Compensation\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(SingleDatePicker, {\n    id: \"date\",\n    block: true,\n    date: dateSelected // momentPropTypes.momentObj or null\n    ,\n    displayFormat: Time.crossDMY,\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"For date:\"), /*#__PURE__*/React.createElement(SingleDatePicker, {\n    id: \"for_date\",\n    block: true,\n    date: date // momentPropTypes.momentObj or null\n    ,\n    onDateChange: function onDateChange(date) {\n      setDate(date);\n    } // PropTypes.func.isRequired\n    ,\n    focused: focused // PropTypes.bool\n    ,\n    onFocusChange: function onFocusChange() {\n      return setFocused(!focused);\n    } // PropTypes.func.isRequired\n    ,\n    displayFormat: Time.crossDMY,\n    isOutsideRange: function isOutsideRange(day) {\n      return !isInclusivelyBeforeDay(day, moment(dateSelected, Time.crossDMY).subtract(1, 'days'));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    offSet: function offSet(date, for_date, reload) {\n      return dispatch(actions.offSet({\n        date: date,\n        for_date: for_date,\n        reload: reload\n      }));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Offset);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/timesheets/enoughOffset.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Label","Input","connect","actions","moment","_","SingleDatePicker","isInclusivelyBeforeDay","Time","Offset","props","modal","setModal","toggle","labelButton","reload","dateSelected","DMY","date","setDate","focused","setFocused","handleSubmit","offSet","crossDMY","day","subtract","mapStatetoProps","state","mapDispatchToProps","dispatch","for_date"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/timeSheet';\nimport moment from 'moment'\nimport _ from 'lodash'\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport Time from '../../../commons/const/Time'\n\nconst Offset = props => {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  const { labelButton, reload } = props\n  const dateSelected = moment(props.dateSelected, Time.DMY)\n\n  const [date, setDate] = useState(dateSelected);\n  const [focused, setFocused] = useState(false);\n\n  const handleSubmit = () => {\n    props.offSet(dateSelected, date, reload)\n    toggle()\n  }\n\n  return (\n    <div>\n      <Button color=\"primary\" onClick={toggle}>{labelButton}</Button>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Compensation</ModalHeader>\n        <ModalBody>\n          <div>\n            <Label>Date:</Label>\n            <SingleDatePicker\n              id=\"date\"\n              block\n              date={dateSelected} // momentPropTypes.momentObj or null\n              displayFormat={Time.crossDMY}\n              disabled={true}\n            />\n          </div>\n          <div>\n            <Label>For date:</Label>\n            <SingleDatePicker\n              id=\"for_date\"\n              block\n              date={date} // momentPropTypes.momentObj or null\n              onDateChange={(date) => { setDate(date) }} // PropTypes.func.isRequired\n              focused={focused} // PropTypes.bool\n              onFocusChange={() => setFocused(!focused)} // PropTypes.func.isRequired\n              displayFormat={Time.crossDMY}\n              isOutsideRange={\n                day => !isInclusivelyBeforeDay(day, moment(dateSelected, Time.crossDMY).subtract(1, 'days'))\n              }\n            />\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"info\" onClick={handleSubmit}>Submit</Button>\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div >\n  )\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    offSet: (date, for_date, reload) => dispatch(actions.offSet({ date, for_date, reload }))\n  }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(Offset);\n"]},"metadata":{},"sourceType":"module"}