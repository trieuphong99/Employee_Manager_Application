{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $Function = GetIntrinsic('%Function%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Get = require('./Get');\n\nvar IsConstructor = require('./IsConstructor');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-getprototypefromconstructor\n\n\nmodule.exports = function GetPrototypeFromConstructor(constructor, intrinsicDefaultProto) {\n  var intrinsic = GetIntrinsic(intrinsicDefaultProto); // throws if not a valid intrinsic\n\n  if (!IsConstructor(constructor)) {\n    throw new $TypeError('Assertion failed: `constructor` must be a constructor');\n  }\n\n  var proto = Get(constructor, 'prototype');\n\n  if (Type(proto) !== 'Object') {\n    if (!(constructor instanceof $Function)) {\n      // ignore other realms, for now\n      throw new $TypeError('cross-realm constructors not currently supported');\n    }\n\n    proto = intrinsic;\n  }\n\n  return proto;\n};","map":null,"metadata":{},"sourceType":"module"}