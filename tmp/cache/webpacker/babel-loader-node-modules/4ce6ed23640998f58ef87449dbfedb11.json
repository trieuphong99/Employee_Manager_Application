{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/overtimes/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Badge } from 'reactstrap';\nimport moment from 'moment';\nimport \"react-dates/lib/css/_datepicker.css\";\nimport _ from 'lodash';\nimport Time from '../../../commons/const/Time';\nimport * as actions from '../../actions/overtimes';\nimport DateRangePicker from '../../../commons/components/dateRangePicker';\nimport Pagination from '../../../commons/components/pagination';\nimport OvertimesFormModal from './OvertimeForm';\n\nvar Overtimes = function Overtimes(props) {\n  var _useState = useState({\n    startTime: moment().subtract(10, 'days').format(Time.crossDMY),\n    endTime: moment().format(Time.crossDMY)\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var listOvertimes = props.listOvertimes,\n      totalPage = props.totalPage;\n  useEffect(function () {\n    props.getOvertimes(date, currentPage);\n  }, [date, currentPage]);\n  return React.createElement(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      width: \"95%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row mx-0 mt-5 mb-3\",\n    style: {\n      verticalAlign: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(OvertimesFormModal, {\n    title: \"Overtimes\",\n    buttonLabel: \"Add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(DateRangePicker, {\n    setDate: setDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Table, {\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Start\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"End\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Status\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Reason\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, _.map(listOvertimes, function (item, index) {\n    var statusColor = {\n      confirm: \"success\",\n      refuse: \"danger\",\n      waiting: \"warning\"\n    };\n    return React.createElement(\"tr\", {\n      key: index,\n      style: {\n        height: \"62px\",\n        verticalAlign: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, item.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, item.start_at), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, item.end_at), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, item.reason), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      href: \"#\",\n      color: statusColor[item.confirmation_status],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, item.confirmation_status)), React.createElement(\"td\", {\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, item.confirmation_status === \"waiting\" && React.createElement(OvertimesFormModal, {\n      title: \"Edit overtimes\",\n      buttonLabel: \"Edit\",\n      item: item,\n      id: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Pagination, {\n    totalPage: totalPage,\n    pageChange: setCurrentPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listOvertimes: state.overtimes.data,\n    totalPage: state.overtimes.total_page\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getOvertimes: function getOvertimes(date, currentPage) {\n      return dispatch(actions.getOvertimes({\n        date: date,\n        currentPage: currentPage\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overtimes);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/overtimes/index.js"],"names":["React","useState","useEffect","connect","Table","Badge","moment","_","Time","actions","DateRangePicker","Pagination","OvertimesFormModal","Overtimes","props","startTime","subtract","format","crossDMY","endTime","date","setDate","currentPage","setCurrentPage","listOvertimes","totalPage","getOvertimes","width","verticalAlign","map","item","index","statusColor","confirm","refuse","waiting","height","start_at","end_at","reason","confirmation_status","id","mapStateToProps","state","overtimes","data","total_page","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Table, Badge } from 'reactstrap'\nimport moment from 'moment'\nimport \"react-dates/lib/css/_datepicker.css\";\nimport _ from 'lodash';\n\nimport Time from '../../../commons/const/Time';\nimport * as actions from '../../actions/overtimes'\nimport DateRangePicker from '../../../commons/components/dateRangePicker'\nimport Pagination from '../../../commons/components/pagination'\nimport OvertimesFormModal from './OvertimeForm'\n\nconst Overtimes = props => {\n  const [date, setDate] = useState({\n    startTime: moment().subtract(10, 'days').format(Time.crossDMY),\n    endTime: moment().format(Time.crossDMY)\n  })\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const { listOvertimes, totalPage } = props\n\n  useEffect(() => {\n    props.getOvertimes(date, currentPage)\n  }, [date, currentPage])\n\n  return (\n    <div className=\"container-fluid\" style={{ width: \"95%\" }}>\n      <div className=\"row mx-0 mt-5 mb-3\" style={{ verticalAlign: \"none\" }}>\n        <div>\n          <OvertimesFormModal\n            title=\"Overtimes\"\n            buttonLabel=\"Add\"\n          />\n        </div>\n        <div>\n          <DateRangePicker setDate={setDate} />\n        </div>\n      </div>\n      <div>\n        <Table hover>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Start</th>\n              <th>End</th>\n              <th>Status</th>\n              <th>Reason</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              _.map(listOvertimes, (item, index) => {\n                const statusColor = { confirm: \"success\", refuse: \"danger\", waiting: \"warning\" }\n\n                return (\n                  <tr key={index} style={{ height: \"62px\", verticalAlign: \"none\" }}>\n                    <td>{item.date}</td>\n                    <td>{item.start_at}</td>\n                    <td>{item.end_at}</td>\n                    <td>{item.reason}</td>\n                    <td><Badge href=\"#\" color={statusColor[item.confirmation_status]}>{item.confirmation_status}</Badge></td>\n                    <td style={{ width: \"15%\" }}>\n                      {item.confirmation_status === \"waiting\" &&\n                        <OvertimesFormModal\n                          title=\"Edit overtimes\"\n                          buttonLabel=\"Edit\"\n                          item={item}\n                          id={item.id}\n                        />\n                      }\n                    </td>\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </Table>\n      </div>\n      <div>\n        <Pagination totalPage={totalPage} pageChange={setCurrentPage} />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    listOvertimes: state.overtimes.data,\n    totalPage: state.overtimes.total_page\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getOvertimes: (date, currentPage) => dispatch(actions.getOvertimes({ date, currentPage }))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overtimes);\n"]},"metadata":{},"sourceType":"module"}