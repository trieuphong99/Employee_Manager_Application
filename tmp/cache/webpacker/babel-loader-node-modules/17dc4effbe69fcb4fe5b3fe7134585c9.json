{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport actionTypes from '../const/actionTypes';\nimport _ from 'lodash';\nvar initialState = [];\n\nvar myReducer = function myReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.GET_DAYOFF:\n      return action.data;\n\n    case actionTypes.ADD_DAYOFF:\n      return state.listDayoff.concat(action.data);\n\n    case actionTypes.UPDATE_DAYOFF:\n      var item = action.data;\n\n      var index = _.findIndex(function (o) {\n        return _.isEqual(item, o);\n      });\n\n      return [].concat(_toConsumableArray(_.slice(state, 0, index)), [item], _toConsumableArray(_.slice(state, index + 1)));\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/reducer/dayOffs.js"],"names":["actionTypes","_","initialState","myReducer","state","action","type","GET_DAYOFF","data","ADD_DAYOFF","listDayoff","concat","UPDATE_DAYOFF","item","index","findIndex","o","isEqual","slice"],"mappings":";;;;;;;;AAAA,OAAOA,WAAP,MAAwB,sBAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,IAAIC,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKN,WAAW,CAACO,UAAjB;AACE,aAAOF,MAAM,CAACG,IAAd;;AAEF,SAAKR,WAAW,CAACS,UAAjB;AACE,aAAOL,KAAK,CAACM,UAAN,CAAiBC,MAAjB,CAAwBN,MAAM,CAACG,IAA/B,CAAP;;AAEF,SAAKR,WAAW,CAACY,aAAjB;AACE,UAAMC,IAAI,GAAGR,MAAM,CAACG,IAApB;;AACA,UAAMM,KAAK,GAAGb,CAAC,CAACc,SAAF,CAAY,UAAAC,CAAC;AAAA,eAAIf,CAAC,CAACgB,OAAF,CAAUJ,IAAV,EAAgBG,CAAhB,CAAJ;AAAA,OAAb,CAAd;;AACA,0CACKf,CAAC,CAACiB,KAAF,CAAQd,KAAR,EAAe,CAAf,EAAkBU,KAAlB,CADL,IAEED,IAFF,sBAGKZ,CAAC,CAACiB,KAAF,CAAQd,KAAR,EAAeU,KAAK,GAAG,CAAvB,CAHL;;AAKF;AACE,aAAOV,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,SAAf","sourcesContent":["import actionTypes from '../const/actionTypes';\nimport _ from 'lodash';\n\nvar initialState = [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case actionTypes.GET_DAYOFF:\n      return action.data;\n\n    case actionTypes.ADD_DAYOFF:\n      return state.listDayoff.concat(action.data)\n\n    case actionTypes.UPDATE_DAYOFF:\n      const item = action.data\n      const index = _.findIndex(o => _.isEqual(item, o))\n      return [\n        ..._.slice(state, 0, index),\n        item,\n        ..._.slice(state, index + 1)\n      ]\n    default:\n      return state;\n  }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}