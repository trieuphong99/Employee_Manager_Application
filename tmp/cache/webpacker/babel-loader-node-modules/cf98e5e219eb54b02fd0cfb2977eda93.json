{"ast":null,"code":"import * as Yup from 'yup';\nimport moment from 'moment';\n\nvar isSameOrBefore = function isSameOrBefore(startTime, endTime) {\n  return moment(startTime, 'HH:mm').isSameOrBefore(moment(endTime, 'HH:mm'));\n};\n\nexport var validationSchema = Yup.object().shape({\n  start_at: Yup.string().required(\"Start at is a required field\").test('not empty', 'Start time cant be empty', function (value) {\n    return !!value;\n  }).test(\"start_time_test\", \"Start time must be before end time\", function (value) {\n    var end_at = this.parent.end_at;\n    return isSameOrBefore(value, end_at);\n  }),\n  end_at: Yup.string().required(\"End time is a required field\"),\n  reason: Yup.string().max(200).matches(/[a-zA-Z]+/, 'Invalid reason!').required(\"Reason is a required field\")\n});","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/overtimes/validate.js"],"names":["Yup","moment","isSameOrBefore","startTime","endTime","validationSchema","object","shape","start_at","string","required","test","value","end_at","parent","reason","max","matches"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAYC,OAAZ,EAAwB;AAC7C,SAAOH,MAAM,CAACE,SAAD,EAAY,OAAZ,CAAN,CAA2BD,cAA3B,CAA0CD,MAAM,CAACG,OAAD,EAAU,OAAV,CAAhD,CAAP;AACD,CAFD;;AAGA,OAAO,IAAMC,gBAAgB,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AACjDC,EAAAA,QAAQ,EAAER,GAAG,CAACS,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB,EACPC,IADO,CAEN,WAFM,EAGN,0BAHM,EAIN,UAAUC,KAAV,EAAiB;AACf,WAAO,CAAC,CAACA,KAAT;AACD,GANK,EAQPD,IARO,CASN,iBATM,EAUN,oCAVM,EAWN,UAAUC,KAAV,EAAiB;AAAA,QACPC,MADO,GACI,KAAKC,MADT,CACPD,MADO;AAEf,WAAOX,cAAc,CAACU,KAAD,EAAQC,MAAR,CAArB;AACD,GAdK,CADuC;AAiBjDA,EAAAA,MAAM,EACJb,GAAG,CAACS,MAAJ,GACGC,QADH,CACY,8BADZ,CAlB+C;AAoBjDK,EAAAA,MAAM,EACJf,GAAG,CAACS,MAAJ,GACGO,GADH,CACO,GADP,EAEGC,OAFH,CAEW,WAFX,EAEwB,iBAFxB,EAGGP,QAHH,CAGY,4BAHZ;AArB+C,CAAnB,CAAzB","sourcesContent":["import * as Yup from 'yup';\nimport moment from 'moment';\n\nconst isSameOrBefore = (startTime, endTime) => {\n  return moment(startTime, 'HH:mm').isSameOrBefore(moment(endTime, 'HH:mm'));\n}\nexport const validationSchema = Yup.object().shape({\n  start_at: Yup.string().required(\"Start at is a required field\")\n    .test(\n      'not empty',\n      'Start time cant be empty',\n      function (value) {\n        return !!value;\n      }\n    )\n    .test(\n      \"start_time_test\",\n      \"Start time must be before end time\",\n      function (value) {\n        const { end_at } = this.parent;\n        return isSameOrBefore(value, end_at);\n      }\n    ),\n  end_at:\n    Yup.string()\n      .required(\"End time is a required field\"),\n  reason:\n    Yup.string()\n      .max(200)\n      .matches(/[a-zA-Z]+/, 'Invalid reason!')\n      .required(\"Reason is a required field\")\n})"]},"metadata":{},"sourceType":"module"}