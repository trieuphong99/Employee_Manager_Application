{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/admin/components/timesheets/updateModal.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, Input, InputGroupText, InputGroupAddon, Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setUpdateTimeSheet } from \"../../actions/timeSheet\";\n\nvar UpdateModal = function UpdateModal(props) {\n  var id = props.id,\n      time = props.time;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputStart = _useState2[0],\n      setInputStart = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputEnd = _useState4[0],\n      setInputEnd = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modal = _useState6[0],\n      setModal = _useState6[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var dispatch = useDispatch();\n\n  var handleClick = function handleClick(start, end) {\n    dispatch(setUpdateTimeSheet(id, start, end));\n    setModal(!modal);\n    window.location.reload(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, time), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    style: {\n      marginTop: \"190px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Update\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(InputGroupText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Start at:\")), React.createElement(Input, {\n    onChange: function onChange(e) {\n      return setInputStart(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(InputGroupText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"End at:\")), React.createElement(Input, {\n    onChange: function onChange(e) {\n      return setInputEnd(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"success\",\n    onClick: function onClick() {\n      return handleClick(inputStart, inputEnd);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Confirm\"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default UpdateModal;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/components/timesheets/updateModal.js"],"names":["React","useState","Modal","ModalHeader","ModalBody","ModalFooter","InputGroup","Input","InputGroupText","InputGroupAddon","Button","useDispatch","setUpdateTimeSheet","UpdateModal","props","id","time","inputStart","setInputStart","inputEnd","setInputEnd","modal","setModal","toggle","dispatch","handleClick","start","end","window","location","reload","marginTop","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  InputGroup,\n  Input,\n  InputGroupText,\n  InputGroupAddon,\n  Button\n} from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setUpdateTimeSheet } from \"../../actions/timeSheet\";\n\nconst UpdateModal = props => {\n  const {id, time} = props;\n  const [inputStart, setInputStart] = useState('');\n  const [inputEnd, setInputEnd] = useState('');\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  const dispatch = useDispatch();\n  const handleClick = (start, end) => {\n    dispatch(setUpdateTimeSheet(id, start, end));\n    setModal(!modal);\n    window.location.reload(false);\n  }\n  return (\n    <div>\n      <p onClick={toggle}>{time}</p>\n      <Modal isOpen={modal} toggle={toggle} style={{ marginTop: \"190px\" }}>\n        <ModalHeader toggle={toggle}>Update</ModalHeader>\n        <ModalBody>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>Start at:</InputGroupText>\n                  </InputGroupAddon>\n                  <Input onChange={e => setInputStart(e.target.value)} />\n                </InputGroup>\n              </div>\n              <div className=\"col\">\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>End at:</InputGroupText>\n                  </InputGroupAddon>\n                  <Input onChange={e => setInputEnd(e.target.value)} />\n                </InputGroup>\n              </div>\n            </div>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => handleClick(inputStart, inputEnd)}>Confirm</Button>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default UpdateModal;\n"]},"metadata":{},"sourceType":"module"}