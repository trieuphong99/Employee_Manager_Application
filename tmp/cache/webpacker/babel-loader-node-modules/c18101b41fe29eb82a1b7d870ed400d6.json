{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Get = require('./Get');\n\nvar IsCallable = require('./IsCallable');\n\nvar Type = require('./Type'); // https://www.ecma-international.org/ecma-262/6.0/#sec-ordinaryhasinstance\n\n\nmodule.exports = function OrdinaryHasInstance(C, O) {\n  if (IsCallable(C) === false) {\n    return false;\n  }\n\n  if (Type(O) !== 'Object') {\n    return false;\n  }\n\n  var P = Get(C, 'prototype');\n\n  if (Type(P) !== 'Object') {\n    throw new $TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n  }\n\n  return O instanceof C;\n};","map":null,"metadata":{},"sourceType":"module"}