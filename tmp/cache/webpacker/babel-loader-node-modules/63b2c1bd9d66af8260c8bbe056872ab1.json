{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/checkOut/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Col, Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './checkOut.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\nimport * as timeSheetActions from '../../actions/timeSheet';\nimport moment from 'moment';\nimport RealTime from 'react-live-clock';\nimport Clock from 'react-clock';\nimport Time from '../../../commons/const/Time';\nimport { compose } from 'redux';\nimport { Field, reduxForm } from 'redux-form';\nimport renderTextAreaField from './FormHelper/TextAreaField';\nimport validate from './redux-form/validate';\n\nvar CheckOut = function CheckOut(props) {\n  var timeSheet = props.timeSheet,\n      handleSubmit = props.handleSubmit,\n      invalid = props.invalid,\n      submitting = props.submitting,\n      pristine = props.pristine,\n      reset = props.reset;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeClock = _useState2[0],\n      setTimeClock = _useState2[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      return setTimeClock(new Date());\n    }, 1000);\n    props.getStaffTimeSheet({\n      startTime: moment().format(Time.DMY),\n      endTime: moment().format(Time.DMY)\n    }, 1, 'ASC', 'All'); // eslint-disable-next-line\n  }, []);\n  var className = props.className;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var letCheckOut = function letCheckOut() {\n    var startTime = moment(timeSheet.data[0].start_at, Time.HMS);\n    var endTime = moment(moment().format(Time.HMS), Time.HMS);\n    var duration = moment.duration(endTime.diff(startTime));\n    var hours = duration.asHours();\n\n    if (hours <= Time.timeCheckWork) {\n      toggle();\n      reset();\n    } else {\n      props.checkOut('');\n    }\n  };\n\n  var finishReport = function finishReport(data) {\n    props.checkOut(data.Reason);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"check-out\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total-content-check-out\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-check-out\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Check out\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-check-out\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    value: timeClock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(RealTime, {\n    format: Time.FullDayFirst,\n    ticking: true,\n    timezone: Time.timeZone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-checkout\",\n    onClick: letCheckOut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Finish\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(finishReport),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Why are you leave early ?\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    \"for\": \"exampleText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \"Reason\"), /*#__PURE__*/React.createElement(Field, {\n    id: \"Reason\",\n    className: \"Reason\",\n    placeholder: \"Reason\",\n    name: \"Reason\",\n    component: renderTextAreaField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    disabled: invalid || submitting || pristine,\n    className: \"btn btn-change-pass-word\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Check Out\")))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    timeSheet: state.timeSheet\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkOut: function checkOut(reason) {\n      dispatch(actions.checkOut({\n        reason: reason\n      }));\n    },\n    getStaffTimeSheet: function getStaffTimeSheet(date, current_page, sort_date) {\n      dispatch(timeSheetActions.getStaffTimeSheet({\n        date: date,\n        current_page: current_page,\n        sort_date: sort_date\n      }));\n    }\n  };\n};\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps);\nvar withReduxForm = reduxForm({\n  form: 'CHECK_OUT',\n  validate: validate //tất cả code validate để trong validate.js mà import vào\n\n});\nexport default compose(withConnect, withReduxForm)(CheckOut);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/checkOut/index.js"],"names":["React","useState","useEffect","Col","Button","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","connect","actions","timeSheetActions","moment","RealTime","Clock","Time","compose","Field","reduxForm","renderTextAreaField","validate","CheckOut","props","timeSheet","handleSubmit","invalid","submitting","pristine","reset","Date","timeClock","setTimeClock","setInterval","getStaffTimeSheet","startTime","format","DMY","endTime","className","modal","setModal","toggle","letCheckOut","data","start_at","HMS","duration","diff","hours","asHours","timeCheckWork","checkOut","finishReport","Reason","FullDayFirst","timeZone","mapStateToProps","state","mapDispatchToProps","dispatch","reason","date","current_page","sort_date","withConnect","withReduxForm","form"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Col, Button, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport './checkOut.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/checkInCheckOut';\nimport * as timeSheetActions from '../../actions/timeSheet';\nimport moment from 'moment'\nimport RealTime from 'react-live-clock';\nimport Clock from 'react-clock';\nimport Time from '../../../commons/const/Time';\nimport { compose } from 'redux';\nimport { Field, reduxForm } from 'redux-form'\nimport renderTextAreaField from './FormHelper/TextAreaField'\nimport validate from './redux-form/validate'\n\nconst CheckOut = props => {\n  const { timeSheet, handleSubmit, invalid, submitting, pristine, reset } = props;\n  const [timeClock, setTimeClock] = useState(new Date());\n  useEffect(() => {\n    setInterval(\n      () => setTimeClock(new Date()),\n      1000\n    );\n    props.getStaffTimeSheet({\n      startTime: moment().format(Time.DMY),\n      endTime: moment().format(Time.DMY)\n    }, 1, 'ASC', 'All');\n    // eslint-disable-next-line\n  }, []);\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  const letCheckOut = () => {\n    const startTime = moment(timeSheet.data[0].start_at, Time.HMS)\n    const endTime = moment(moment().format(Time.HMS), Time.HMS)\n    const duration = moment.duration(endTime.diff(startTime));\n    const hours = duration.asHours();\n    if (hours <= Time.timeCheckWork) {\n      toggle();\n      reset();\n    }\n    else {\n      props.checkOut('');\n    }\n  }\n  const finishReport = (data) => {\n    props.checkOut(data.Reason);\n  }\n  return (\n    <div className=\"check-out\">\n      <div className='total-content-check-out'>\n        <div className='title-check-out'>Check out</div>\n        <div className='date-check-out'>\n          <Clock value={timeClock} />\n          <RealTime format={Time.FullDayFirst} ticking={true} timezone={Time.timeZone} />\n        </div>\n        <button className=\"btn btn-checkout\" onClick={letCheckOut}>Finish</button>\n        <div>\n          <Modal isOpen={modal} toggle={toggle} className={className}>\n            <form onSubmit={handleSubmit(finishReport)}>\n              <ModalHeader toggle={toggle}>Why are you leave early ?</ModalHeader>\n              <ModalBody>\n                <FormGroup>\n                  <Label for=\"exampleText\">Reason</Label>\n                  <Field\n                    id='Reason'\n                    className=\"Reason\"\n                    placeholder=\"Reason\"\n                    name=\"Reason\"\n                    component={renderTextAreaField}\n                  />\n                </FormGroup>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                <Button\n                  color=\"success\"\n                  disabled={invalid || submitting || pristine}\n                  className=\"btn btn-change-pass-word\"\n                  type=\"submit\"\n                >\n                  Check Out\n                </Button>\n              </ModalFooter>\n            </form>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    timeSheet: state.timeSheet,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkOut: (reason) => { dispatch(actions.checkOut({ reason: reason })) },\n    getStaffTimeSheet: (date, current_page, sort_date) => { dispatch(timeSheetActions.getStaffTimeSheet({ date, current_page: current_page, sort_date: sort_date })) },\n  }\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReduxForm = reduxForm({\n  form: 'CHECK_OUT',\n  validate: validate //tất cả code validate để trong validate.js mà import vào\n});\n\nexport default compose(\n  withConnect,\n  withReduxForm\n)(CheckOut);"]},"metadata":{},"sourceType":"module"}