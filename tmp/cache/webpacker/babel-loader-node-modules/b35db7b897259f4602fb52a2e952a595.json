{"ast":null,"code":"import * as ActionTypes from \"../const/account\";\nimport axios from \"axios\";\nimport { showLoading, hideLoading } from \"./loading\";\nimport { history } from \"../../commons/helpers/history/history\";\nimport { toastSuccess } from \"../../commons/helpers/toastHelpers\";\nexport var getListAccOverTime = function getListAccOverTime(startDate, endDate, user_id, current_page) {\n  var params = {\n    from_date: startDate,\n    to_date: endDate,\n    user_id: user_id,\n    current_page: String(current_page)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get(\"/admin/user_overtimes\", {\n      params: params\n    }).then(function (res) {\n      dispatch({\n        type: ActionTypes.LIST_ACC_OVERTIME,\n        data: res.data\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setIsAllowedOverTime = function setIsAllowedOverTime(id, status) {\n  var body = {\n    confirmation_status: String(status)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.patch(\"/admin/user_overtimes/\".concat(id), body).then(function (res) {\n      dispatch({\n        type: ActionTypes.SET_ALLOWED_OVERTIME,\n        data: res.data\n      });\n      toastSuccess(\"Successful\");\n      history.push(\"/admin/user_overtimes\");\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/actions/overTime.js"],"names":["ActionTypes","axios","showLoading","hideLoading","history","toastSuccess","getListAccOverTime","startDate","endDate","user_id","current_page","params","from_date","to_date","String","dispatch","get","then","res","type","LIST_ACC_OVERTIME","data","error","console","log","setIsAllowedOverTime","id","status","body","confirmation_status","patch","SET_ALLOWED_OVERTIME","push"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,WAAzC;AACA,SAASC,OAAT,QAAwB,uCAAxB;AACA,SAASC,YAAT,QAA6B,oCAA7B;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,OAArB,EAA8BC,YAA9B,EAA+C;AAC/E,MAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEL,SADE;AAEbM,IAAAA,OAAO,EAAEL,OAFI;AAGbC,IAAAA,OAAO,EAAEA,OAHI;AAIbC,IAAAA,YAAY,EAAEI,MAAM,CAACJ,YAAD;AAJP,GAAf;AAMA,SAAO,UAAAK,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACb,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CACFe,GADH,CACO,uBADP,EACgC;AAAEL,MAAAA,MAAM,EAAEA;AAAV,KADhC,EAEGM,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEnB,WAAW,CAACoB,iBAApB;AAAuCC,QAAAA,IAAI,EAAEH,GAAG,CAACG;AAAjD,OAAD,CAAR;AACD,KAJH,WAKS,UAAAC,KAAK,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH,aAQW,YAAM;AACbP,MAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACD,KAVH;AAWD,GAbD;AAcD,CArBM;AAuBP,OAAO,IAAMsB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,EAAD,EAAKC,MAAL,EAAgB;AAClD,MAAMC,IAAI,GAAG;AACXC,IAAAA,mBAAmB,EAAEf,MAAM,CAACa,MAAD;AADhB,GAAb;AAGA,SAAO,UAAAZ,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACb,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CACF6B,KADH,iCACkCJ,EADlC,GACwCE,IADxC,EAEGX,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEnB,WAAW,CAAC+B,oBAApB;AAA0CV,QAAAA,IAAI,EAAEH,GAAG,CAACG;AAApD,OAAD,CAAR;AACAhB,MAAAA,YAAY,CAAC,YAAD,CAAZ;AACAD,MAAAA,OAAO,CAAC4B,IAAR,CAAa,uBAAb;AACD,KANH,WAOS,UAAAV,KAAK,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATH,aAUW,YAAM;AACbP,MAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACD,KAZH;AAaD,GAfD;AAgBD,CApBM","sourcesContent":["import * as ActionTypes from \"../const/account\";\nimport axios from \"axios\";\nimport { showLoading, hideLoading } from \"./loading\";\nimport { history } from \"../../commons/helpers/history/history\";\nimport { toastSuccess } from \"../../commons/helpers/toastHelpers\";\n\nexport const getListAccOverTime = (startDate, endDate, user_id, current_page) => {\n  const params = {\n    from_date: startDate,\n    to_date: endDate,\n    user_id: user_id,\n    current_page: String(current_page)\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .get(\"/admin/user_overtimes\", { params: params })\n      .then(res => {\n        dispatch({ type: ActionTypes.LIST_ACC_OVERTIME, data: res.data });\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        dispatch(hideLoading());\n      });\n  };\n};\n\nexport const setIsAllowedOverTime = (id, status) => {\n  const body = {\n    confirmation_status: String(status)\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .patch(`/admin/user_overtimes/${id}`, body)\n      .then(res => {\n        dispatch({ type: ActionTypes.SET_ALLOWED_OVERTIME, data: res.data });\n        toastSuccess(\"Successful\");\n        history.push(\"/admin/user_overtimes\");\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        dispatch(hideLoading());\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}