{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as uiType from '../const/ui';\nvar initialState = {\n  showLoading: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case uiType.SHOW_LOADING:\n      {\n        return _objectSpread({}, state, {\n          showLoading: true\n        });\n      }\n\n    case uiType.HIDE_LOADING:\n      {\n        return _objectSpread({}, state, {\n          showLoading: false\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/src/reducer/ui.js"],"names":["uiType","initialState","showLoading","reducer","state","action","type","SHOW_LOADING","HIDE_LOADING"],"mappings":";;;;;;AAAA,OAAO,KAAKA,MAAZ,MAAwB,aAAxB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;;AAGA,IAAMC,OAAO,GAAE,SAATA,OAAS,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,MAAM,CAACO,YAAZ;AAA0B;AACxB,iCACKH,KADL;AAEEF,UAAAA,WAAW,EAAE;AAFf;AAID;;AACD,SAAKF,MAAM,CAACQ,YAAZ;AAA0B;AACxB,iCACKJ,KADL;AAEEF,UAAAA,WAAW,EAAE;AAFf;AAID;;AACD;AACE,aAAOE,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import * as uiType from '../const/ui';\n\nconst initialState = {\n  showLoading: false,\n};\nconst reducer= (state = initialState, action) => {\n  switch (action.type) {\n    case uiType.SHOW_LOADING: {\n      return {\n        ...state,\n        showLoading: true,\n      };\n    }\n    case uiType.HIDE_LOADING: {\n      return {\n        ...state,\n        showLoading: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}