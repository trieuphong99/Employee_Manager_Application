{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar callBound = require('./callBound');\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar symToStr = callBound('Symbol.prototype.toString', true);\n\nvar getInferredName = require('./getInferredName');\n\nmodule.exports = function getSymbolDescription(symbol) {\n  if (!symToStr) {\n    throw new $SyntaxError('Symbols are not supported in this environment');\n  }\n\n  var str = symToStr(symbol); // will throw if not a symbol\n\n  if (getInferredName) {\n    var name = getInferredName(symbol);\n\n    if (name === '') {\n      return;\n    } // eslint-disable-next-line consistent-return\n\n\n    return name.slice(1, -1); // name.slice('['.length, -']'.length);\n  }\n\n  var desc = str.slice(7, -1); // str.slice('Symbol('.length, -')'.length);\n\n  if (desc) {\n    // eslint-disable-next-line consistent-return\n    return desc;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}