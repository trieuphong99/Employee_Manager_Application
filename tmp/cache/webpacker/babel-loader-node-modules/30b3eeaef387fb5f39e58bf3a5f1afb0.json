{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/timesheets/tabRequest/listRequest.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Time from \"../../../../commons/const/Time\";\nimport { getListRequestEditStaff } from \"../../../actions/timeSheet\";\nimport SortTarget from \"../../../../commons/components/sortTarget\";\nimport CustomPicker from \"../../../../commons/components/dateRangePicker/customPicker\";\nimport { pickDate } from \"../../../actions/dateRange\";\nimport DateRangePicker from \"../../dateRangePicker\";\nimport { Table, Badge } from \"reactstrap\";\nimport Pagination from '../../../../commons/components/pagination/index';\nimport EditRequest from \"./editRequestModal\";\n\nvar listRequest = function listRequest(props) {\n  var reduxStartDate = useSelector(function (state) {\n    return state.dateRange.startDate.format(Time.crossDMY);\n  });\n  var reduxEndDate = useSelector(function (state) {\n    return state.dateRange.endDate.format(Time.crossDMY);\n  });\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState(\"DESC\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sortType = _useState4[0],\n      setSortType = _useState4[1];\n\n  var _useState5 = useState(\"date\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sortField = _useState6[0],\n      setSortField = _useState6[1];\n\n  var dispatch = useDispatch();\n\n  var letSort = function letSort(field) {\n    setSortType(sortType === \"ASC\" ? \"DESC\" : \"ASC\");\n    setSortField(field);\n  };\n\n  useEffect(function () {\n    dispatch(getListRequestEditStaff(reduxStartDate, reduxEndDate, currentPage, sortType, sortField));\n  }, [reduxStartDate, reduxEndDate, currentPage, sortType, sortField]);\n  var listRequestStaff = useSelector(function (state) {\n    return state.timeSheet.listRequest;\n  });\n  var statusColor = {\n    Confirmed: \"success\",\n    Rejected: \"danger\",\n    Waiting: \"warning\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tables-saffs-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"saffs-search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"times-select\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DateRangePicker, {\n    blockRange: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(CustomPicker, {\n    pickDate: pickDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SortTarget, {\n    type: \"date\",\n    value: \"Date\",\n    sortType: sortType,\n    sortField: sortField,\n    letSort: letSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Checkin\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"reason\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Reason inlate\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Checkout\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"reason\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Reason leave early\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"reason\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Reason request\"), /*#__PURE__*/React.createElement(SortTarget, {\n    type: \"confirmation_status\",\n    value: \"Confirm\",\n    sortType: sortType,\n    sortField: sortField,\n    letSort: letSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, listRequestStaff.data === undefined || listRequestStaff.lenght === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red',\n      fontSize: '80%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, \"No data to display\"))) : _.map(listRequestStaff.data, function (item, i) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i++,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, item.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, item.start_at), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"reason\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, item.reason_in), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, item.end_at), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"reason\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, item.reason_out), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"reason\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, item.reason), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      href: \"#\",\n      color: statusColor[item.confirmation_status],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, item.confirmation_status)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, item.confirmation_status === \"Waiting\" && /*#__PURE__*/React.createElement(EditRequest, {\n      data: item,\n      id: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    })));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    totalPage: listRequestStaff.total_page,\n    pageChange: function pageChange(e) {\n      return setCurrentPage(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default listRequest;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/timesheets/tabRequest/listRequest.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Time","getListRequestEditStaff","SortTarget","CustomPicker","pickDate","DateRangePicker","Table","Badge","Pagination","EditRequest","listRequest","props","reduxStartDate","state","dateRange","startDate","format","crossDMY","reduxEndDate","endDate","currentPage","setCurrentPage","sortType","setSortType","sortField","setSortField","dispatch","letSort","field","listRequestStaff","timeSheet","statusColor","Confirmed","Rejected","Waiting","data","undefined","lenght","color","fontSize","_","map","item","i","date","start_at","reason_in","end_at","reason_out","reason","confirmation_status","id","total_page","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Time from \"../../../../commons/const/Time\";\nimport { getListRequestEditStaff } from \"../../../actions/timeSheet\";\nimport SortTarget from \"../../../../commons/components/sortTarget\";\nimport CustomPicker from \"../../../../commons/components/dateRangePicker/customPicker\";\nimport { pickDate } from \"../../../actions/dateRange\";\nimport DateRangePicker from \"../../dateRangePicker\";\nimport { Table, Badge } from \"reactstrap\";\nimport Pagination from '../../../../commons/components/pagination/index';\nimport EditRequest from \"./editRequestModal\";\n\nconst listRequest = (props) => {\n  const reduxStartDate = useSelector((state) =>\n    state.dateRange.startDate.format(Time.crossDMY)\n  );\n  const reduxEndDate = useSelector((state) =>\n    state.dateRange.endDate.format(Time.crossDMY)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortType, setSortType] = useState(\"DESC\");\n  const [sortField, setSortField] = useState(\"date\");\n  const dispatch = useDispatch();\n  const letSort = (field) => {\n    setSortType(sortType === \"ASC\" ? \"DESC\" : \"ASC\");\n    setSortField(field);\n  };\n  useEffect(() => {\n    dispatch(\n      getListRequestEditStaff(\n        reduxStartDate,\n        reduxEndDate,\n        currentPage,\n        sortType,\n        sortField\n      )\n    );\n  }, [reduxStartDate, reduxEndDate, currentPage, sortType, sortField]);\n  const listRequestStaff = useSelector((state) => state.timeSheet.listRequest);\n  const statusColor = { Confirmed: \"success\", Rejected: \"danger\", Waiting: \"warning\" }\n  return (\n    <div className=\"tables-saffs-wrapper\">\n      <div className=\"saffs-search\">\n        <div className=\"times-select\">\n          <DateRangePicker blockRange=\"none\" />\n        </div>\n        <CustomPicker pickDate={pickDate} />\n      </div>\n      <div>\n        <Table hover>\n          <thead>\n            <tr>\n              <SortTarget\n                type=\"date\"\n                value=\"Date\"\n                sortType={sortType}\n                sortField={sortField}\n                letSort={letSort}\n              />\n              <th>Checkin</th>\n              <th className=\"reason\">Reason inlate</th>\n              <th>Checkout</th>\n              <th className=\"reason\">Reason leave early</th>\n              <th className=\"reason\">Reason request</th>\n              <SortTarget\n                type=\"confirmation_status\"\n                value=\"Confirm\"\n                sortType={sortType}\n                sortField={sortField}\n                letSort={letSort}\n              />\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {listRequestStaff.data === undefined || listRequestStaff.lenght === 0 ?\n              <tr>\n                <td colSpan={7}><p style={{ color: 'red', fontSize: '80%' }}>No data to display</p></td>\n              </tr>\n              :\n              _.map(listRequestStaff.data, (item, i) => {\n                return (\n                  <tr key={i++}>\n                    <td>{item.date}</td>\n                    <td>{item.start_at}</td>\n                    <td className=\"reason\">{item.reason_in}</td>\n                    <td>{item.end_at}</td>\n                    <td className=\"reason\">{item.reason_out}</td>\n                    <td className=\"reason\">{item.reason}</td>\n                    <td><Badge href=\"#\" color={statusColor[item.confirmation_status]}>{item.confirmation_status}</Badge></td>\n                    <td>\n                      {item.confirmation_status === \"Waiting\" &&\n                        <EditRequest data={item} id={item.id} />\n                      }\n                    </td>\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </Table>\n      </div>\n      <div>\n        <Pagination totalPage={listRequestStaff.total_page} pageChange={e => setCurrentPage(e)} />\n      </div>\n    </div>\n  );\n};\nexport default listRequest;\n"]},"metadata":{},"sourceType":"module"}