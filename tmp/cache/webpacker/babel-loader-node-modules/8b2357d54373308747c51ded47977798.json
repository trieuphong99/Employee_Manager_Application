{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _enzymeShallowEqual = _interopRequireDefault(require(\"enzyme-shallow-equal\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _reactMomentProptypes = _interopRequireDefault(require(\"react-moment-proptypes\"));\n\nvar _airbnbPropTypes = require(\"airbnb-prop-types\");\n\nvar _OpenDirectionShape = _interopRequireDefault(require(\"../shapes/OpenDirectionShape\"));\n\nvar _defaultPhrases = require(\"../defaultPhrases\");\n\nvar _getPhrasePropTypes = _interopRequireDefault(require(\"../utils/getPhrasePropTypes\"));\n\nvar _SingleDatePickerInput = _interopRequireDefault(require(\"./SingleDatePickerInput\"));\n\nvar _IconPositionShape = _interopRequireDefault(require(\"../shapes/IconPositionShape\"));\n\nvar _DisabledShape = _interopRequireDefault(require(\"../shapes/DisabledShape\"));\n\nvar _toMomentObject = _interopRequireDefault(require(\"../utils/toMomentObject\"));\n\nvar _toLocalizedDateString = _interopRequireDefault(require(\"../utils/toLocalizedDateString\"));\n\nvar _isInclusivelyAfterDay = _interopRequireDefault(require(\"../utils/isInclusivelyAfterDay\"));\n\nvar _constants = require(\"../constants\");\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? (0, _airbnbPropTypes.forbidExtraProps)({\n  children: _propTypes[\"default\"].node,\n  date: _reactMomentProptypes[\"default\"].momentObj,\n  onDateChange: _propTypes[\"default\"].func.isRequired,\n  focused: _propTypes[\"default\"].bool,\n  onFocusChange: _propTypes[\"default\"].func.isRequired,\n  id: _propTypes[\"default\"].string.isRequired,\n  placeholder: _propTypes[\"default\"].string,\n  ariaLabel: _propTypes[\"default\"].string,\n  screenReaderMessage: _propTypes[\"default\"].string,\n  showClearDate: _propTypes[\"default\"].bool,\n  showCaret: _propTypes[\"default\"].bool,\n  showDefaultInputIcon: _propTypes[\"default\"].bool,\n  inputIconPosition: _IconPositionShape[\"default\"],\n  disabled: _DisabledShape[\"default\"],\n  required: _propTypes[\"default\"].bool,\n  readOnly: _propTypes[\"default\"].bool,\n  openDirection: _OpenDirectionShape[\"default\"],\n  noBorder: _propTypes[\"default\"].bool,\n  block: _propTypes[\"default\"].bool,\n  small: _propTypes[\"default\"].bool,\n  regular: _propTypes[\"default\"].bool,\n  verticalSpacing: _airbnbPropTypes.nonNegativeInteger,\n  keepOpenOnDateSelect: _propTypes[\"default\"].bool,\n  reopenPickerOnClearDate: _propTypes[\"default\"].bool,\n  isOutsideRange: _propTypes[\"default\"].func,\n  displayFormat: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].func]),\n  onClose: _propTypes[\"default\"].func,\n  onKeyDownArrowDown: _propTypes[\"default\"].func,\n  onKeyDownQuestionMark: _propTypes[\"default\"].func,\n  customInputIcon: _propTypes[\"default\"].node,\n  customCloseIcon: _propTypes[\"default\"].node,\n  // accessibility\n  isFocused: _propTypes[\"default\"].bool,\n  // i18n\n  phrases: _propTypes[\"default\"].shape((0, _getPhrasePropTypes[\"default\"])(_defaultPhrases.SingleDatePickerInputPhrases)),\n  isRTL: _propTypes[\"default\"].bool\n}) : {};\nvar defaultProps = {\n  children: null,\n  date: null,\n  focused: false,\n  placeholder: '',\n  ariaLabel: undefined,\n  screenReaderMessage: 'Date',\n  showClearDate: false,\n  showCaret: false,\n  showDefaultInputIcon: false,\n  inputIconPosition: _constants.ICON_BEFORE_POSITION,\n  disabled: false,\n  required: false,\n  readOnly: false,\n  openDirection: _constants.OPEN_DOWN,\n  noBorder: false,\n  block: false,\n  small: false,\n  regular: false,\n  verticalSpacing: undefined,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDate: false,\n  isOutsideRange: function isOutsideRange(day) {\n    return !(0, _isInclusivelyAfterDay[\"default\"])(day, (0, _moment[\"default\"])());\n  },\n  displayFormat: function displayFormat() {\n    return _moment[\"default\"].localeData().longDateFormat('L');\n  },\n  onClose: function onClose() {},\n  onKeyDownArrowDown: function onKeyDownArrowDown() {},\n  onKeyDownQuestionMark: function onKeyDownQuestionMark() {},\n  customInputIcon: null,\n  customCloseIcon: null,\n  // accessibility\n  isFocused: false,\n  // i18n\n  phrases: _defaultPhrases.SingleDatePickerInputPhrases,\n  isRTL: false\n};\n\nvar SingleDatePickerInputController = /*#__PURE__*/function (_ref) {\n  (0, _inheritsLoose2[\"default\"])(SingleDatePickerInputController, _ref);\n  var _proto = SingleDatePickerInputController.prototype;\n\n  _proto[!_react[\"default\"].PureComponent && \"shouldComponentUpdate\"] = function (nextProps, nextState) {\n    return !(0, _enzymeShallowEqual[\"default\"])(this.props, nextProps) || !(0, _enzymeShallowEqual[\"default\"])(this.state, nextState);\n  };\n\n  function SingleDatePickerInputController(props) {\n    var _this;\n\n    _this = _ref.call(this, props) || this;\n    _this.onChange = _this.onChange.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.onFocus = _this.onFocus.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.onClearFocus = _this.onClearFocus.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.clearDate = _this.clearDate.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    return _this;\n  }\n\n  _proto.onChange = function onChange(dateString) {\n    var _this$props = this.props,\n        isOutsideRange = _this$props.isOutsideRange,\n        keepOpenOnDateSelect = _this$props.keepOpenOnDateSelect,\n        onDateChange = _this$props.onDateChange,\n        onFocusChange = _this$props.onFocusChange,\n        onClose = _this$props.onClose;\n    var newDate = (0, _toMomentObject[\"default\"])(dateString, this.getDisplayFormat());\n    var isValid = newDate && !isOutsideRange(newDate);\n\n    if (isValid) {\n      onDateChange(newDate);\n\n      if (!keepOpenOnDateSelect) {\n        onFocusChange({\n          focused: false\n        });\n        onClose({\n          date: newDate\n        });\n      }\n    } else {\n      onDateChange(null);\n    }\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this$props2 = this.props,\n        onFocusChange = _this$props2.onFocusChange,\n        disabled = _this$props2.disabled;\n\n    if (!disabled) {\n      onFocusChange({\n        focused: true\n      });\n    }\n  };\n\n  _proto.onClearFocus = function onClearFocus() {\n    var _this$props3 = this.props,\n        focused = _this$props3.focused,\n        onFocusChange = _this$props3.onFocusChange,\n        onClose = _this$props3.onClose,\n        date = _this$props3.date;\n    if (!focused) return;\n    onFocusChange({\n      focused: false\n    });\n    onClose({\n      date: date\n    });\n  };\n\n  _proto.getDisplayFormat = function getDisplayFormat() {\n    var displayFormat = this.props.displayFormat;\n    return typeof displayFormat === 'string' ? displayFormat : displayFormat();\n  };\n\n  _proto.getDateString = function getDateString(date) {\n    var displayFormat = this.getDisplayFormat();\n\n    if (date && displayFormat) {\n      return date && date.format(displayFormat);\n    }\n\n    return (0, _toLocalizedDateString[\"default\"])(date);\n  };\n\n  _proto.clearDate = function clearDate() {\n    var _this$props4 = this.props,\n        onDateChange = _this$props4.onDateChange,\n        reopenPickerOnClearDate = _this$props4.reopenPickerOnClearDate,\n        onFocusChange = _this$props4.onFocusChange;\n    onDateChange(null);\n\n    if (reopenPickerOnClearDate) {\n      onFocusChange({\n        focused: true\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        children = _this$props5.children,\n        id = _this$props5.id,\n        placeholder = _this$props5.placeholder,\n        ariaLabel = _this$props5.ariaLabel,\n        disabled = _this$props5.disabled,\n        focused = _this$props5.focused,\n        isFocused = _this$props5.isFocused,\n        required = _this$props5.required,\n        readOnly = _this$props5.readOnly,\n        openDirection = _this$props5.openDirection,\n        showClearDate = _this$props5.showClearDate,\n        showCaret = _this$props5.showCaret,\n        showDefaultInputIcon = _this$props5.showDefaultInputIcon,\n        inputIconPosition = _this$props5.inputIconPosition,\n        customCloseIcon = _this$props5.customCloseIcon,\n        customInputIcon = _this$props5.customInputIcon,\n        date = _this$props5.date,\n        phrases = _this$props5.phrases,\n        onKeyDownArrowDown = _this$props5.onKeyDownArrowDown,\n        onKeyDownQuestionMark = _this$props5.onKeyDownQuestionMark,\n        screenReaderMessage = _this$props5.screenReaderMessage,\n        isRTL = _this$props5.isRTL,\n        noBorder = _this$props5.noBorder,\n        block = _this$props5.block,\n        small = _this$props5.small,\n        regular = _this$props5.regular,\n        verticalSpacing = _this$props5.verticalSpacing;\n    var displayValue = this.getDateString(date);\n    return _react[\"default\"].createElement(_SingleDatePickerInput[\"default\"], {\n      id: id,\n      placeholder: placeholder,\n      ariaLabel: ariaLabel,\n      focused: focused,\n      isFocused: isFocused,\n      disabled: disabled,\n      required: required,\n      readOnly: readOnly,\n      openDirection: openDirection,\n      showCaret: showCaret,\n      onClearDate: this.clearDate,\n      showClearDate: showClearDate,\n      showDefaultInputIcon: showDefaultInputIcon,\n      inputIconPosition: inputIconPosition,\n      customCloseIcon: customCloseIcon,\n      customInputIcon: customInputIcon,\n      displayValue: displayValue,\n      onChange: this.onChange,\n      onFocus: this.onFocus,\n      onKeyDownShiftTab: this.onClearFocus,\n      onKeyDownArrowDown: onKeyDownArrowDown,\n      onKeyDownQuestionMark: onKeyDownQuestionMark,\n      screenReaderMessage: screenReaderMessage,\n      phrases: phrases,\n      isRTL: isRTL,\n      noBorder: noBorder,\n      block: block,\n      small: small,\n      regular: regular,\n      verticalSpacing: verticalSpacing\n    }, children);\n  };\n\n  return SingleDatePickerInputController;\n}(_react[\"default\"].PureComponent || _react[\"default\"].Component);\n\nexports[\"default\"] = SingleDatePickerInputController;\nSingleDatePickerInputController.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nSingleDatePickerInputController.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}