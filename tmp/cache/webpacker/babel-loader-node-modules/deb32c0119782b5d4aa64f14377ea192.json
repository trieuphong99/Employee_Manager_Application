{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/commons/components/toolTipItem/toolTipItem.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport { Tooltip } from 'reactstrap';\nexport var TooltipItem = function TooltipItem(props) {\n  var item = props.item;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenTool = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var openTooltip = function openTooltip() {\n    return setIsOpen(!isOpenTool);\n  };\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    id: \"reason-\" + item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, item.reason.substring(0, 8), \"...\"), React.createElement(Tooltip, {\n    style: {\n      backgroundColor: '#FFFFFF',\n      color: '#000000'\n    },\n    placement: \"bottom\",\n    isOpen: isOpenTool,\n    target: \"reason-\" + item.id,\n    toggle: openTooltip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, item.reason));\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/commons/components/toolTipItem/toolTipItem.js"],"names":["React","useState","Tooltip","TooltipItem","props","item","isOpenTool","setIsOpen","openTooltip","id","reason","substring","backgroundColor","color"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,YAAtB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MAC7BC,IAD6B,GACrBD,KADqB,CAC7BC,IAD6B;;AAAA,kBAEJJ,QAAQ,CAAC,KAAD,CAFJ;AAAA;AAAA,MAE7BK,UAF6B;AAAA,MAEjBC,SAFiB;;AAGpC,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,SAAS,CAAC,CAACD,UAAF,CAAf;AAAA,GAApB;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,EAAE,EAAE,YAAYD,IAAI,CAACI,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,MAAL,CAAYC,SAAZ,CAAsB,CAAtB,EAAwB,CAAxB,CADH,QADF,EAIE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE,SAAlB;AAA6BC,MAAAA,KAAK,EAAE;AAApC,KAAhB;AAAgE,IAAA,SAAS,EAAC,QAA1E;AAAmF,IAAA,MAAM,EAAEP,UAA3F;AAAuG,IAAA,MAAM,EAAE,YAAYD,IAAI,CAACI,EAAhI;AAAoI,IAAA,MAAM,EAAED,WAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACK,MADR,CAJF,CADF;AAUD,CAdM","sourcesContent":["import React, {useState} from 'react';\nimport {Tooltip} from 'reactstrap';\n\nexport const TooltipItem = (props) => {\n  const {item} = props;\n  const [isOpenTool, setIsOpen] = useState(false);\n  const openTooltip = () => setIsOpen(!isOpenTool);\n  return (\n    <span>\n      <p id={\"reason-\" + item.id}>\n        {item.reason.substring(0,8)}...\n      </p>\n      <Tooltip style={{backgroundColor: '#FFFFFF', color: '#000000'}} placement=\"bottom\" isOpen={isOpenTool} target={\"reason-\" + item.id} toggle={openTooltip}>\n        {item.reason}\n      </Tooltip>\n    </span>\n  )\n}"]},"metadata":{},"sourceType":"module"}