{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports[\"default\"] = ReactLiveClock;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _momentTimezone = require('moment-timezone');\n\nvar _momentTimezone2 = _interopRequireDefault(_momentTimezone);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar BASE_UNIT = 'milliseconds';\n\nfunction ReactLiveClock(props) {\n  var formatTime = function formatTime(time) {\n    var filter = props.filter,\n        format = props.format,\n        timezone = props.timezone;\n\n    if (timezone) {\n      time.tz(timezone);\n    }\n\n    var formattedTime = time.format(format);\n    var filteredTime = filter(formattedTime);\n    return filteredTime;\n  };\n\n  var date = props.date || props.children || null;\n  var timestamp = (0, _momentTimezone2[\"default\"])();\n  var InitialBaseTime = date ? (0, _momentTimezone2[\"default\"])(new Date(date).getTime()) : timestamp;\n  var realTime = !date;\n  var now = InitialBaseTime;\n  var baseTime = InitialBaseTime;\n  var startTime = timestamp;\n\n  var _useState = (0, _react.useState)(formatTime(now)),\n      _useState2 = _slicedToArray(_useState, 2),\n      formattedString = _useState2[0],\n      setFormattedString = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tickTimer = _useState4[0],\n      setTickTimer = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mounted = _useState6[0],\n      setMounted = _useState6[1];\n\n  var childProps = Object.keys(props).filter(function (key) {\n    return !['date', 'interval', 'ticking', 'filter', 'format', 'timezone'].includes(key);\n  }).reduce(function (acc, key) {\n    acc[key] = props[key];\n    return acc;\n  }, {});\n\n  var updateClock = function updateClock() {\n    var onChange = props.onChange;\n    var newNow = void 0;\n\n    if (realTime) {\n      newNow = (0, _momentTimezone2[\"default\"])();\n    } else {\n      var newTime = (0, _momentTimezone2[\"default\"])();\n      var diff = newTime.diff(startTime, BASE_UNIT);\n      newNow = baseTime.clone().add(diff, BASE_UNIT);\n    }\n\n    var newFormattedTime = formatTime(newNow);\n    var formattedTime = formatTime(now);\n\n    if (newFormattedTime !== formattedTime) {\n      onChange({\n        moment: newNow,\n        output: formattedTime,\n        previousOutput: formattedString\n      });\n      setFormattedString(newFormattedTime);\n    }\n\n    now = newNow;\n  };\n\n  (0, _react.useEffect)(function () {\n    var ticking = props.ticking,\n        interval = props.interval;\n\n    if (ticking || interval) {\n      if (!mounted) {\n        var intervalId = setInterval(function () {\n          return updateClock();\n        }, interval);\n        setTickTimer(intervalId);\n        setMounted(true);\n      }\n    }\n\n    return function () {\n      return tickTimer && clearInterval(tickTimer);\n    };\n  }, []);\n  return _react2[\"default\"].createElement('time', childProps, formattedString);\n}\n\nReactLiveClock.propTypes = {\n  children: _propTypes2[\"default\"].string,\n  date: _propTypes2[\"default\"].oneOfType([_propTypes2[\"default\"].number, _propTypes2[\"default\"].string]),\n  format: _propTypes2[\"default\"].string,\n  interval: _propTypes2[\"default\"].number,\n  ticking: _propTypes2[\"default\"].bool,\n  timezone: _propTypes2[\"default\"].string,\n  filter: _propTypes2[\"default\"].func,\n  onChange: _propTypes2[\"default\"].func\n};\nReactLiveClock.defaultProps = {\n  date: null,\n  format: 'HH:mm',\n  interval: 1000,\n  ticking: false,\n  timezone: null,\n  filter: function filter(date) {\n    return date;\n  },\n  onChange: function onChange(date) {\n    return date;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}