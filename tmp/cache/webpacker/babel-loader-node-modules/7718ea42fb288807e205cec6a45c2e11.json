{"ast":null,"code":"import * as Yup from 'yup';\nexport var commonValidationSchema = {\n  email: Yup.string().email().required(),\n  id_card: Yup.string().min(9).max(12).matches(/^[0-9][^#&<>\\~;$^%{}?a-zA-Z]{8,11}$/, \"Id card cannot contain special characters\").required(),\n  joining_date: Yup.string().required(),\n  official_date: Yup.string().required(),\n  contract_type: Yup.string().required(),\n  position: Yup.string().required(),\n  status: Yup.string().required(),\n  roles: Yup.string().required(),\n  name: Yup.string().min(10).max(30).required(),\n  phone_number: Yup.string().min(10).max(11).matches(/^[0-9][^#&<>\\~;$^%{}?a-zA-Z]{9,10}$/, \"Phone number cannot contain special characters\").required(),\n  address: Yup.string().max(100).required(),\n  sex: Yup.string().required(),\n  date_of_birth: Yup.string().required()\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/components/accounts/accountForm/validate.js"],"names":["Yup","commonValidationSchema","email","string","required","id_card","min","max","matches","joining_date","official_date","contract_type","position","status","roles","name","phone_number","address","sex","date_of_birth"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,IAAMC,sBAAsB,GAAG;AACpCC,EAAAA,KAAK,EAAEF,GAAG,CAACG,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,EAD6B;AAEpCC,EAAAA,OAAO,EAAEL,GAAG,CAACG,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,OAA5B,CAAoC,qCAApC,EAA2E,2CAA3E,EAAwHJ,QAAxH,EAF2B;AAGpCK,EAAAA,YAAY,EAAET,GAAG,CAACG,MAAJ,GAAaC,QAAb,EAHsB;AAIpCM,EAAAA,aAAa,EAAEV,GAAG,CAACG,MAAJ,GAAaC,QAAb,EAJqB;AAKpCO,EAAAA,aAAa,EAAEX,GAAG,CAACG,MAAJ,GAAaC,QAAb,EALqB;AAMpCQ,EAAAA,QAAQ,EAAEZ,GAAG,CAACG,MAAJ,GAAaC,QAAb,EAN0B;AAOpCS,EAAAA,MAAM,EAAEb,GAAG,CAACG,MAAJ,GAAaC,QAAb,EAP4B;AAQpCU,EAAAA,KAAK,EAAEd,GAAG,CAACG,MAAJ,GAAaC,QAAb,EAR6B;AASpCW,EAAAA,IAAI,EAAEf,GAAG,CAACG,MAAJ,GAAaG,GAAb,CAAiB,EAAjB,EAAqBC,GAArB,CAAyB,EAAzB,EAA6BH,QAA7B,EAT8B;AAUpCY,EAAAA,YAAY,EAAEhB,GAAG,CAACG,MAAJ,GAAaG,GAAb,CAAiB,EAAjB,EAAqBC,GAArB,CAAyB,EAAzB,EAA6BC,OAA7B,CAAqC,qCAArC,EAA4E,gDAA5E,EAA8HJ,QAA9H,EAVsB;AAWpCa,EAAAA,OAAO,EAAEjB,GAAG,CAACG,MAAJ,GAAaI,GAAb,CAAiB,GAAjB,EAAsBH,QAAtB,EAX2B;AAYpCc,EAAAA,GAAG,EAAElB,GAAG,CAACG,MAAJ,GAAaC,QAAb,EAZ+B;AAapCe,EAAAA,aAAa,EAAEnB,GAAG,CAACG,MAAJ,GAAaC,QAAb;AAbqB,CAA/B","sourcesContent":["import * as Yup from 'yup';\n\nexport const commonValidationSchema = {\n  email: Yup.string().email().required(),\n  id_card: Yup.string().min(9).max(12).matches(/^[0-9][^#&<>\\~;$^%{}?a-zA-Z]{8,11}$/, \"Id card cannot contain special characters\").required(),\n  joining_date: Yup.string().required(),\n  official_date: Yup.string().required(),\n  contract_type: Yup.string().required(),\n  position: Yup.string().required(),\n  status: Yup.string().required(),\n  roles: Yup.string().required(),\n  name: Yup.string().min(10).max(30).required(),\n  phone_number: Yup.string().min(10).max(11).matches(/^[0-9][^#&<>\\~;$^%{}?a-zA-Z]{9,10}$/, \"Phone number cannot contain special characters\").required(),\n  address: Yup.string().max(100).required(),\n  sex: Yup.string().required(),\n  date_of_birth: Yup.string().required(),\n}"]},"metadata":{},"sourceType":"module"}