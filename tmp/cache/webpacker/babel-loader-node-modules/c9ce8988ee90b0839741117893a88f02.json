{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport FormData from 'form-data';\nimport { toastError, toastSuccess } from '../../commons/helpers/toastHelpers/';\nimport { hideLoading, showLoading } from './loading';\nimport _ from 'lodash';\nexport var getReport = function getReport(id, setInitialValues) {\n  var url = id !== null ? \"/reports/\".concat(id) : \"/reports/new\";\n  axios.get(url).then(function (res) {\n    var _res$data = res.data,\n        users_list = _res$data.users_list,\n        channels_list = _res$data.channels_list;\n    var _res$data$report_seri = res.data.report_serializer,\n        report_message = _res$data$report_seri.report_message,\n        attachments = _res$data$report_seri.attachments,\n        send_to = _res$data$report_seri.send_to;\n\n    var channels = _.map(channels_list, function (o) {\n      return {\n        value: o.channel_code,\n        label: o.channel_name\n      };\n    });\n\n    var send_to_channels = _.map(send_to, function (o) {\n      return {\n        value: o.channel_code,\n        label: o.channel_name\n      };\n    });\n\n    setInitialValues({\n      report_message: report_message,\n      attachments: attachments,\n      users: users_list,\n      channels: channels,\n      send_to: send_to_channels\n    });\n  })[\"catch\"](function (error) {\n    toastError(error.response.data);\n  });\n};\nexport var postFile = function postFile(id, formData, send_to) {\n  formData.append('report_id', id);\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios({\n      url: '/attachments',\n      method: 'post',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      data: formData\n    }).then(function (res) {\n      toastSuccess('Successful!');\n    })[\"catch\"](function (error) {\n      toastError(error.response.data);\n    })[\"finally\"](function () {\n      formData[\"delete\"]('report_id');\n      formData[\"delete\"]('attachments[]');\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var putFile = function putFile(id, formData, send_to) {\n  formData.append('report_id', id);\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios({\n      url: '/attachments/update',\n      method: 'post',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      data: formData\n    }).then(function (res) {\n      toastSuccess('Successful!');\n    })[\"catch\"](function (error) {\n      toastError(error.response.data);\n    })[\"finally\"](function () {\n      formData[\"delete\"]('report_id');\n      formData[\"delete\"]('delete_ids[]');\n      formData[\"delete\"]('attachments[]');\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var postReport = function postReport(timesheet_id, formData, reload, data) {\n  var body = _objectSpread({\n    timesheet_id: timesheet_id\n  }, data);\n\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.post(\"/reports\", body).then(function (res) {\n      var id = res.data.id;\n      formData.get('attachments[]') !== null ? dispatch(postFile(id, formData, data.send_to)) : toastSuccess('Successful!');\n    })[\"catch\"](function (error) {\n      toastError(error.response.data);\n    })[\"finally\"](function () {\n      // update report_id in timesheets\n      reload();\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var updateReport = function updateReport(report_id, formData, data) {\n  var body = _objectSpread({}, data);\n\n  return function (dispatch) {\n    dispatch(showLoading());\n    return axios.put(\"/reports/\".concat(report_id), body).then(function (res) {\n      var _res$data2 = res.data,\n          id = _res$data2.id,\n          attachments = _res$data2.attachments;\n      formData.get('attachments[]') !== null || formData.get('delete_ids[]') !== null ? _.isEqual(attachments, []) ? dispatch(postFile(id, formData, data.send_to)) : dispatch(putFile(id, formData, data.send_to)) : toastSuccess('Successful!');\n    })[\"catch\"](function (error) {\n      toastError(error.response.data);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/actions/report.js"],"names":["axios","FormData","toastError","toastSuccess","hideLoading","showLoading","_","getReport","id","setInitialValues","url","get","then","res","data","users_list","channels_list","report_serializer","report_message","attachments","send_to","channels","map","o","value","channel_code","label","channel_name","send_to_channels","users","error","response","postFile","formData","append","dispatch","method","headers","putFile","postReport","timesheet_id","reload","body","post","updateReport","report_id","put","isEqual"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport FormData from 'form-data';\nimport { toastError, toastSuccess } from '../../commons/helpers/toastHelpers/';\nimport { hideLoading, showLoading } from './loading';\nimport _ from 'lodash';\n\nexport const getReport = (id, setInitialValues) => {\n  const url = id !== null ? `/reports/${id}` : `/reports/new`;\n  axios\n    .get(url)\n    .then((res) => {\n      const { users_list, channels_list } = res.data;\n      const {\n        report_message,\n        attachments,\n        send_to,\n      } = res.data.report_serializer;\n      const channels = _.map(channels_list, (o) => ({\n        value: o.channel_code,\n        label: o.channel_name,\n      }));\n      const send_to_channels = _.map(send_to, (o) => ({\n        value: o.channel_code,\n        label: o.channel_name,\n      }));\n      setInitialValues({\n        report_message,\n        attachments,\n        users: users_list,\n        channels,\n        send_to: send_to_channels,\n      });\n    })\n    .catch(function (error) {\n      toastError(error.response.data);\n    });\n};\n\nexport const postFile = (id, formData, send_to) => {\n  formData.append('report_id', id);\n  return (dispatch) => {\n    dispatch(showLoading());\n    axios({\n      url: '/attachments',\n      method: 'post',\n      headers: { 'Content-Type': 'multipart/form-data' },\n      data: formData,\n    })\n      .then((res) => {\n        toastSuccess('Successful!');\n      })\n      .catch(function (error) {\n        toastError(error.response.data);\n      })\n      .finally(function () {\n        formData.delete('report_id');\n        formData.delete('attachments[]');\n        dispatch(hideLoading());\n      });\n  };\n};\n\nexport const putFile = (id, formData, send_to) => {\n  formData.append('report_id', id);\n  return (dispatch) => {\n    dispatch(showLoading());\n    axios({\n      url: '/attachments/update',\n      method: 'post',\n      headers: { 'Content-Type': 'multipart/form-data' },\n      data: formData,\n    })\n      .then((res) => {\n        toastSuccess('Successful!');\n      })\n      .catch(function (error) {\n        toastError(error.response.data);\n      })\n      .finally(function () {\n        formData.delete('report_id');\n        formData.delete('delete_ids[]');\n        formData.delete('attachments[]');\n        dispatch(hideLoading());\n      });\n  };\n};\n\nexport const postReport = (timesheet_id, formData, reload, data) => {\n  const body = {\n    timesheet_id,\n    ...data,\n  };\n  return (dispatch) => {\n    dispatch(showLoading());\n    axios\n      .post(`/reports`, body)\n      .then((res) => {\n        const { id } = res.data;\n        formData.get('attachments[]') !== null\n          ? dispatch(postFile(id, formData, data.send_to))\n          : toastSuccess('Successful!');\n      })\n      .catch(function (error) {\n        toastError(error.response.data);\n      })\n      .finally(function () {\n        // update report_id in timesheets\n        reload();\n        dispatch(hideLoading());\n      });\n  };\n};\n\nexport const updateReport = (report_id, formData, data) => {\n  const body = {\n    ...data,\n  };\n  return (dispatch) => {\n    dispatch(showLoading());\n    return axios\n      .put(`/reports/${report_id}`, body)\n      .then((res) => {\n        const { id, attachments } = res.data;\n        formData.get('attachments[]') !== null ||\n        formData.get('delete_ids[]') !== null\n          ? _.isEqual(attachments, [])\n            ? dispatch(postFile(id, formData, data.send_to))\n            : dispatch(putFile(id, formData, data.send_to))\n          : toastSuccess('Successful!');\n      })\n      .catch(function (error) {\n        toastError(error.response.data);\n      })\n      .finally(function () {\n        dispatch(hideLoading());\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}