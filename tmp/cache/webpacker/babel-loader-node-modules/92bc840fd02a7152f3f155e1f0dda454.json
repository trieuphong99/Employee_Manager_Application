{"ast":null,"code":"import actionTypes from \"../../commons/const/actionTypes\";\nimport axios from \"axios\";\nimport { showLoading } from \"./loading\";\nimport { hideLoading } from \"./loading\";\nimport { toastError, toastSuccess } from \"../../commons/helpers/toastHelpers\";\nimport moment from 'moment';\nimport Time from '../../commons/const/Time'; // import fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n// mock.onPost('/check_in').reply(200);\n// mock.onPost('/check_out').reply(200);\n// mock.onPost('/staff/report_late_early').reply(200);\n// mock.onGet('/timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onPost('/offsets').reply(200);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/dayoffs').reply(200, fakeData.currentuserdayoff)\n// mock.onGet('/overtimes').reply(200, fakeData.currentuserovertime)\n// mock.onGet('/reports/10').reply(200, fakeData.report)\n\nexport var getStaffTimeSheet = function getStaffTimeSheet(data) {\n  var params = {\n    from_date: data.startTime,\n    to_date: data.endTime,\n    current_page: String(data.currentPage),\n    sort_type: data.sortType,\n    sort_field: data.sortField,\n    filter_type: data.type\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get(\"/timesheets\", {\n      params: params\n    }).then(function (res) {\n      dispatch(setTimeSheet(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error.data);\n      toastError(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var offSet = function offSet(data) {\n  var body = {\n    date: moment(data.date).format(Time.crossDMY),\n    for_date: moment(data.for_date).format(Time.crossDMY)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.post(\"/compensations\", body).then(function (res) {\n      toastSuccess(\"Successful!\");\n    })[\"catch\"](function (error) {\n      toastError(error.response.data);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n      data.reload();\n    });\n  };\n};\nexport var editOffSet = function editOffSet(data) {\n  var body = {\n    date: moment(data.date).format(Time.crossDMY),\n    for_date: moment(data.for_date).format(Time.crossDMY)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.put(\"/compensations/\".concat(data.id), body).then(function (res) {\n      toastSuccess(\"Successful!\");\n    })[\"catch\"](function (error) {\n      toastError(error.response.data);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n      data.reload();\n    });\n  };\n};\nexport var deleteOffSet = function deleteOffSet(data) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios[\"delete\"](\"/compensations/\".concat(data.id)).then(function (res) {\n      toastSuccess(\"Successful!\");\n    })[\"catch\"](function (error) {\n      toastError(error.response.data);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n      data.reload();\n    });\n  };\n};\nexport var setTimeSheet = function setTimeSheet(data) {\n  return {\n    type: actionTypes.setTimeSheet,\n    data: data\n  };\n};\nexport var editReasonCheckinCheckout = function editReasonCheckinCheckout(reason_in, reason_out) {\n  var body = {\n    reason_in: reason_in,\n    reason_out: reason_out\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.patch('/timesheets/edit_reason', body).then(function (res) {\n      dispatch({\n        type: actionTypes.EDIT_REASON_CHECKIN_CHECKOUT,\n        data: res.data\n      });\n      toastSuccess('Successful!');\n    })[\"catch\"](function (er) {\n      toastError(\"\".concat(er.response.data));\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var requestEditTimeCheckinCheckout = function requestEditTimeCheckinCheckout(date, startTime, endTime, reasonIn, reasonOut, reason) {\n  var body = {\n    date: date,\n    start_at: startTime,\n    end_at: endTime,\n    reason_in: reasonIn,\n    reason_out: reasonOut,\n    reason: reason\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.post('/timesheet_requests', body).then(function (res) {\n      dispatch({\n        type: actionTypes.ADD_REQUEST_STAFF,\n        data: res.data\n      });\n      toastSuccess('Successful!');\n    })[\"catch\"](function (er) {\n      toastError(\"\".concat(er.response.data));\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var getDetailTimesheetStaff = function getDetailTimesheetStaff(id) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get(\"/timesheets/\".concat(id)).then(function (res) {\n      dispatch({\n        type: actionTypes.GET_DETAIL_TIMESHEET_STAFF,\n        data: res.data\n      });\n    })[\"catch\"](function (er) {\n      toastError(\"\".concat(er.response.data));\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var getListRequestEditStaff = function getListRequestEditStaff(fromDate, toDate, currentPage, sortType, sortField) {\n  var params = {\n    from_date: fromDate,\n    to_date: toDate,\n    current_page: String(currentPage),\n    sort_type: sortType,\n    sort_field: sortField\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/timesheet_requests', {\n      params: params\n    }).then(function (res) {\n      dispatch({\n        type: actionTypes.GET_LIST_REQUEST_STAFF,\n        data: res.data\n      });\n    })[\"catch\"](function (er) {\n      toastError(\"\".concat(er));\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var editRequestStaff = function editRequestStaff(id, date, startTime, endTime, reasonIn, reasonOut, reason) {\n  var body = {\n    date: date,\n    start_at: startTime,\n    end_at: endTime,\n    reason_in: reasonIn,\n    reason_out: reasonOut,\n    reason: reason\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.put(\"/timesheet_requests/\".concat(id), body).then(function (res) {\n      dispatch({\n        type: actionTypes.EDIT_REQUEST_STAFF,\n        data: res.data\n      });\n      toastSuccess('Successful!');\n    })[\"catch\"](function (er) {\n      toastError(\"\".concat(er.response.data));\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/actions/timeSheet.js"],"names":["actionTypes","axios","showLoading","hideLoading","toastError","toastSuccess","moment","Time","getStaffTimeSheet","data","params","from_date","startTime","to_date","endTime","current_page","String","currentPage","sort_type","sortType","sort_field","sortField","filter_type","type","dispatch","get","then","res","setTimeSheet","error","console","log","offSet","body","date","format","crossDMY","for_date","post","response","reload","editOffSet","put","id","deleteOffSet","editReasonCheckinCheckout","reason_in","reason_out","patch","EDIT_REASON_CHECKIN_CHECKOUT","er","requestEditTimeCheckinCheckout","reasonIn","reasonOut","reason","start_at","end_at","ADD_REQUEST_STAFF","getDetailTimesheetStaff","GET_DETAIL_TIMESHEET_STAFF","getListRequestEditStaff","fromDate","toDate","GET_LIST_REQUEST_STAFF","editRequestStaff","EDIT_REQUEST_STAFF"],"mappings":"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","sourcesContent":["import actionTypes from \"../../commons/const/actionTypes\";\nimport axios from \"axios\";\nimport { showLoading } from \"./loading\";\nimport { hideLoading } from \"./loading\";\nimport { toastError, toastSuccess } from \"../../commons/helpers/toastHelpers\";\nimport moment from 'moment';\nimport Time from '../../commons/const/Time';\n// import fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n\n// mock.onPost('/check_in').reply(200);\n// mock.onPost('/check_out').reply(200);\n// mock.onPost('/staff/report_late_early').reply(200);\n// mock.onGet('/timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onPost('/offsets').reply(200);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/dayoffs').reply(200, fakeData.currentuserdayoff)\n// mock.onGet('/overtimes').reply(200, fakeData.currentuserovertime)\n// mock.onGet('/reports/10').reply(200, fakeData.report)\n\nexport const getStaffTimeSheet = data => {\n  const params = {\n    from_date: data.startTime,\n    to_date: data.endTime,\n    current_page: String(data.currentPage),\n    sort_type: data.sortType,\n    sort_field: data.sortField,\n    filter_type: data.type\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .get(\"/timesheets\", { params: params })\n      .then(function(res) {\n        dispatch(setTimeSheet(res.data));\n      })\n      .catch(function(error) {\n        console.log(error.data);\n        toastError(error);\n      })\n      .finally(function() {\n        dispatch(hideLoading());\n      });\n  };\n};\n\nexport const offSet = data => {\n  const body = {\n    date: moment(data.date).format(Time.crossDMY),\n    for_date: moment(data.for_date).format(Time.crossDMY)\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .post(\"/compensations\", body)\n      .then(function(res) {\n        toastSuccess(\"Successful!\");\n      })\n      .catch(function(error) {\n        toastError(error.response.data);\n      })\n      .finally(function() {\n        dispatch(hideLoading());\n        data.reload();\n      });\n  };\n};\n\nexport const editOffSet = data => {\n  const body = {\n    date: moment(data.date).format(Time.crossDMY),\n    for_date: moment(data.for_date).format(Time.crossDMY)\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .put(`/compensations/${data.id}`, body)\n      .then(function(res) {\n        toastSuccess(\"Successful!\");\n      })\n      .catch(function(error) {\n        toastError(error.response.data);\n      })\n      .finally(function() {\n        dispatch(hideLoading());\n        data.reload();\n      });\n  };\n};\n\nexport const deleteOffSet = data => {\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .delete(`/compensations/${data.id}`)\n      .then(function(res) {\n        toastSuccess(\"Successful!\");\n      })\n      .catch(function(error) {\n        toastError(error.response.data);\n      })\n      .finally(function() {\n        dispatch(hideLoading());\n        data.reload();\n      });\n  };\n};\n\nexport const setTimeSheet = data => {\n  return { type: actionTypes.setTimeSheet, data: data };\n};\n\nexport const editReasonCheckinCheckout = (reason_in, reason_out) => {\n  const body = {\n    reason_in: reason_in,\n    reason_out: reason_out\n  }\n  return dispatch => {\n    dispatch(showLoading())\n    axios.patch('/timesheets/edit_reason', body)\n      .then(res => {\n        dispatch({type: actionTypes.EDIT_REASON_CHECKIN_CHECKOUT, data: res.data})\n        toastSuccess('Successful!')\n      })\n      .catch(er => {\n        toastError(`${er.response.data}`)\n      })\n      .finally(() => {\n        dispatch(hideLoading())\n      })\n  }\n}\n\nexport const requestEditTimeCheckinCheckout = (date, startTime, endTime, reasonIn, reasonOut, reason) => {\n  const body = {\n    date: date,\n    start_at: startTime,\n    end_at: endTime,\n    reason_in: reasonIn,\n    reason_out: reasonOut,\n    reason: reason\n  }\n  return dispatch => {\n    dispatch(showLoading())\n    axios.post('/timesheet_requests', body)\n      .then(res => {\n        dispatch({type: actionTypes.ADD_REQUEST_STAFF, data: res.data})\n        toastSuccess('Successful!')\n      })\n      .catch(er => {\n        toastError(`${er.response.data}`)\n      })\n      .finally(() => {\n        dispatch(hideLoading())\n      })\n  }\n}\n\nexport const getDetailTimesheetStaff = (id) => {\n  return dispatch => {\n    dispatch(showLoading());\n    axios.get(`/timesheets/${id}`)\n      .then(res => {\n        dispatch({type: actionTypes.GET_DETAIL_TIMESHEET_STAFF, data: res.data})\n      })\n      .catch(er => {\n        toastError(`${er.response.data}`)\n      })\n      .finally(() => {\n        dispatch(hideLoading())\n      })\n  }\n}\n\nexport const getListRequestEditStaff = (fromDate, toDate, currentPage, sortType, sortField) => {\n  const params = {\n    from_date: fromDate,\n    to_date: toDate,\n    current_page: String(currentPage),\n    sort_type: sortType,\n    sort_field: sortField\n  }\n  return dispatch => {\n    dispatch(showLoading());\n    axios.get('/timesheet_requests', {params: params})\n    .then(res => {\n      dispatch({type: actionTypes.GET_LIST_REQUEST_STAFF, data: res.data})\n    })\n    .catch(er => {\n      toastError(`${er}`)\n    })\n    .finally(() => {\n      dispatch(hideLoading())\n    })\n  }\n  \n}\n\nexport const editRequestStaff = (id, date, startTime, endTime, reasonIn, reasonOut, reason) => {\n  const body = {\n    date: date,\n    start_at: startTime,\n    end_at: endTime,\n    reason_in: reasonIn,\n    reason_out: reasonOut,\n    reason: reason\n  }\n  return dispatch => {\n    dispatch(showLoading())\n    axios.put(`/timesheet_requests/${id}`, body)\n      .then(res => {\n        dispatch({type: actionTypes.EDIT_REQUEST_STAFF, data: res.data})\n        toastSuccess('Successful!')\n      })\n      .catch(er => {\n        toastError(`${er.response.data}`)\n      })\n      .finally(() => {\n        dispatch(hideLoading())\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}