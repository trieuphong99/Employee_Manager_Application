{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/admin/components/accounts/Modal.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport * as accountActions from '../../actions/account';\nimport AccountForm from './accountForm/AccountForm';\n\nfunction EditModal(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var setAccountEditting = props.accountActions.setAccountEditting;\n  var buttonLabel = props.buttonLabel,\n      title = props.title,\n      account = props.account;\n\n  if (account !== undefined) {\n    setAccountEditting(account);\n  } else {\n    setAccountEditting(null);\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      display: \"inline\",\n      padding: \"0 10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"info\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, buttonLabel), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, title), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(AccountForm, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listAccount: state.accountReducer.listAccount\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    accountActions: bindActionCreators(accountActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditModal);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/components/accounts/Modal.js"],"names":["React","useState","connect","bindActionCreators","Button","Modal","ModalHeader","ModalBody","accountActions","AccountForm","EditModal","props","modal","setModal","toggle","setAccountEditting","buttonLabel","title","account","undefined","display","padding","mapStateToProps","state","listAccount","accountReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,YAAtD;AAEA,OAAO,KAAKC,cAAZ,MAAgC,uBAAhC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,kBACEV,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MACjBW,KADiB;AAAA,MACVC,QADU;;AAExB,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,QAAQ,CAAC,CAACD,KAAF,CAAd;AAAA,GAAf;;AAFwB,MAIhBG,kBAJgB,GAIOJ,KAAK,CAACH,cAJb,CAIhBO,kBAJgB;AAAA,MAKhBC,WALgB,GAKgBL,KALhB,CAKhBK,WALgB;AAAA,MAKHC,KALG,GAKgBN,KALhB,CAKHM,KALG;AAAA,MAKIC,OALJ,GAKgBP,KALhB,CAKIO,OALJ;;AAOxB,MAAIA,OAAO,KAAKC,SAAhB,EAA2B;AACzBJ,IAAAA,kBAAkB,CAACG,OAAD,CAAlB;AACD,GAFD,MAGK;AACHH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAED,SACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE,QAAX;AAAqBC,MAAAA,OAAO,EAAE;AAA9B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAEP,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCE,WAAvC,CADF,EAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEJ,KAAf;AAAsB,IAAA,MAAM,EAAEE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BG,KAA9B,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEH,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAFF,CADF;AAWD;;AAGD,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,cAAN,CAAqBD;AAD7B,GAAP;AAGD,CAJD;;AAMA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLnB,IAAAA,cAAc,EAAEL,kBAAkB,CAACK,cAAD,EAAiBmB,QAAjB;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAezB,OAAO,CAACoB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ChB,SAA7C,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nimport * as accountActions from '../../actions/account'\nimport AccountForm from './accountForm/AccountForm';\n\n\nfunction EditModal(props) {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  const { setAccountEditting } = props.accountActions\n  const { buttonLabel, title, account } = props;\n\n  if (account !== undefined) {\n    setAccountEditting(account)\n  }\n  else {\n    setAccountEditting(null)\n  }\n\n  return (\n    <div style={{ display: \"inline\", padding: \"0 10px\" }}>\n      <Button color=\"info\" onClick={toggle}>{buttonLabel}</Button>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{title}</ModalHeader>\n        <ModalBody>\n          <AccountForm toggle={toggle} />\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    listAccount: state.accountReducer.listAccount,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    accountActions: bindActionCreators(accountActions, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditModal);\n"]},"metadata":{},"sourceType":"module"}