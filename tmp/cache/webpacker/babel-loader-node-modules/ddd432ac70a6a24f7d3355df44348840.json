{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport actionTypes from '../../commons/const/actionTypes';\nimport _ from 'lodash';\nimport { SliceData } from '../../commons/function/sliceData';\nvar initialState = {\n  data: [],\n  detail: {},\n  listRequest: []\n};\n\nvar myReducer = function myReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.setTimeSheet:\n      return _objectSpread({}, state, {\n        data: action.data\n      });\n\n    case actionTypes.EDIT_REASON_CHECKIN_CHECKOUT:\n      var item = action.data;\n\n      var index = _.findIndex(state.data.data, function (o) {\n        return o.id === item.id;\n      });\n\n      var dataUpdate = SliceData(state.data.data, index, item);\n\n      var listTimesheets = _objectSpread({}, state.data, {\n        data: dataUpdate\n      });\n\n      return _objectSpread({}, state, {\n        data: listTimesheets\n      });\n\n    case actionTypes.GET_DETAIL_TIMESHEET_STAFF:\n      return _objectSpread({}, state, {\n        detail: action.data\n      });\n\n    case actionTypes.GET_LIST_REQUEST_STAFF:\n      return _objectSpread({}, state, {\n        listRequest: action.data\n      });\n\n    case actionTypes.ADD_REQUEST_STAFF:\n      var newItem = action.data;\n      var newData = SliceData(state.listRequest.data, 0, newItem);\n\n      var newList = _objectSpread({}, state.listRequest, {\n        data: newData\n      });\n\n      return _objectSpread({}, state, {\n        listRequest: newList\n      });\n\n    case actionTypes.EDIT_REQUEST_STAFF:\n      var itemEdit = action.data;\n\n      var indexRequest = _.findIndex(state.listRequest.data, function (o) {\n        return o.id === itemEdit.id;\n      });\n\n      var dataRequestUpdate = SliceData(state.listRequest.data, indexRequest, itemEdit);\n\n      var listRequestUpdate = _objectSpread({}, state.listRequest, {\n        data: dataRequestUpdate\n      });\n\n      return _objectSpread({}, state, {\n        listRequest: listRequestUpdate\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/reducer/timeSheet.js"],"names":["actionTypes","_","SliceData","initialState","data","detail","listRequest","myReducer","state","action","type","setTimeSheet","EDIT_REASON_CHECKIN_CHECKOUT","item","index","findIndex","o","id","dataUpdate","listTimesheets","GET_DETAIL_TIMESHEET_STAFF","GET_LIST_REQUEST_STAFF","ADD_REQUEST_STAFF","newItem","newData","newList","EDIT_REQUEST_STAFF","itemEdit","indexRequest","dataRequestUpdate","listRequestUpdate"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,iCAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,QAA0B,kCAA1B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAAnB;;AAKA,IAAIC,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAEhD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAW,CAACW,YAAjB;AACE,+BACKH,KADL;AAEEJ,QAAAA,IAAI,EAAEK,MAAM,CAACL;AAFf;;AAIF,SAAKJ,WAAW,CAACY,4BAAjB;AACE,UAAMC,IAAI,GAAGJ,MAAM,CAACL,IAApB;;AACA,UAAMU,KAAK,GAAGb,CAAC,CAACc,SAAF,CAAYP,KAAK,CAACJ,IAAN,CAAWA,IAAvB,EAA6B,UAAAY,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAASJ,IAAI,CAACI,EAAlB;AAAA,OAA9B,CAAd;;AACA,UAAMC,UAAU,GAAGhB,SAAS,CAACM,KAAK,CAACJ,IAAN,CAAWA,IAAZ,EAAkBU,KAAlB,EAAyBD,IAAzB,CAA5B;;AACA,UAAMM,cAAc,qBAAOX,KAAK,CAACJ,IAAb;AAAmBA,QAAAA,IAAI,EAAEc;AAAzB,QAApB;;AACA,+BACKV,KADL;AAEEJ,QAAAA,IAAI,EAAEe;AAFR;;AAIF,SAAKnB,WAAW,CAACoB,0BAAjB;AACE,+BACKZ,KADL;AAEEH,QAAAA,MAAM,EAAEI,MAAM,CAACL;AAFjB;;AAIF,SAAKJ,WAAW,CAACqB,sBAAjB;AACE,+BACKb,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACL;AAFtB;;AAIF,SAAKJ,WAAW,CAACsB,iBAAjB;AACE,UAAIC,OAAO,GAAGd,MAAM,CAACL,IAArB;AACA,UAAIoB,OAAO,GAAGtB,SAAS,CAACM,KAAK,CAACF,WAAN,CAAkBF,IAAnB,EAAyB,CAAzB,EAA4BmB,OAA5B,CAAvB;;AACA,UAAIE,OAAO,qBAAOjB,KAAK,CAACF,WAAb;AAA0BF,QAAAA,IAAI,EAAEoB;AAAhC,QAAX;;AACA,+BACKhB,KADL;AAEEF,QAAAA,WAAW,EAAEmB;AAFf;;AAIF,SAAKzB,WAAW,CAAC0B,kBAAjB;AACE,UAAIC,QAAQ,GAAGlB,MAAM,CAACL,IAAtB;;AACA,UAAIwB,YAAY,GAAG3B,CAAC,CAACc,SAAF,CAAYP,KAAK,CAACF,WAAN,CAAkBF,IAA9B,EAAoC,UAAAY,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAASU,QAAQ,CAACV,EAAtB;AAAA,OAArC,CAAnB;;AACA,UAAIY,iBAAiB,GAAG3B,SAAS,CAACM,KAAK,CAACF,WAAN,CAAkBF,IAAnB,EAAyBwB,YAAzB,EAAuCD,QAAvC,CAAjC;;AACA,UAAIG,iBAAiB,qBAAOtB,KAAK,CAACF,WAAb;AAA0BF,QAAAA,IAAI,EAAEyB;AAAhC,QAArB;;AACA,+BACKrB,KADL;AAEEF,QAAAA,WAAW,EAAEwB;AAFf;;AAIF;AACE,aAAOtB,KAAP;AA3CJ;AA6CD,CA/CD;;AAiDA,eAAeD,SAAf","sourcesContent":["import actionTypes from '../../commons/const/actionTypes';\nimport _ from 'lodash';\nimport { SliceData } from '../../commons/function/sliceData';\n\nvar initialState = {\n  data: [],\n  detail: {},\n  listRequest: []\n};\nvar myReducer = (state = initialState, action) => {\n  \n  switch (action.type) {\n    case actionTypes.setTimeSheet:\n      return {\n        ...state,\n        data: action.data\n      };\n    case actionTypes.EDIT_REASON_CHECKIN_CHECKOUT:\n      const item = action.data;\n      const index = _.findIndex(state.data.data, o => o.id === item.id);\n      const dataUpdate = SliceData(state.data.data, index, item);\n      const listTimesheets = {...state.data, data: dataUpdate}\n      return {\n        ...state,\n        data: listTimesheets\n      }\n    case actionTypes.GET_DETAIL_TIMESHEET_STAFF:\n      return {\n        ...state,\n        detail: action.data\n      }\n    case actionTypes.GET_LIST_REQUEST_STAFF:\n      return {\n        ...state,\n        listRequest: action.data\n      }\n    case actionTypes.ADD_REQUEST_STAFF:\n      let newItem = action.data;\n      let newData = SliceData(state.listRequest.data, 0, newItem);\n      let newList = {...state.listRequest, data: newData}\n      return {\n        ...state,\n        listRequest: newList\n      }\n    case actionTypes.EDIT_REQUEST_STAFF:\n      let itemEdit = action.data;\n      let indexRequest = _.findIndex(state.listRequest.data, o => o.id === itemEdit.id);\n      let dataRequestUpdate = SliceData(state.listRequest.data, indexRequest, itemEdit);\n      let listRequestUpdate = {...state.listRequest, data: dataRequestUpdate}\n      return {\n        ...state,\n        listRequest: listRequestUpdate\n      }\n    default:\n      return state;\n  }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}