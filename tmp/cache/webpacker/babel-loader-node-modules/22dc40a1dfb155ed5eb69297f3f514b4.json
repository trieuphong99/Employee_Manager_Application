{"ast":null,"code":"import * as ActionTypes from '../const/account';\nimport axios from 'axios';\nimport { showLoading, hideLoading } from './loading';\nimport { toastSuccess, toastError } from '../../commons/helpers/toastHelpers';\nimport { history } from '../../commons/helpers/history/history';\nexport var getListAccCompensation = function getListAccCompensation(startDate, endDate, user_id, current_page, sort_type, sort_field) {\n  var params = {\n    from_date: startDate,\n    to_date: endDate,\n    user_id: user_id,\n    current_page: String(current_page),\n    sort_type: sort_type,\n    sort_field: sort_field\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    return axios.get('/admin/user_compensations', {\n      params: params\n    }).then(function (res) {\n      dispatch({\n        type: ActionTypes.LIST_ACC_COMPENSATION,\n        data: res.data\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setIsAllowedCompensation = function setIsAllowedCompensation(id, status) {\n  var body = {\n    confirmation_status: String(status)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    return axios.patch(\"/admin/user_compensations/\".concat(id), body).then(function (res) {\n      dispatch({\n        type: ActionTypes.SET_ALLOWED_COMPENSATION,\n        confirmation_status: res.data\n      });\n      toastSuccess('Successful!');\n    })[\"catch\"](function (er) {\n      toastError(\"\".concat(er.response.data));\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/actions/compensation.js"],"names":["ActionTypes","axios","showLoading","hideLoading","toastSuccess","toastError","history","getListAccCompensation","startDate","endDate","user_id","current_page","sort_type","sort_field","params","from_date","to_date","String","dispatch","get","then","res","type","LIST_ACC_COMPENSATION","data","error","console","log","setIsAllowedCompensation","id","status","body","confirmation_status","patch","SET_ALLOWED_COMPENSATION","er","response"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,WAAvC;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,oCAAvC;AACA,SAASC,OAAT,QAAwB,uCAAxB;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,OAArB,EAA8BC,YAA9B,EAA4CC,SAA5C,EAAuDC,UAAvD,EAAsE;AAC1G,MAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEP,SADE;AAEbQ,IAAAA,OAAO,EAAEP,OAFI;AAGbC,IAAAA,OAAO,EAAEA,OAHI;AAIbC,IAAAA,YAAY,EAAEM,MAAM,CAACN,YAAD,CAJP;AAKbC,IAAAA,SAAS,EAAEA,SALE;AAMbC,IAAAA,UAAU,EAAEA;AANC,GAAf;AAQA,SAAO,UAAAK,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACA,WAAOD,KAAK,CAACkB,GAAN,CAAU,2BAAV,EAAuC;AAACL,MAAAA,MAAM,EAAEA;AAAT,KAAvC,EACJM,IADI,CACC,UAAAC,GAAG,EAAI;AACXH,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEtB,WAAW,CAACuB,qBAAnB;AAA0CC,QAAAA,IAAI,EAAEH,GAAG,CAACG;AAApD,OAAD,CAAR;AACD,KAHI,WAIE,UAAAC,KAAK,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANI,aAOI,YAAM;AACbP,MAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACD,KATI,CAAP;AAUD,GAZD;AAaD,CAtBM;AAwBP,OAAO,IAAMyB,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,EAAD,EAAKC,MAAL,EAAgB;AACtD,MAAMC,IAAI,GAAG;AACXC,IAAAA,mBAAmB,EAAEf,MAAM,CAACa,MAAD;AADhB,GAAb;AAGA,SAAO,UAACZ,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACA,WAAOD,KAAK,CAACgC,KAAN,qCAAyCJ,EAAzC,GAA+CE,IAA/C,EACJX,IADI,CACC,UAAAC,GAAG,EAAI;AACXH,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEtB,WAAW,CAACkC,wBAAnB;AAA6CF,QAAAA,mBAAmB,EAAEX,GAAG,CAACG;AAAtE,OAAD,CAAR;AACApB,MAAAA,YAAY,CAAC,aAAD,CAAZ;AACD,KAJI,WAKE,UAAA+B,EAAE,EAAI;AACX9B,MAAAA,UAAU,WAAI8B,EAAE,CAACC,QAAH,CAAYZ,IAAhB,EAAV;AACD,KAPI,aAQI,YAAM;AACbN,MAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACD,KAVI,CAAP;AAWD,GAbD;AAcD,CAlBM","sourcesContent":["import * as ActionTypes from '../const/account';\nimport axios from 'axios';\nimport {showLoading, hideLoading} from './loading';\nimport {toastSuccess, toastError} from '../../commons/helpers/toastHelpers';\nimport { history } from '../../commons/helpers/history/history';\n\nexport const getListAccCompensation = (startDate, endDate, user_id, current_page, sort_type, sort_field) => {\n  const params = {\n    from_date: startDate,\n    to_date: endDate,\n    user_id: user_id,\n    current_page: String(current_page),\n    sort_type: sort_type,\n    sort_field: sort_field\n  }\n  return dispatch => {\n    dispatch(showLoading());\n    return axios.get('/admin/user_compensations', {params: params})\n      .then(res => {\n        dispatch({type: ActionTypes.LIST_ACC_COMPENSATION, data: res.data})\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        dispatch(hideLoading())\n      })\n  }\n}\n\nexport const setIsAllowedCompensation = (id, status) => {\n  const body = {\n    confirmation_status: String(status)\n  }\n  return (dispatch) => {\n    dispatch(showLoading())\n    return axios.patch(`/admin/user_compensations/${id}`, body)\n      .then(res => {\n        dispatch({type: ActionTypes.SET_ALLOWED_COMPENSATION, confirmation_status: res.data})\n        toastSuccess('Successful!');\n      })\n      .catch(er => {\n        toastError(`${er.response.data}`);\n      })\n      .finally(() => {\n        dispatch(hideLoading())\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}