{"ast":null,"code":"import actionTypes from \"../../commons/const/actionTypes\";\nimport axios from \"axios\";\nimport { showLoading } from \"./loading\";\nimport { hideLoading } from \"./loading\";\nimport { toastError, toastSuccess } from \"../../commons/helpers/toastHelpers\"; // import fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n// mock.onPost('/check_in').reply(200);\n// mock.onPost('/check_out').reply(200);\n// mock.onPost('/staff/report_late_early').reply(200);\n// mock.onGet('/staff/timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onPost('/staff/offsets').reply(200);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/dayoffs').reply(200, fakeData.currentuserdayoff)\n// mock.onGet('/overtimes').reply(200, fakeData.currentuserovertime)\n\nexport var getStaffTimeSheet = function getStaffTimeSheet(data) {\n  var params = {\n    from_date: data.date.startTime,\n    to_date: data.date.endTime,\n    current_page: String(data.current_page),\n    sort_date: data.sort_date,\n    filter_type: data.filter_type\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get(\"/timesheets\", {\n      params: params\n    }).then(function (res) {\n      dispatch(setTimeSheet(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error.data);\n      toastError(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var offSet = function offSet(data) {\n  var body = {\n    date: data.date,\n    for_date: data.for_date\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.post(\"/compensations\", body).then(function (res) {\n      toastSuccess(\"Offset thành công\");\n    })[\"catch\"](function (error) {\n      toastError(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setTimeSheet = function setTimeSheet(data) {\n  return {\n    type: actionTypes.setTimeSheet,\n    data: data\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/actions/timeSheet.js"],"names":["actionTypes","axios","showLoading","hideLoading","toastError","toastSuccess","getStaffTimeSheet","data","params","from_date","date","startTime","to_date","endTime","current_page","String","sort_date","filter_type","dispatch","get","then","res","setTimeSheet","error","console","log","offSet","body","for_date","post","type"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,oCAAzC,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,IAAI,EAAI;AACvC,MAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEF,IAAI,CAACG,IAAL,CAAUC,SADR;AAEbC,IAAAA,OAAO,EAAEL,IAAI,CAACG,IAAL,CAAUG,OAFN;AAGbC,IAAAA,YAAY,EAAEC,MAAM,CAACR,IAAI,CAACO,YAAN,CAHP;AAIbE,IAAAA,SAAS,EAAET,IAAI,CAACS,SAJH;AAKbC,IAAAA,WAAW,EAAEV,IAAI,CAACU;AALL,GAAf;AAOA,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CACFkB,GADH,CACO,aADP,EACsB;AAAEX,MAAAA,MAAM,EAAEA;AAAV,KADtB,EAEGY,IAFH,CAEQ,UAASC,GAAT,EAAc;AAClBH,MAAAA,QAAQ,CAACI,YAAY,CAACD,GAAG,CAACd,IAAL,CAAb,CAAR;AACD,KAJH,WAKS,UAASgB,KAAT,EAAgB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAChB,IAAlB;AACAH,MAAAA,UAAU,CAACmB,KAAD,CAAV;AACD,KARH,aASW,YAAW;AAClBL,MAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACD,KAXH;AAYD,GAdD;AAeD,CAvBM;AAyBP,OAAO,IAAMuB,MAAM,GAAG,SAATA,MAAS,CAAAnB,IAAI,EAAI;AAC5B,MAAMoB,IAAI,GAAG;AACXjB,IAAAA,IAAI,EAAEH,IAAI,CAACG,IADA;AAEXkB,IAAAA,QAAQ,EAAErB,IAAI,CAACqB;AAFJ,GAAb;AAIA,SAAO,UAAAV,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CACF4B,IADH,CACQ,gBADR,EAC0BF,IAD1B,EAEGP,IAFH,CAEQ,UAASC,GAAT,EAAc;AAClBhB,MAAAA,YAAY,CAAC,mBAAD,CAAZ;AACD,KAJH,WAKS,UAASkB,KAAT,EAAgB;AACrBnB,MAAAA,UAAU,CAACmB,KAAD,CAAV;AACD,KAPH,aAQW,YAAW;AAClBL,MAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACD,KAVH;AAWD,GAbD;AAcD,CAnBM;AAqBP,OAAO,IAAMmB,YAAY,GAAG,SAAfA,YAAe,CAAAf,IAAI,EAAI;AAClC,SAAO;AAAEuB,IAAAA,IAAI,EAAE9B,WAAW,CAACsB,YAApB;AAAkCf,IAAAA,IAAI,EAAEA;AAAxC,GAAP;AACD,CAFM","sourcesContent":["import actionTypes from \"../../commons/const/actionTypes\";\nimport axios from \"axios\";\nimport { showLoading } from \"./loading\";\nimport { hideLoading } from \"./loading\";\nimport { toastError, toastSuccess } from \"../../commons/helpers/toastHelpers\";\n// import fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n\n// mock.onPost('/check_in').reply(200);\n// mock.onPost('/check_out').reply(200);\n// mock.onPost('/staff/report_late_early').reply(200);\n// mock.onGet('/staff/timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onPost('/staff/offsets').reply(200);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/dayoffs').reply(200, fakeData.currentuserdayoff)\n// mock.onGet('/overtimes').reply(200, fakeData.currentuserovertime)\n\nexport const getStaffTimeSheet = data => {\n  const params = {\n    from_date: data.date.startTime,\n    to_date: data.date.endTime,\n    current_page: String(data.current_page),\n    sort_date: data.sort_date,\n    filter_type: data.filter_type\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .get(\"/timesheets\", { params: params })\n      .then(function(res) {\n        dispatch(setTimeSheet(res.data));\n      })\n      .catch(function(error) {\n        console.log(error.data);\n        toastError(error);\n      })\n      .finally(function() {\n        dispatch(hideLoading());\n      });\n  };\n};\n\nexport const offSet = data => {\n  const body = {\n    date: data.date,\n    for_date: data.for_date\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .post(\"/compensations\", body)\n      .then(function(res) {\n        toastSuccess(\"Offset thành công\");\n      })\n      .catch(function(error) {\n        toastError(error);\n      })\n      .finally(function() {\n        dispatch(hideLoading());\n      });\n  };\n};\n\nexport const setTimeSheet = data => {\n  return { type: actionTypes.setTimeSheet, data: data };\n};\n"]},"metadata":{},"sourceType":"module"}