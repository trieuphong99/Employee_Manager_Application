{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw\n\n\nmodule.exports = function Set(O, P, V, Throw) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: `O` must be an Object');\n  }\n\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: `P` must be a Property Key');\n  }\n\n  if (Type(Throw) !== 'Boolean') {\n    throw new $TypeError('Assertion failed: `Throw` must be a Boolean');\n  }\n\n  if (Throw) {\n    O[P] = V; // eslint-disable-line no-param-reassign\n\n    return true;\n  } else {\n    try {\n      O[P] = V; // eslint-disable-line no-param-reassign\n    } catch (e) {\n      return false;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}