{"ast":null,"code":"import * as ActionTypes from \"../const/account\";\nimport axios from \"axios\";\nimport { showLoading, hideLoading } from \"./loading\";\nexport var getListAccOverTime = function getListAccOverTime(date, id, current_page) {\n  var params = {\n    from_date: date.startTime,\n    to_date: date.endTime,\n    id: id,\n    current_page: String(current_page)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get(\"admin/user_overtimes\", {\n      params: params\n    }).then(function (res) {\n      dispatch({\n        type: ActionTypes.LIST_ACC_OVERTIME,\n        data: res.data\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setIsAllowedOverTime = function setIsAllowedOverTime(id) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.patch(\"/admin/user_overtimes/\".concat(id)).then(function (res) {\n      dispatch({\n        type: ActionTypes.SET_ALLOWED_OVERTIME,\n        data: res.data\n      });\n      toastSuccess(\"Successful\");\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/actions/overTime.js"],"names":["ActionTypes","axios","showLoading","hideLoading","getListAccOverTime","date","id","current_page","params","from_date","startTime","to_date","endTime","String","dispatch","get","then","res","type","LIST_ACC_OVERTIME","data","error","console","log","setIsAllowedOverTime","patch","SET_ALLOWED_OVERTIME","toastSuccess"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,WAAzC;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAOC,EAAP,EAAWC,YAAX,EAA4B;AAC5D,MAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEJ,IAAI,CAACK,SADH;AAEbC,IAAAA,OAAO,EAAEN,IAAI,CAACO,OAFD;AAGbN,IAAAA,EAAE,EAAEA,EAHS;AAIbC,IAAAA,YAAY,EAAEM,MAAM,CAACN,YAAD;AAJP,GAAf;AAMA,SAAO,UAAAO,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CACFc,GADH,CACO,sBADP,EAC+B;AAAEP,MAAAA,MAAM,EAAEA;AAAV,KAD/B,EAEGQ,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAElB,WAAW,CAACmB,iBAApB;AAAuCC,QAAAA,IAAI,EAAEH,GAAG,CAACG;AAAjD,OAAD,CAAR;AACD,KAJH,WAKS,UAAAC,KAAK,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH,aAQW,YAAM;AACbP,MAAAA,QAAQ,CAACX,WAAW,EAAZ,CAAR;AACD,KAVH;AAWD,GAbD;AAcD,CArBM;AAuBP,OAAO,IAAMqB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAlB,EAAE,EAAI;AACxC,SAAO,UAAAQ,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CACFwB,KADH,iCACkCnB,EADlC,GAEGU,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAElB,WAAW,CAAC0B,oBAApB;AAA0CN,QAAAA,IAAI,EAAEH,GAAG,CAACG;AAApD,OAAD,CAAR;AACAO,MAAAA,YAAY,CAAC,YAAD,CAAZ;AACD,KALH,WAMS,UAAAN,KAAK,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARH,aASW,YAAM;AACbP,MAAAA,QAAQ,CAACX,WAAW,EAAZ,CAAR;AACD,KAXH;AAYD,GAdD;AAeD,CAhBM","sourcesContent":["import * as ActionTypes from \"../const/account\";\nimport axios from \"axios\";\nimport { showLoading, hideLoading } from \"./loading\";\n\nexport const getListAccOverTime = (date, id, current_page) => {\n  const params = {\n    from_date: date.startTime,\n    to_date: date.endTime,\n    id: id,\n    current_page: String(current_page)\n  };\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .get(\"admin/user_overtimes\", { params: params })\n      .then(res => {\n        dispatch({ type: ActionTypes.LIST_ACC_OVERTIME, data: res.data });\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        dispatch(hideLoading());\n      });\n  };\n};\n\nexport const setIsAllowedOverTime = id => {\n  return dispatch => {\n    dispatch(showLoading());\n    axios\n      .patch(`/admin/user_overtimes/${id}`)\n      .then(res => {\n        dispatch({ type: ActionTypes.SET_ALLOWED_OVERTIME, data: res.data });\n        toastSuccess(\"Successful\");\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        dispatch(hideLoading());\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}