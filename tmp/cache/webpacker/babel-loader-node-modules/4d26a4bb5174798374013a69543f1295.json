{"ast":null,"code":"import actionTypes from '../../commons/const/actionTypes';\nimport axios from 'axios';\nimport { showLoading } from './loading';\nimport { hideLoading } from './loading';\nimport { toastError, toastSuccess } from '../../commons/helpers/toastHelpers';\nimport fakeData from '../../../../db';\nimport MockAdapter from 'axios-mock-adapter';\nvar mock = new MockAdapter(axios);\nmock.onPost('/check_in').reply(200);\nmock.onPost('/check_out').reply(200);\nmock.onPost('/staff/report_late_early').reply(200);\nmock.onGet('/staff/timesheets').reply(200, fakeData.currentusertimesheet);\nmock.onPost('/staff/offsets').reply(200);\nmock.onGet('admin/users/14').reply(200, fakeData.users[3]);\nmock.onPost('/users/14/change_password').reply(200);\nexport var getStaffTimeSheet = function getStaffTimeSheet(data) {\n  var params = {\n    from_date: data.date.startTime,\n    to_date: data.date.endTime,\n    current_page: String(data.current_page),\n    sort_date: data.sort_date,\n    filter_type: data.filter_type\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/staff/timesheets', params).then(function (res) {\n      dispatch(setTimeSheet(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var offSet = function offSet(data) {\n  var body = {\n    date: data.date,\n    for_date: data.for_date\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.post('/staff/offsets', body).then(function (res) {\n      toastSuccess('Offset thành công');\n    })[\"catch\"](function (error) {\n      toastError(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setTimeSheet = function setTimeSheet(data) {\n  return {\n    type: actionTypes.setTimeSheet,\n    data: data\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/actions/timeSheet.js"],"names":["actionTypes","axios","showLoading","hideLoading","toastError","toastSuccess","fakeData","MockAdapter","mock","onPost","reply","onGet","currentusertimesheet","users","getStaffTimeSheet","data","params","from_date","date","startTime","to_date","endTime","current_page","String","sort_date","filter_type","dispatch","get","then","res","setTimeSheet","error","console","log","offSet","body","for_date","post","type"],"mappings":"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","sourcesContent":["import actionTypes from '../../commons/const/actionTypes';\nimport axios from 'axios'\nimport { showLoading } from './loading'\nimport { hideLoading } from './loading'\nimport { toastError, toastSuccess } from '../../commons/helpers/toastHelpers'\nimport fakeData from '../../../../db'\nimport MockAdapter from 'axios-mock-adapter'\nvar mock = new MockAdapter(axios);\n\nmock.onPost('/check_in').reply(200);\nmock.onPost('/check_out').reply(200);\nmock.onPost('/staff/report_late_early').reply(200);\nmock.onGet('/staff/timesheets').reply(200, fakeData.currentusertimesheet);\nmock.onPost('/staff/offsets').reply(200);\nmock.onGet('admin/users/14').reply(200, fakeData.users[3]);\nmock.onPost('/users/14/change_password').reply(200);\n\nexport const getStaffTimeSheet = (data) => {\n  const params = {\n    from_date: data.date.startTime,\n    to_date: data.date.endTime,\n    current_page: String(data.current_page),\n    sort_date: data.sort_date,\n    filter_type: data.filter_type\n  }\n  return (dispatch) => {\n    dispatch(showLoading())\n    axios.get('/staff/timesheets', params)\n      .then(function (res) {\n        dispatch(setTimeSheet(res.data))\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .finally(function () {\n        dispatch(hideLoading())\n      });\n  }\n}\n\nexport const offSet = (data) => {\n  const body = {\n    date: data.date,\n    for_date: data.for_date\n  }\n  return (dispatch) => {\n    dispatch(showLoading())\n    axios.post('/staff/offsets', body)\n      .then(function (res) {\n        toastSuccess('Offset thành công')\n      })\n      .catch(function (error) {\n        toastError(error)\n      })\n      .finally(function () {\n        dispatch(hideLoading())\n      });\n  }\n}\n\nexport const setTimeSheet = (data) => { return { type: actionTypes.setTimeSheet, data: data } }\n"]},"metadata":{},"sourceType":"module"}