{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar Type = require('./Type'); // https://www.ecma-international.org/ecma-262/6.0/#sec-deletepropertyorthrow\n\n\nmodule.exports = function DeletePropertyOrThrow(O, P) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n  } // eslint-disable-next-line no-param-reassign\n\n\n  var success = delete O[P];\n\n  if (!success) {\n    throw new $TypeError('Attempt to delete property failed.');\n  }\n\n  return success;\n};","map":null,"metadata":{},"sourceType":"module"}