{"ast":null,"code":"var _jsxFileName = \"/home/phong/rails/imp/app/javascript/staff/components/report/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport { Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Label } from 'reactstrap';\nimport '../../../commons/components/report/build/ckeditor';\nimport { getReport, postReport, updateReport, postFile } from '../../actions/report';\nimport _ from 'lodash';\nimport { useDispatch } from 'react-redux';\nimport Select from 'react-select';\nimport FormData from 'form-data';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { styles } from './styles';\nimport { editorConfig } from './config';\nimport Images from './Images';\nvar formData = new FormData();\n\nvar filterMention = function filterMention(report_message, users, convertIdToName) {\n  _.map(users, function (user) {\n    return report_message = _.replace(report_message, new RegExp(convertIdToName ? user.user_id : user.user_name, \"g\"), convertIdToName ? user.user_name : user.user_id);\n  });\n\n  return report_message;\n};\n\nvar validationSchema = Yup.object({\n  // send_to: Yup.array().required(\"Sent to is a required field\"),\n  report_message: Yup.string().required(\"Report message is a required field\")\n});\nexport default function (props) {\n  var _this = this;\n\n  var _useState = useState({\n    send_to: [],\n    report_message: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      initialValues = _useState2[0],\n      setInitialValues = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var item = props.item,\n      reload = props.reload,\n      setSelectedItem = props.setSelectedItem;\n  var dispatch = useDispatch();\n\n  var toggle = function toggle() {\n    setModal(!modal);\n    setSelectedItem(null);\n  };\n\n  useEffect(function () {\n    getReport(item.report_id, setInitialValues);\n  }, []);\n\n  var filterChannelInSelectField = function filterChannelInSelectField(channels) {\n    return _.map(channels, function (o) {\n      return {\n        value: o.channel_id,\n        label: o.channel_name\n      };\n    });\n  };\n\n  var filterSendToInSelectField = function filterSendToInSelectField(send_to) {\n    return _.map(send_to, function (o) {\n      return {\n        value: o.channel_id,\n        label: o.channel_name\n      };\n    });\n  };\n\n  var handleSubmit = useCallback(function (values) {\n    var send_to_channels = _.map(values.channels, function (o) {\n      return {\n        channel_id: o.value,\n        channel_name: o.label\n      };\n    }); //filter send_to user to submit\n\n\n    var report_message = filterMention(values.report_message, values.users, false);\n    var ins = document.getElementById('uploadFile').files.length;\n\n    for (var x = 0; x < ins; x++) {\n      formData.append(\"attachments[]\", document.getElementById('uploadFile').files[x]);\n    }\n\n    _.isEqual(item.report_id, null) ? dispatch(postReport(item.id, report_message, send_to_channels, formData, reload)) : dispatch(updateReport(item.report_id, report_message, send_to_channels, formData));\n    toggle();\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, initialValues.attachments !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 52\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    isOpen: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: props.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: toggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, \"Daily Report!\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }, \"Send to:\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"send_to\",\n      isMulti: true,\n      defaultValue: filterSendToInSelectField(props.values.send_to),\n      options: filterChannelInSelectField(props.values.channels),\n      onChange: function onChange(e) {\n        return props.setFieldValue('send_to', e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }), props.errors.send_to && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"block\"\n      },\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 48\n      }\n    }, props.errors.send_to), /*#__PURE__*/React.createElement(Label, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }, \"Report\"), /*#__PURE__*/React.createElement(CKEditor, {\n      editor: ClassicEditor,\n      config: editorConfig(props.values.users),\n      values: filterMention(props.values.report_message, props.values.users, true),\n      data: filterMention(props.values.report_message, props.values.users, true),\n      onChange: function onChange(event, editor) {\n        props.setFieldValue('report_message', editor.getData());\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }), props.errors.report_message && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"block\"\n      },\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 55\n      }\n    }, props.errors.report_message), !_.isEqual(props.values.attachments, []) && /*#__PURE__*/React.createElement(Images, {\n      images: props.values.attachments,\n      formData: formData,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 68\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"uploadFile\",\n      type: \"file\",\n      multiple: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Submit\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: toggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"Cancel\")));\n  }))));\n}","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/components/report/index.js"],"names":["React","useState","useEffect","useCallback","CKEditor","Input","Button","Modal","ModalHeader","ModalBody","ModalFooter","Label","getReport","postReport","updateReport","postFile","_","useDispatch","Select","FormData","Yup","Formik","styles","editorConfig","Images","formData","filterMention","report_message","users","convertIdToName","map","user","replace","RegExp","user_id","user_name","validationSchema","object","string","required","props","send_to","initialValues","setInitialValues","modal","setModal","item","reload","setSelectedItem","dispatch","toggle","report_id","filterChannelInSelectField","channels","o","value","channel_id","label","channel_name","filterSendToInSelectField","handleSubmit","values","send_to_channels","ins","document","getElementById","files","length","x","append","isEqual","id","attachments","undefined","e","setFieldValue","errors","display","ClassicEditor","event","editor","getData","marginTop"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,WAA/B,EAA4CC,SAA5C,EAAuDC,WAAvD,EAAoEC,KAApE,QAAiF,YAAjF;AACA,OAAO,mDAAP;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,EAA8CC,QAA9C,QAA8D,sBAA9D;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAIC,QAAQ,GAAG,IAAIN,QAAJ,EAAf;;AAEA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACC,cAAD,EAAiBC,KAAjB,EAAwBC,eAAxB,EAA4C;AAChEb,EAAAA,CAAC,CAACc,GAAF,CAAMF,KAAN,EACE,UAAAG,IAAI;AAAA,WACFJ,cAAc,GAAGX,CAAC,CAACgB,OAAF,CAAUL,cAAV,EAA0B,IAAIM,MAAJ,CAAWJ,eAAe,GAAGE,IAAI,CAACG,OAAR,GAAkBH,IAAI,CAACI,SAAjD,EAA4D,GAA5D,CAA1B,EAA4FN,eAAe,GAAGE,IAAI,CAACI,SAAR,GAAoBJ,IAAI,CAACG,OAApI,CADf;AAAA,GADN;;AAIA,SAAOP,cAAP;AACD,CAND;;AAQA,IAAMS,gBAAgB,GAAGhB,GAAG,CAACiB,MAAJ,CAAW;AAClC;AACAV,EAAAA,cAAc,EAAEP,GAAG,CAACkB,MAAJ,GAAaC,QAAb,CAAsB,oCAAtB;AAFkB,CAAX,CAAzB;AAKA,eAAe,UAAUC,KAAV,EAAiB;AAAA;;AAAA,kBACYvC,QAAQ,CAAC;AACjDwC,IAAAA,OAAO,EAAE,EADwC;AAEjDd,IAAAA,cAAc,EAAE;AAFiC,GAAD,CADpB;AAAA;AAAA,MACvBe,aADuB;AAAA,MACRC,gBADQ;;AAAA,mBAKJ1C,QAAQ,CAAC,IAAD,CALJ;AAAA;AAAA,MAKvB2C,KALuB;AAAA,MAKhBC,QALgB;;AAAA,MAMtBC,IANsB,GAMYN,KANZ,CAMtBM,IANsB;AAAA,MAMhBC,MANgB,GAMYP,KANZ,CAMhBO,MANgB;AAAA,MAMRC,eANQ,GAMYR,KANZ,CAMRQ,eANQ;AAO9B,MAAMC,QAAQ,GAAGhC,WAAW,EAA5B;;AAEA,MAAMiC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBL,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAHD;;AAKA9C,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,SAAS,CAACkC,IAAI,CAACK,SAAN,EAAiBR,gBAAjB,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMS,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAC,QAAQ;AAAA,WAAIrC,CAAC,CAACc,GAAF,CAAMuB,QAAN,EAAgB,UAAAC,CAAC;AAAA,aAAK;AAAEC,QAAAA,KAAK,EAAED,CAAC,CAACE,UAAX;AAAuBC,QAAAA,KAAK,EAAEH,CAAC,CAACI;AAAhC,OAAL;AAAA,KAAjB,CAAJ;AAAA,GAA3C;;AACA,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAlB,OAAO;AAAA,WAAIzB,CAAC,CAACc,GAAF,CAAMW,OAAN,EAAe,UAAAa,CAAC;AAAA,aAAK;AAAEC,QAAAA,KAAK,EAAED,CAAC,CAACE,UAAX;AAAuBC,QAAAA,KAAK,EAAEH,CAAC,CAACI;AAAhC,OAAL;AAAA,KAAhB,CAAJ;AAAA,GAAzC;;AAEA,MAAME,YAAY,GAAGzD,WAAW,CAC9B,UAAC0D,MAAD,EAAY;AACV,QAAMC,gBAAgB,GAAG9C,CAAC,CAACc,GAAF,CAAM+B,MAAM,CAACR,QAAb,EAAuB,UAAAC,CAAC;AAAA,aAAK;AAAEE,QAAAA,UAAU,EAAEF,CAAC,CAACC,KAAhB;AAAuBG,QAAAA,YAAY,EAAEJ,CAAC,CAACG;AAAvC,OAAL;AAAA,KAAxB,CAAzB,CADU,CAGV;;;AACA,QAAM9B,cAAc,GAAGD,aAAa,CAACmC,MAAM,CAAClC,cAAR,EAAwBkC,MAAM,CAACjC,KAA/B,EAAsC,KAAtC,CAApC;AAEA,QAAImC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,MAAtD;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAApB,EAAyBK,CAAC,EAA1B,EAA8B;AAC5B3C,MAAAA,QAAQ,CAAC4C,MAAT,CAAgB,eAAhB,EAAiCL,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CE,CAA5C,CAAjC;AACD;;AAEDpD,IAAAA,CAAC,CAACsD,OAAF,CAAUxB,IAAI,CAACK,SAAf,EAA0B,IAA1B,IACIF,QAAQ,CAACpC,UAAU,CAACiC,IAAI,CAACyB,EAAN,EAAU5C,cAAV,EAA0BmC,gBAA1B,EAA4CrC,QAA5C,EAAsDsB,MAAtD,CAAX,CADZ,GAEIE,QAAQ,CAACnC,YAAY,CAACgC,IAAI,CAACK,SAAN,EAAiBxB,cAAjB,EAAiCmC,gBAAjC,EAAmDrC,QAAnD,CAAb,CAFZ;AAGAyB,IAAAA,MAAM;AACP,GAhB6B,CAAhC;AAmBA,sBACE,0CAEIR,aAAa,CAAC8B,WAAd,KAA8BC,SAA9B,iBAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACzC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,MAAM,EAAE7B,KAAzB;AAAgC,IAAA,MAAM,EAAEM,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAER,aADjB;AAEE,IAAA,gBAAgB,EAAEN,gBAFpB;AAGE,IAAA,QAAQ,EAAEwB,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,UAAApB,KAAK;AAAA,wBACJ;AAAM,MAAA,QAAQ,EAAEA,KAAK,CAACoB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAEV,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE5B,MAAM,CAACmC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,MAFT;AAGE,MAAA,YAAY,EAAEE,yBAAyB,CAACnB,KAAK,CAACqB,MAAN,CAAapB,OAAd,CAHzC;AAIE,MAAA,OAAO,EAAEW,0BAA0B,CAACZ,KAAK,CAACqB,MAAN,CAAaR,QAAd,CAJrC;AAKE,MAAA,QAAQ,EAAE,kBAAAqB,CAAC;AAAA,eAAIlC,KAAK,CAACmC,aAAN,CAAoB,SAApB,EAA+BD,CAA/B,CAAJ;AAAA,OALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASGlC,KAAK,CAACoC,MAAN,CAAanC,OAAb,iBAAwB;AAAK,MAAA,KAAK,EAAE;AAAEoC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAkC,MAAA,SAAS,EAAC,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgErC,KAAK,CAACoC,MAAN,CAAanC,OAA7E,CAT3B,eAUE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEnB,MAAM,CAACmC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAEqB,aADV;AAEE,MAAA,MAAM,EAAEvD,YAAY,CAACiB,KAAK,CAACqB,MAAN,CAAajC,KAAd,CAFtB;AAGE,MAAA,MAAM,EAAEF,aAAa,CAACc,KAAK,CAACqB,MAAN,CAAalC,cAAd,EAA8Ba,KAAK,CAACqB,MAAN,CAAajC,KAA3C,EAAkD,IAAlD,CAHvB;AAIE,MAAA,IAAI,EAAEF,aAAa,CAACc,KAAK,CAACqB,MAAN,CAAalC,cAAd,EAA8Ba,KAAK,CAACqB,MAAN,CAAajC,KAA3C,EAAkD,IAAlD,CAJrB;AAKE,MAAA,QAAQ,EAAE,kBAACmD,KAAD,EAAQC,MAAR,EAAmB;AAC3BxC,QAAAA,KAAK,CAACmC,aAAN,CAAoB,gBAApB,EAAsCK,MAAM,CAACC,OAAP,EAAtC;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAoBGzC,KAAK,CAACoC,MAAN,CAAajD,cAAb,iBAA+B;AAAK,MAAA,KAAK,EAAE;AAAEkD,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAkC,MAAA,SAAS,EAAC,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgErC,KAAK,CAACoC,MAAN,CAAajD,cAA7E,CApBlC,EAqBG,CAACX,CAAC,CAACsD,OAAF,CAAU9B,KAAK,CAACqB,MAAN,CAAaW,WAAvB,EAAoC,EAApC,CAAD,iBAA4C,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEhC,KAAK,CAACqB,MAAN,CAAaW,WAA7B;AAA0C,MAAA,QAAQ,EAAE/C,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArB/C,eAsBE;AAAK,MAAA,KAAK,EAAE;AAAEyD,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtBF,CADF,CAFF,eAkCE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EACwD,GADxD,eAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAEhC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAlCF,CADI;AAAA,GALR,CADF,CADyC,CAF/C,CADF;AAyDD","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport { Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Label } from 'reactstrap';\nimport '../../../commons/components/report/build/ckeditor'\nimport { getReport, postReport, updateReport, postFile } from '../../actions/report'\nimport _ from 'lodash';\nimport { useDispatch } from 'react-redux';\nimport Select from 'react-select';\nimport FormData from 'form-data'\nimport * as Yup from 'yup'\nimport { Formik } from 'formik';\n\nimport { styles } from './styles';\nimport { editorConfig } from './config';\nimport Images from './Images'\n\nlet formData = new FormData();\n\nconst filterMention = (report_message, users, convertIdToName) => {\n  _.map(users,\n    user =>\n      report_message = _.replace(report_message, new RegExp(convertIdToName ? user.user_id : user.user_name, \"g\"), convertIdToName ? user.user_name : user.user_id)\n  )\n  return report_message\n}\n\nconst validationSchema = Yup.object({\n  // send_to: Yup.array().required(\"Sent to is a required field\"),\n  report_message: Yup.string().required(\"Report message is a required field\")\n})\n\nexport default function (props) {\n  const [initialValues, setInitialValues] = useState({\n    send_to: [],\n    report_message: ''\n  })\n  const [modal, setModal] = useState(true);\n  const { item, reload, setSelectedItem } = props;\n  const dispatch = useDispatch();\n\n  const toggle = () => {\n    setModal(!modal)\n    setSelectedItem(null)\n  }\n\n  useEffect(() => {\n    getReport(item.report_id, setInitialValues)\n  }, [])\n\n  const filterChannelInSelectField = channels => _.map(channels, o => ({ value: o.channel_id, label: o.channel_name }))\n  const filterSendToInSelectField = send_to => _.map(send_to, o => ({ value: o.channel_id, label: o.channel_name }))\n\n  const handleSubmit = useCallback(\n    (values) => {\n      const send_to_channels = _.map(values.channels, o => ({ channel_id: o.value, channel_name: o.label }))\n\n      //filter send_to user to submit\n      const report_message = filterMention(values.report_message, values.users, false)\n\n      let ins = document.getElementById('uploadFile').files.length;\n      for (var x = 0; x < ins; x++) {\n        formData.append(\"attachments[]\", document.getElementById('uploadFile').files[x])\n      }\n\n      _.isEqual(item.report_id, null)\n        ? dispatch(postReport(item.id, report_message, send_to_channels, formData, reload))\n        : dispatch(updateReport(item.report_id, report_message, send_to_channels, formData))\n      toggle()\n    }\n  )\n\n  return (\n    <>\n      {\n        initialValues.attachments !== undefined && <div>\n          <Modal size=\"lg\" isOpen={modal} toggle={toggle}>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={validationSchema}\n              onSubmit={handleSubmit}\n            >\n              {props => (\n                <form onSubmit={props.handleSubmit}>\n                  <ModalHeader toggle={toggle}>Daily Report!</ModalHeader>\n                  <ModalBody>\n                    <div>\n                      <Label style={styles.label}>Send to:</Label>\n                      <Select\n                        name=\"send_to\"\n                        isMulti\n                        defaultValue={filterSendToInSelectField(props.values.send_to)}\n                        options={filterChannelInSelectField(props.values.channels)}\n                        onChange={e => props.setFieldValue('send_to', e)}\n                      />\n                      {props.errors.send_to && <div style={{ display: \"block\" }} className=\"invalid-feedback\">{props.errors.send_to}</div>}\n                      <Label style={styles.label}>Report</Label>\n                      <CKEditor\n                        editor={ClassicEditor}\n                        config={editorConfig(props.values.users)}\n                        values={filterMention(props.values.report_message, props.values.users, true)}\n                        data={filterMention(props.values.report_message, props.values.users, true)}\n                        onChange={(event, editor) => {\n                          props.setFieldValue('report_message', editor.getData())\n                        }}\n                      />\n                      {props.errors.report_message && <div style={{ display: \"block\" }} className=\"invalid-feedback\">{props.errors.report_message}</div>}\n                      {!_.isEqual(props.values.attachments, []) && <Images images={props.values.attachments} formData={formData} />}\n                      <div style={{ marginTop: \"10px\" }}>\n                        <Input\n                          id=\"uploadFile\"\n                          type=\"file\"\n                          multiple\n                        />\n                      </div>\n                    </div>\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" type=\"submit\">Submit</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                  </ModalFooter>\n                </form>\n              )}\n            </Formik>\n          </Modal>\n        </div >\n      }\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}