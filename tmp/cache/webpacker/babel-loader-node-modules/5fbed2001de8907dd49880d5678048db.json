{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/phong/rails/imp/app/javascript/admin/components/accounts/accountForm/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { ReactstrapInput, ReactstrapSelect } from \"reactstrap-formik\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Col, Container, Row, Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport * as actions from '../../../actions/account';\nimport * as options from './selectOptions';\nimport * as validate from './validate';\nimport _ from 'lodash';\nimport { toastError } from '../../../../commons/helpers/toastHelpers';\n\nvar AccountForm = function AccountForm(props) {\n  var actions = props.actions,\n      buttonLabel = props.buttonLabel,\n      title = props.title,\n      item = props.item,\n      id = props.id;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var initialValues = validate.initialValues(item);\n  var validationSchema = validate.validationSchema(item);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"inline-block\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    color: \"info\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, buttonLabel), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    isOpen: modal,\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setErrors = _ref.setErrors,\n          setSubmitting = _ref.setSubmitting;\n      var status = values.status === \"Active\";\n      values = _.mapValues(values, function (s) {\n        return typeof s === \"string\" ? s.trim() : s;\n      }); //trim obj\n\n      var data = _objectSpread({}, values, {\n        status: status\n      });\n\n      if (!_.isEqual(initialValues, values)) {\n        if (item === undefined) {\n          actions.addNewAccountRequest(data, setErrors, setSubmitting, toggle);\n        } else {\n          actions.updateAccountRequest(id, data, setErrors, setSubmitting, toggle);\n        }\n      } else {\n        toggle();\n        toastError(\"Nothing change\");\n        setSubmitting(false);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting,\n        values = _ref2.values,\n        errors = _ref2.errors;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: toggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, title), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Name\",\n      name: \"name\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Phone Number\",\n      name: \"phone_number\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Address\",\n      name: \"address\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"date\",\n      label: \"Date of birth\",\n      name: \"date_of_birth\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Email\",\n      name: \"email\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Id card\",\n      name: \"id_card\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"date\",\n      label: \"Joining date\",\n      name: \"joining_date\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"date\",\n      label: \"Official date\",\n      name: \"official_date\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Contract type\",\n      name: \"contract_type\",\n      component: ReactstrapSelect,\n      inputprops: {\n        name: \"contract_type\",\n        options: options.contract_type,\n        defaultOption: \"Select\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Position\",\n      name: \"position\",\n      component: ReactstrapSelect,\n      inputprops: {\n        name: \"position\",\n        id: \"position\",\n        options: options.position,\n        defaultOption: \"Select\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Status\",\n      name: \"status\",\n      component: ReactstrapSelect,\n      inputprops: {\n        name: \"status\",\n        id: \"status\",\n        options: options.status,\n        defaultOption: \"Select\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Gender\",\n      name: \"sex\",\n      component: ReactstrapSelect,\n      inputprops: {\n        name: \"sex\",\n        id: \"sex\",\n        options: options.sex,\n        defaultOption: \"Select\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Roles\",\n      name: \"roles\",\n      component: ReactstrapSelect,\n      inputprops: {\n        name: \"roles\",\n        id: \"roles\",\n        options: options.roles,\n        defaultOption: \"Select\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 19\n      }\n    }, !item && /*#__PURE__*/React.createElement(Field, {\n      label: \"Password\",\n      name: \"password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, \"Submit\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: toggle,\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, \"Cancel\")));\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountForm);","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/components/accounts/accountForm/index.js"],"names":["React","useState","Field","Form","Formik","Yup","ReactstrapInput","ReactstrapSelect","connect","bindActionCreators","Col","Container","Row","Button","Modal","ModalHeader","ModalBody","ModalFooter","actions","options","validate","_","toastError","AccountForm","props","buttonLabel","title","item","id","modal","setModal","toggle","initialValues","validationSchema","display","values","setErrors","setSubmitting","status","mapValues","s","trim","data","isEqual","undefined","addNewAccountRequest","updateAccountRequest","handleSubmit","isSubmitting","errors","name","contract_type","defaultOption","position","sex","roles","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { ReactstrapInput, ReactstrapSelect } from \"reactstrap-formik\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  Col, Container, Row,\n  Button, Modal, ModalHeader, ModalBody, ModalFooter\n} from \"reactstrap\";\nimport * as actions from '../../../actions/account';\nimport * as options from './selectOptions';\nimport * as validate from './validate';\nimport _ from 'lodash';\n\nimport { toastError } from '../../../../commons/helpers/toastHelpers';\n\nconst AccountForm = (props) => {\n  const {\n    actions,\n    buttonLabel,\n    title,\n    item,\n    id\n  } = props;\n\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  const initialValues = validate.initialValues(item)\n  const validationSchema = validate.validationSchema(item)\n\n  return (\n    <div style={{ display: \"inline-block\" }}>\n      <Button className=\"btn\" color=\"info\" onClick={toggle}>{buttonLabel}</Button>\n      <Modal size=\"lg\" isOpen={modal} toggle={toggle}>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={\n            (values, { setErrors, setSubmitting }) => {\n              const status = values.status === \"Active\"\n              values = _.mapValues(values, s => typeof(s) === \"string\" ? s.trim() : s); //trim obj\n              const data = { ...values, status }\n              if (!_.isEqual(initialValues, values)) {\n                if (item === undefined) {\n                  actions.addNewAccountRequest(data, setErrors, setSubmitting, toggle)\n                }\n                else {\n                  actions.updateAccountRequest(id, data, setErrors, setSubmitting, toggle)\n                }\n              }\n              else {\n                toggle()\n                toastError(\"Nothing change\")\n                setSubmitting(false)\n              }\n            }\n          }\n        >\n          {({ handleSubmit, isSubmitting, values, errors }) => {\n            return <Form onSubmit={handleSubmit} >\n              <ModalHeader toggle={toggle}>{title}</ModalHeader>\n              <ModalBody>\n                <Row>\n                  <Col xs=\"6\">\n                    <Field\n                      label=\"Name\"\n                      name=\"name\"\n                      component={ReactstrapInput}\n                    />\n                  </Col>\n                  <Col xs=\"6\">\n                    <Field\n                      label=\"Phone Number\"\n                      name=\"phone_number\"\n                      component={ReactstrapInput}\n                    />\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col xs=\"6\">\n                    <Field\n                      label=\"Address\"\n                      name=\"address\"\n                      component={ReactstrapInput}\n                    />\n                  </Col>\n                  <Col xs=\"6\">\n                    <Field\n                      type=\"date\"\n                      label=\"Date of birth\"\n                      name=\"date_of_birth\"\n                      component={ReactstrapInput}\n                    />\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col xs=\"6\">\n                    <Field\n                      label=\"Email\"\n                      name=\"email\"\n                      component={ReactstrapInput}\n                    />\n                  </Col>\n                  <Col xs=\"6\">\n                    <Field\n                      label=\"Id card\"\n                      name=\"id_card\"\n                      component={ReactstrapInput}\n                    />\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col xs=\"6\">\n                    <Field\n                      type=\"date\"\n                      label=\"Joining date\"\n                      name=\"joining_date\"\n                      component={ReactstrapInput}\n                    />\n                  </Col>\n                  <Col xs=\"6\">\n                    <Field\n                      type=\"date\"\n                      label=\"Official date\"\n                      name=\"official_date\"\n                      component={ReactstrapInput}\n                    />\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col xs=\"6\">\n                    <Field\n                      label=\"Contract type\"\n                      name=\"contract_type\"\n                      component={ReactstrapSelect}\n                      inputprops={{\n                        name: \"contract_type\",\n                        options: options.contract_type,\n                        defaultOption: \"Select\"\n                      }}\n                    />\n                  </Col>\n                  <Col xs=\"6\">\n                    <Field\n                      label=\"Position\"\n                      name=\"position\"\n                      component={ReactstrapSelect}\n                      inputprops={{\n                        name: \"position\",\n                        id: \"position\",\n                        options: options.position,\n                        defaultOption: \"Select\"\n                      }}\n                    />\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col xs=\"6\">\n                    <Field\n                      label=\"Status\"\n                      name=\"status\"\n                      component={ReactstrapSelect}\n                      inputprops={{\n                        name: \"status\",\n                        id: \"status\",\n                        options: options.status,\n                        defaultOption: \"Select\"\n                      }}\n                    />\n                  </Col>\n                  <Col xs=\"6\">\n                    <Field\n                      label=\"Gender\"\n                      name=\"sex\"\n                      component={ReactstrapSelect}\n                      inputprops={{\n                        name: \"sex\",\n                        id: \"sex\",\n                        options: options.sex,\n                        defaultOption: \"Select\"\n                      }}\n                    />\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col xs=\"6\">\n                    <Field\n                      label=\"Roles\"\n                      name=\"roles\"\n                      component={ReactstrapSelect}\n                      inputprops={{\n                        name: \"roles\",\n                        id: \"roles\",\n                        options: options.roles,\n                        defaultOption: \"Select\"\n                      }}\n                    />\n                  </Col>\n                  <Col xs=\"6\">\n                    {!item &&\n                      <Field\n                        label=\"Password\"\n                        name=\"password\"\n                        component={ReactstrapInput}\n                      />\n                    }\n                  </Col>\n                </Row>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" type=\"submit\">Submit</Button>{' '}\n                <Button color=\"secondary\" onClick={toggle} type=\"submit\">Cancel</Button>\n              </ModalFooter>\n            </Form>\n          }}\n        </Formik>\n      </Modal>\n    </div >\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountForm)"]},"metadata":{},"sourceType":"module"}