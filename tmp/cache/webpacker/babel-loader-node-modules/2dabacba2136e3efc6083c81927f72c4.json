{"ast":null,"code":"import actionTypes from '../../commons/const/actionTypes';\nimport axios from 'axios';\nimport { showLoading, hideLoading } from './loading';\nimport { toastSuccess, toastError } from '../../commons/helpers/toastHelpers'; // import fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n// mock.onGet('/admin/user_timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onGet('admin/users').reply(200, fakeData.users);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/admin/user_dayoffs').reply(200, fakeData.dayoff);\n// mock.onPatch('/admin/uesr_dayoffs/14').reply(200, fakeData.dayoff[0]);\n// mock.onGet('/admin/user_overtimes').reply(200, fakeData.overtime);\n// mock.onPatch('admin/user_overtimes/14').reply(200, fakeData.overtime[0]);\n\nexport var getStaffTimeSheetByAdmin = function getStaffTimeSheetByAdmin(startDate, endDate, user_id, current_page, sort_type, sort_field, filter_type) {\n  var params = {\n    from_date: startDate,\n    to_date: endDate,\n    user_id: user_id,\n    current_page: String(current_page),\n    sort_type: sort_type,\n    sort_field: sort_field,\n    filter_type: filter_type\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/admin/user_timesheets', {\n      params: params\n    }).then(function (res) {\n      dispatch(setTimeSheet(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};\nexport var setTimeSheet = function setTimeSheet(data) {\n  return {\n    type: actionTypes.setTimeSheet,\n    data: data\n  };\n};\nexport var setUpdateTimeSheet = function setUpdateTimeSheet(id, start_at, end_at) {\n  var body = {\n    start_at: String(start_at),\n    end_at: String(end_at)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.patch(\"/admin/user_timesheets/\".concat(id), body).then(function (res) {\n      // dispatch({type: actionTypes.SET_UPDATE_TIMESHEETS, data: res.data})\n      toastSuccess('Successful');\n    })[\"catch\"](function (er) {\n      toastError(er);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/admin/actions/timeSheet.js"],"names":["actionTypes","axios","showLoading","hideLoading","toastSuccess","toastError","getStaffTimeSheetByAdmin","startDate","endDate","user_id","current_page","sort_type","sort_field","filter_type","params","from_date","to_date","String","dispatch","get","then","res","setTimeSheet","data","error","console","log","type","setUpdateTimeSheet","id","start_at","end_at","body","patch","er"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,WAAzC;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,oCAAzC,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,OAArB,EAA8BC,YAA9B,EAA4CC,SAA5C,EAAuDC,UAAvD,EAAmEC,WAAnE,EAAmF;AACzH,MAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAER,SADE;AAEbS,IAAAA,OAAO,EAAER,OAFI;AAGbC,IAAAA,OAAO,EAAEA,OAHI;AAIbC,IAAAA,YAAY,EAAEO,MAAM,CAACP,YAAD,CAJP;AAKbC,IAAAA,SAAS,EAAEA,SALE;AAMbC,IAAAA,UAAU,EAAEA,UANC;AAObC,IAAAA,WAAW,EAAEA;AAPA,GAAf;AASA,SAAO,UAACK,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CAACkB,GAAN,CAAU,wBAAV,EAAoC;AAAEL,MAAAA,MAAM,EAAEA;AAAV,KAApC,EACGM,IADH,CACQ,UAAUC,GAAV,EAAe;AACnBH,MAAAA,QAAQ,CAACI,YAAY,CAACD,GAAG,CAACE,IAAL,CAAb,CAAR;AACD,KAHH,WAIS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH,aAOW,YAAY;AACnBN,MAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAvBM;AAyBP,OAAO,IAAMmB,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAAE,SAAO;AAAEI,IAAAA,IAAI,EAAE3B,WAAW,CAACsB,YAApB;AAAkCC,IAAAA,IAAI,EAAEA;AAAxC,GAAP;AAAuD,CAAxF;AAEP,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,EAAD,EAAKC,QAAL,EAAeC,MAAf,EAA0B;AAC1D,MAAMC,IAAI,GAAG;AACXF,IAAAA,QAAQ,EAAEb,MAAM,CAACa,QAAD,CADL;AAEXC,IAAAA,MAAM,EAAEd,MAAM,CAACc,MAAD;AAFH,GAAb;AAIA,SAAO,UAAAb,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CAACgC,KAAN,kCAAsCJ,EAAtC,GAA4CG,IAA5C,EACCZ,IADD,CACM,UAAAC,GAAG,EAAI;AACX;AACAjB,MAAAA,YAAY,CAAC,YAAD,CAAZ;AACD,KAJD,WAKO,UAAA8B,EAAE,EAAI;AACX7B,MAAAA,UAAU,CAAC6B,EAAD,CAAV;AACD,KAPD,aAQS,YAAM;AACbhB,MAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACD,KAVD;AAWD,GAbD;AAcD,CAnBM","sourcesContent":["import actionTypes from '../../commons/const/actionTypes';\nimport axios from 'axios'\nimport { showLoading, hideLoading } from './loading'\nimport { toastSuccess, toastError } from '../../commons/helpers/toastHelpers';\n// import fakeData from '../../../../db'\n// import MockAdapter from 'axios-mock-adapter'\n// var mock = new MockAdapter(axios);\n\n// mock.onGet('/admin/user_timesheets').reply(200, fakeData.currentusertimesheet);\n// mock.onGet('admin/users').reply(200, fakeData.users);\n// mock.onGet('admin/users/14').reply(200, fakeData.users[3]);\n// mock.onPost('/users/14/change_password').reply(200);\n// mock.onGet('/admin/user_dayoffs').reply(200, fakeData.dayoff);\n// mock.onPatch('/admin/uesr_dayoffs/14').reply(200, fakeData.dayoff[0]);\n// mock.onGet('/admin/user_overtimes').reply(200, fakeData.overtime);\n// mock.onPatch('admin/user_overtimes/14').reply(200, fakeData.overtime[0]);\n\nexport const getStaffTimeSheetByAdmin = (startDate, endDate, user_id, current_page, sort_type, sort_field, filter_type) => {\n  const params = {\n    from_date: startDate,\n    to_date: endDate,\n    user_id: user_id,\n    current_page: String(current_page),\n    sort_type: sort_type,\n    sort_field: sort_field,\n    filter_type: filter_type\n  }\n  return (dispatch) => {\n    dispatch(showLoading())\n    axios.get('/admin/user_timesheets', { params: params })\n      .then(function (res) {\n        dispatch(setTimeSheet(res.data))\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .finally(function () {\n        dispatch(hideLoading())\n      });\n  }\n}\n\nexport const setTimeSheet = (data) => { return { type: actionTypes.setTimeSheet, data: data } }\n\nexport const setUpdateTimeSheet = (id, start_at, end_at) => {\n  const body = {\n    start_at: String(start_at),\n    end_at: String(end_at)\n  }\n  return dispatch => {\n    dispatch(showLoading())\n    axios.patch(`/admin/user_timesheets/${id}`, body)\n    .then(res => {\n      // dispatch({type: actionTypes.SET_UPDATE_TIMESHEETS, data: res.data})\n      toastSuccess('Successful');\n    })\n    .catch(er => {\n      toastError(er)\n    })\n    .finally(() => {\n      dispatch(hideLoading())\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}