{"ast":null,"code":"import actionTypes from '../const/actionTypes';\nimport axios from 'axios';\nimport { hideLoading, showLoading } from './loading';\nimport { toastError, toastSuccess } from '../../commons/helpers/toastHelpers'; // --------------GET OVERTIMES LIST---------------\n\nexport var setOvertimes = function setOvertimes(data) {\n  return {\n    type: actionTypes.GET_OVERTIMES,\n    data: data\n  };\n};\nexport var getOvertimes = function getOvertimes(data) {\n  var params = {\n    from_date: data.date.startTime,\n    to_date: data.date.endTime,\n    current_page: String(data.currentPage)\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.get('/overtimes', params).then(function (res) {\n      dispatch(setOvertimes(res.data));\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n}; // ---------------ADD OVERTIMES---------------\n\nvar setAddOvertimes = function setAddOvertimes(data) {\n  return {\n    type: ADD_OVERTIMES,\n    data: data\n  };\n};\n\nexport var addOvertimes = function addOvertimes(data) {\n  var params = {\n    date: data.date,\n    start_at: data.start_at,\n    end_at: data.end_at\n  };\n  return function (dispatch) {\n    dispatch(showLoading());\n    axios.post('/overtimes', params).then(function (res) {\n      dispatch(setAddOvertimes(res.data));\n      toastSuccess(\"Successful!\");\n    })[\"catch\"](function (error) {\n      console.log(error);\n      toastError(\"Fail!\");\n    })[\"finally\"](function () {\n      dispatch(hideLoading());\n    });\n  };\n}; // --------------- UPDATE OVERTIMES ----------------\n\nvar setUpdateOvertimes = function setUpdateOvertimes(data) {\n  return {\n    type: UPDATE_OVERTIMES,\n    data: data\n  };\n};\n\nexport var updateOvertimes = function updateOvertimes(id, data) {\n  params = {\n    date: data.date,\n    start_at: data.start_at,\n    end_at: data.end_at\n  };\n  axios.put(\"/overtimes/\".concat(id), params).then(function (res) {\n    dispatch(setUpdateOvertimes(data));\n    toastSuccess(\"Successful!\");\n  })[\"catch\"](function (error) {\n    console.log(error);\n    toastError(\"Fail!\");\n  })[\"finally\"](function () {\n    dispatch(hideLoading());\n  });\n};","map":{"version":3,"sources":["/home/phong/rails/imp/app/javascript/staff/actions/overtimes.js"],"names":["actionTypes","axios","hideLoading","showLoading","toastError","toastSuccess","setOvertimes","data","type","GET_OVERTIMES","getOvertimes","params","from_date","date","startTime","to_date","endTime","current_page","String","currentPage","dispatch","get","then","res","error","console","log","setAddOvertimes","ADD_OVERTIMES","addOvertimes","start_at","end_at","post","setUpdateOvertimes","UPDATE_OVERTIMES","updateOvertimes","id","put"],"mappings":"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","sourcesContent":["import actionTypes from '../const/actionTypes';\nimport axios from 'axios'\nimport { hideLoading, showLoading } from './loading'\nimport { toastError, toastSuccess } from '../../commons/helpers/toastHelpers'\n\n// --------------GET OVERTIMES LIST---------------\nexport const setOvertimes = (data) => {\n  return {\n    type: actionTypes.GET_OVERTIMES,\n    data\n  }\n}\n\nexport const getOvertimes = (data) => {\n  const params = {\n    from_date: data.date.startTime,\n    to_date: data.date.endTime,\n    current_page: String(data.currentPage)\n  }\n  return (dispatch) => {\n    dispatch(showLoading())\n    axios.get('/overtimes', params)\n      .then(function (res) {\n        dispatch(setOvertimes(res.data))\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n      .finally(function () {\n        dispatch(hideLoading())\n      });\n  }\n}\n\n// ---------------ADD OVERTIMES---------------\nconst setAddOvertimes = data => {\n  return {\n    type: ADD_OVERTIMES,\n    data\n  }\n}\nexport const addOvertimes = (data) => {\n  const params = {\n    date: data.date,\n    start_at: data.start_at,\n    end_at: data.end_at\n  }\n  return dispatch => {\n    dispatch(showLoading())\n    axios.post('/overtimes', params)\n      .then(function (res) {\n        dispatch(setAddOvertimes(res.data))\n        toastSuccess(\"Successful!\")\n      })\n      .catch(function (error) {\n        console.log(error)\n        toastError(\"Fail!\")\n      })\n      .finally(function () {\n        dispatch(hideLoading())\n      });\n  }\n}\n\n// --------------- UPDATE OVERTIMES ----------------\nconst setUpdateOvertimes = data => {\n  return {\n    type: UPDATE_OVERTIMES,\n    data\n  }\n}\n\nexport const updateOvertimes = (id, data) => {\n  params = {\n    date: data.date,\n    start_at: data.start_at,\n    end_at: data.end_at\n  }\n  axios.put(`/overtimes/${id}`, params)\n    .then(function (res) {\n      dispatch(setUpdateOvertimes(data))\n      toastSuccess(\"Successful!\")\n    })\n    .catch(function (error) {\n      console.log(error)\n      toastError(\"Fail!\")\n    })\n    .finally(function () {\n      dispatch(hideLoading())\n    });\n}"]},"metadata":{},"sourceType":"module"}