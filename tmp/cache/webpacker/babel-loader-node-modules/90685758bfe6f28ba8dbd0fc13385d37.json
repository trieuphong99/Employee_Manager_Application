{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar getIteratorMethod = require('../helpers/getIteratorMethod');\n\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\n\nvar Call = require('./Call');\n\nvar GetMethod = require('./GetMethod');\n\nvar IsArray = require('./IsArray');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-getiterator\n\n\nmodule.exports = function GetIterator(obj, method) {\n  var actualMethod = method;\n\n  if (arguments.length < 2) {\n    actualMethod = getIteratorMethod({\n      AdvanceStringIndex: AdvanceStringIndex,\n      GetMethod: GetMethod,\n      IsArray: IsArray,\n      Type: Type\n    }, obj);\n  }\n\n  var iterator = Call(actualMethod, obj);\n\n  if (Type(iterator) !== 'Object') {\n    throw new $TypeError('iterator must return an object');\n  }\n\n  return iterator;\n};","map":null,"metadata":{},"sourceType":"module"}