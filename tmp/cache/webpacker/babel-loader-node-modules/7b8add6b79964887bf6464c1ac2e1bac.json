{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _enzymeShallowEqual = _interopRequireDefault(require(\"enzyme-shallow-equal\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _airbnbPropTypes = require(\"airbnb-prop-types\");\n\nvar _reactWithStyles = require(\"react-with-styles\");\n\nvar _defaultPhrases = require(\"../defaultPhrases\");\n\nvar _getPhrasePropTypes = _interopRequireDefault(require(\"../utils/getPhrasePropTypes\"));\n\nvar _noflip = _interopRequireDefault(require(\"../utils/noflip\"));\n\nvar _LeftArrow = _interopRequireDefault(require(\"./LeftArrow\"));\n\nvar _RightArrow = _interopRequireDefault(require(\"./RightArrow\"));\n\nvar _ChevronUp = _interopRequireDefault(require(\"./ChevronUp\"));\n\nvar _ChevronDown = _interopRequireDefault(require(\"./ChevronDown\"));\n\nvar _NavPositionShape = _interopRequireDefault(require(\"../shapes/NavPositionShape\"));\n\nvar _ScrollableOrientationShape = _interopRequireDefault(require(\"../shapes/ScrollableOrientationShape\"));\n\nvar _constants = require(\"../constants\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? (0, _airbnbPropTypes.forbidExtraProps)(_objectSpread({}, _reactWithStyles.withStylesPropTypes, {\n  disablePrev: _propTypes[\"default\"].bool,\n  disableNext: _propTypes[\"default\"].bool,\n  inlineStyles: _propTypes[\"default\"].object,\n  isRTL: _propTypes[\"default\"].bool,\n  navPosition: _NavPositionShape[\"default\"],\n  navPrev: _propTypes[\"default\"].node,\n  navNext: _propTypes[\"default\"].node,\n  orientation: _ScrollableOrientationShape[\"default\"],\n  onPrevMonthClick: _propTypes[\"default\"].func,\n  onNextMonthClick: _propTypes[\"default\"].func,\n  // internationalization\n  phrases: _propTypes[\"default\"].shape((0, _getPhrasePropTypes[\"default\"])(_defaultPhrases.DayPickerNavigationPhrases)),\n  renderNavPrevButton: _propTypes[\"default\"].func,\n  renderNavNextButton: _propTypes[\"default\"].func,\n  showNavPrevButton: _propTypes[\"default\"].bool,\n  showNavNextButton: _propTypes[\"default\"].bool\n})) : {};\nvar defaultProps = {\n  disablePrev: false,\n  disableNext: false,\n  inlineStyles: null,\n  isRTL: false,\n  navPosition: _constants.NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  orientation: _constants.HORIZONTAL_ORIENTATION,\n  onPrevMonthClick: function onPrevMonthClick() {},\n  onNextMonthClick: function onNextMonthClick() {},\n  // internationalization\n  phrases: _defaultPhrases.DayPickerNavigationPhrases,\n  renderNavPrevButton: null,\n  renderNavNextButton: null,\n  showNavPrevButton: true,\n  showNavNextButton: true\n};\n\nvar DayPickerNavigation =\n/*#__PURE__*/\nfunction (_ref) {\n  (0, _inheritsLoose2[\"default\"])(DayPickerNavigation, _ref);\n\n  function DayPickerNavigation() {\n    return _ref.apply(this, arguments) || this;\n  }\n\n  var _proto = DayPickerNavigation.prototype;\n\n  _proto[!_react[\"default\"].PureComponent && \"shouldComponentUpdate\"] = function (nextProps, nextState) {\n    return !(0, _enzymeShallowEqual[\"default\"])(this.props, nextProps) || !(0, _enzymeShallowEqual[\"default\"])(this.state, nextState);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        inlineStyles = _this$props.inlineStyles,\n        isRTL = _this$props.isRTL,\n        disablePrev = _this$props.disablePrev,\n        disableNext = _this$props.disableNext,\n        navPosition = _this$props.navPosition,\n        navPrev = _this$props.navPrev,\n        navNext = _this$props.navNext,\n        onPrevMonthClick = _this$props.onPrevMonthClick,\n        onNextMonthClick = _this$props.onNextMonthClick,\n        orientation = _this$props.orientation,\n        phrases = _this$props.phrases,\n        renderNavPrevButton = _this$props.renderNavPrevButton,\n        renderNavNextButton = _this$props.renderNavNextButton,\n        showNavPrevButton = _this$props.showNavPrevButton,\n        showNavNextButton = _this$props.showNavNextButton,\n        styles = _this$props.styles;\n\n    if (!showNavNextButton && !showNavPrevButton) {\n      return null;\n    }\n\n    var isHorizontal = orientation === _constants.HORIZONTAL_ORIENTATION;\n    var isVertical = orientation !== _constants.HORIZONTAL_ORIENTATION;\n    var isVerticalScrollable = orientation === _constants.VERTICAL_SCROLLABLE;\n    var isBottomNavPosition = navPosition === _constants.NAV_POSITION_BOTTOM;\n    var hasInlineStyles = !!inlineStyles;\n    var navPrevIcon = navPrev;\n    var navNextIcon = navNext;\n    var isDefaultNavPrev = false;\n    var isDefaultNavNext = false;\n    var navPrevTabIndex = {};\n    var navNextTabIndex = {};\n\n    if (!navPrevIcon && !renderNavPrevButton && showNavPrevButton) {\n      navPrevTabIndex = {\n        tabIndex: '0'\n      };\n      isDefaultNavPrev = true;\n      var Icon = isVertical ? _ChevronUp[\"default\"] : _LeftArrow[\"default\"];\n\n      if (isRTL && !isVertical) {\n        Icon = _RightArrow[\"default\"];\n      }\n\n      navPrevIcon = _react[\"default\"].createElement(Icon, (0, _reactWithStyles.css)(isHorizontal && styles.DayPickerNavigation_svg__horizontal, isVertical && styles.DayPickerNavigation_svg__vertical, disablePrev && styles.DayPickerNavigation_svg__disabled));\n    }\n\n    if (!navNextIcon && !renderNavNextButton && showNavNextButton) {\n      navNextTabIndex = {\n        tabIndex: '0'\n      };\n      isDefaultNavNext = true;\n\n      var _Icon = isVertical ? _ChevronDown[\"default\"] : _RightArrow[\"default\"];\n\n      if (isRTL && !isVertical) {\n        _Icon = _LeftArrow[\"default\"];\n      }\n\n      navNextIcon = _react[\"default\"].createElement(_Icon, (0, _reactWithStyles.css)(isHorizontal && styles.DayPickerNavigation_svg__horizontal, isVertical && styles.DayPickerNavigation_svg__vertical, disableNext && styles.DayPickerNavigation_svg__disabled));\n    }\n\n    var isDefaultNav = isDefaultNavNext || isDefaultNavPrev;\n    return _react[\"default\"].createElement(\"div\", _reactWithStyles.css.apply(void 0, [styles.DayPickerNavigation, isHorizontal && styles.DayPickerNavigation__horizontal].concat((0, _toConsumableArray2[\"default\"])(isVertical ? [styles.DayPickerNavigation__vertical, isDefaultNav && styles.DayPickerNavigation__verticalDefault] : []), (0, _toConsumableArray2[\"default\"])(isVerticalScrollable ? [styles.DayPickerNavigation__verticalScrollable, isDefaultNav && styles.DayPickerNavigation__verticalScrollableDefault, showNavPrevButton && styles.DayPickerNavigation__verticalScrollable_prevNav] : []), (0, _toConsumableArray2[\"default\"])(isBottomNavPosition ? [styles.DayPickerNavigation__bottom, isDefaultNav && styles.DayPickerNavigation__bottomDefault] : []), [hasInlineStyles && inlineStyles])), showNavPrevButton && (renderNavPrevButton ? renderNavPrevButton({\n      ariaLabel: phrases.jumpToPrevMonth,\n      disabled: disablePrev,\n      onClick: disablePrev ? undefined : onPrevMonthClick,\n      onKeyUp: disablePrev ? undefined : function (e) {\n        var key = e.key;\n\n        if (key === 'Enter' || key === ' ') {\n          onPrevMonthClick(e);\n        }\n      },\n      onMouseUp: disablePrev ? undefined : function (e) {\n        e.currentTarget.blur();\n      }\n    }) : _react[\"default\"].createElement(\"div\", (0, _extends2[\"default\"])({\n      // eslint-disable-line jsx-a11y/interactive-supports-focus\n      role: \"button\"\n    }, navPrevTabIndex, _reactWithStyles.css.apply(void 0, [styles.DayPickerNavigation_button, isDefaultNavPrev && styles.DayPickerNavigation_button__default, disablePrev && styles.DayPickerNavigation_button__disabled].concat((0, _toConsumableArray2[\"default\"])(isHorizontal ? [styles.DayPickerNavigation_button__horizontal].concat((0, _toConsumableArray2[\"default\"])(isDefaultNavPrev ? [styles.DayPickerNavigation_button__horizontalDefault, isBottomNavPosition && styles.DayPickerNavigation_bottomButton__horizontalDefault, !isRTL && styles.DayPickerNavigation_leftButton__horizontalDefault, isRTL && styles.DayPickerNavigation_rightButton__horizontalDefault] : [])) : []), (0, _toConsumableArray2[\"default\"])(isVertical ? [styles.DayPickerNavigation_button__vertical].concat((0, _toConsumableArray2[\"default\"])(isDefaultNavPrev ? [styles.DayPickerNavigation_button__verticalDefault, styles.DayPickerNavigation_prevButton__verticalDefault, isVerticalScrollable && styles.DayPickerNavigation_prevButton__verticalScrollableDefault] : [])) : []))), {\n      \"aria-disabled\": disablePrev ? true : undefined,\n      \"aria-label\": phrases.jumpToPrevMonth,\n      onClick: disablePrev ? undefined : onPrevMonthClick,\n      onKeyUp: disablePrev ? undefined : function (e) {\n        var key = e.key;\n\n        if (key === 'Enter' || key === ' ') {\n          onPrevMonthClick(e);\n        }\n      },\n      onMouseUp: disablePrev ? undefined : function (e) {\n        e.currentTarget.blur();\n      }\n    }), navPrevIcon)), showNavNextButton && (renderNavNextButton ? renderNavNextButton({\n      ariaLabel: phrases.jumpToNextMonth,\n      disabled: disableNext,\n      onClick: disableNext ? undefined : onNextMonthClick,\n      onKeyUp: disableNext ? undefined : function (e) {\n        var key = e.key;\n\n        if (key === 'Enter' || key === ' ') {\n          onNextMonthClick(e);\n        }\n      },\n      onMouseUp: disableNext ? undefined : function (e) {\n        e.currentTarget.blur();\n      }\n    }) : _react[\"default\"].createElement(\"div\", (0, _extends2[\"default\"])({\n      // eslint-disable-line jsx-a11y/interactive-supports-focus\n      role: \"button\"\n    }, navNextTabIndex, _reactWithStyles.css.apply(void 0, [styles.DayPickerNavigation_button, isDefaultNavNext && styles.DayPickerNavigation_button__default, disableNext && styles.DayPickerNavigation_button__disabled].concat((0, _toConsumableArray2[\"default\"])(isHorizontal ? [styles.DayPickerNavigation_button__horizontal].concat((0, _toConsumableArray2[\"default\"])(isDefaultNavNext ? [styles.DayPickerNavigation_button__horizontalDefault, isBottomNavPosition && styles.DayPickerNavigation_bottomButton__horizontalDefault, isRTL && styles.DayPickerNavigation_leftButton__horizontalDefault, !isRTL && styles.DayPickerNavigation_rightButton__horizontalDefault] : [])) : []), (0, _toConsumableArray2[\"default\"])(isVertical ? [styles.DayPickerNavigation_button__vertical].concat((0, _toConsumableArray2[\"default\"])(isDefaultNavNext ? [styles.DayPickerNavigation_button__verticalDefault, styles.DayPickerNavigation_nextButton__verticalDefault, isVerticalScrollable && styles.DayPickerNavigation_nextButton__verticalScrollableDefault] : [])) : []))), {\n      \"aria-disabled\": disableNext ? true : undefined,\n      \"aria-label\": phrases.jumpToNextMonth,\n      onClick: disableNext ? undefined : onNextMonthClick,\n      onKeyUp: disableNext ? undefined : function (e) {\n        var key = e.key;\n\n        if (key === 'Enter' || key === ' ') {\n          onNextMonthClick(e);\n        }\n      },\n      onMouseUp: disableNext ? undefined : function (e) {\n        e.currentTarget.blur();\n      }\n    }), navNextIcon)));\n  };\n\n  return DayPickerNavigation;\n}(_react[\"default\"].PureComponent || _react[\"default\"].Component);\n\nDayPickerNavigation.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nDayPickerNavigation.defaultProps = defaultProps;\n\nvar _default = (0, _reactWithStyles.withStyles)(function (_ref2) {\n  var _ref2$reactDates = _ref2.reactDates,\n      color = _ref2$reactDates.color,\n      zIndex = _ref2$reactDates.zIndex;\n  return {\n    DayPickerNavigation: {\n      position: 'relative',\n      zIndex: zIndex + 2\n    },\n    DayPickerNavigation__horizontal: {\n      height: 0\n    },\n    DayPickerNavigation__vertical: {},\n    DayPickerNavigation__verticalScrollable: {},\n    DayPickerNavigation__verticalScrollable_prevNav: {\n      zIndex: zIndex + 1 // zIndex + 2 causes the button to show on top of the day of week headers\n\n    },\n    DayPickerNavigation__verticalDefault: {\n      position: 'absolute',\n      width: '100%',\n      height: 52,\n      bottom: 0,\n      left: (0, _noflip[\"default\"])(0)\n    },\n    DayPickerNavigation__verticalScrollableDefault: {\n      position: 'relative'\n    },\n    DayPickerNavigation__bottom: {\n      height: 'auto'\n    },\n    DayPickerNavigation__bottomDefault: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    DayPickerNavigation_button: {\n      cursor: 'pointer',\n      userSelect: 'none',\n      border: 0,\n      padding: 0,\n      margin: 0\n    },\n    DayPickerNavigation_button__default: {\n      border: \"1px solid \".concat(color.core.borderLight),\n      backgroundColor: color.background,\n      color: color.placeholderText,\n      ':focus': {\n        border: \"1px solid \".concat(color.core.borderMedium)\n      },\n      ':hover': {\n        border: \"1px solid \".concat(color.core.borderMedium)\n      },\n      ':active': {\n        background: color.backgroundDark\n      }\n    },\n    DayPickerNavigation_button__disabled: {\n      cursor: 'default',\n      border: \"1px solid \".concat(color.disabled),\n      ':focus': {\n        border: \"1px solid \".concat(color.disabled)\n      },\n      ':hover': {\n        border: \"1px solid \".concat(color.disabled)\n      },\n      ':active': {\n        background: 'none'\n      }\n    },\n    DayPickerNavigation_button__horizontal: {},\n    DayPickerNavigation_button__horizontalDefault: {\n      position: 'absolute',\n      top: 18,\n      lineHeight: 0.78,\n      borderRadius: 3,\n      padding: '6px 9px'\n    },\n    DayPickerNavigation_bottomButton__horizontalDefault: {\n      position: 'static',\n      marginLeft: 22,\n      marginRight: 22,\n      marginBottom: 30,\n      marginTop: -10\n    },\n    DayPickerNavigation_leftButton__horizontalDefault: {\n      left: (0, _noflip[\"default\"])(22)\n    },\n    DayPickerNavigation_rightButton__horizontalDefault: {\n      right: (0, _noflip[\"default\"])(22)\n    },\n    DayPickerNavigation_button__vertical: {},\n    DayPickerNavigation_button__verticalDefault: {\n      padding: 5,\n      background: color.background,\n      boxShadow: (0, _noflip[\"default\"])('0 0 5px 2px rgba(0, 0, 0, 0.1)'),\n      position: 'relative',\n      display: 'inline-block',\n      textAlign: 'center',\n      height: '100%',\n      width: '50%'\n    },\n    DayPickerNavigation_prevButton__verticalDefault: {},\n    DayPickerNavigation_nextButton__verticalDefault: {\n      borderLeft: (0, _noflip[\"default\"])(0)\n    },\n    DayPickerNavigation_nextButton__verticalScrollableDefault: {\n      width: '100%'\n    },\n    DayPickerNavigation_prevButton__verticalScrollableDefault: {\n      width: '100%'\n    },\n    DayPickerNavigation_svg__horizontal: {\n      height: 19,\n      width: 19,\n      fill: color.core.grayLight,\n      display: 'block'\n    },\n    DayPickerNavigation_svg__vertical: {\n      height: 42,\n      width: 42,\n      fill: color.text\n    },\n    DayPickerNavigation_svg__disabled: {\n      fill: color.disabled\n    }\n  };\n}, {\n  pureComponent: typeof _react[\"default\"].PureComponent !== 'undefined'\n})(DayPickerNavigation);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"module"}