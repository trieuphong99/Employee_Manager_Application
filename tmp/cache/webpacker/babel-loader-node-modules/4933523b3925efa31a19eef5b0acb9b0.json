{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $Math = GetIntrinsic('%Math%');\n\nvar ToNumber = require('./ToNumber');\n\nvar $isNaN = require('../helpers/isNaN');\n\nvar $isFinite = require('../helpers/isFinite');\n\nvar $sign = require('../helpers/sign');\n\nvar $mod = require('../helpers/mod');\n\nvar $floor = $Math.floor;\nvar $abs = $Math.abs; // http://www.ecma-international.org/ecma-262/5.1/#sec-9.7\n\nmodule.exports = function ToUint16(value) {\n  var number = ToNumber(value);\n\n  if ($isNaN(number) || number === 0 || !$isFinite(number)) {\n    return 0;\n  }\n\n  var posInt = $sign(number) * $floor($abs(number));\n  return $mod(posInt, 0x10000);\n};","map":null,"metadata":{},"sourceType":"module"}